{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/template.service\";\nexport class TemplateDetailsComponent {\n  constructor(route, router, templateService) {\n    this.route = route;\n    this.router = router;\n    this.templateService = templateService;\n    this.selectedSection = null;\n    this.fields = [];\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const templateId = params.get('id');\n      const sectionId = params.get('sectionId');\n      if (templateId) {\n        this.loadTemplate(templateId);\n        if (sectionId) {\n          this.loadSection(templateId, sectionId);\n        }\n      }\n    });\n  }\n  loadTemplate(id) {\n    this.templateService.getTemplateWithSections(id).subscribe(template => {\n      this.template = template;\n      this.selectedSection = null;\n    });\n  }\n  loadSection(templateId, sectionId) {\n    this.templateService.getSectionWithFields(templateId, sectionId).subscribe(section => {\n      this.selectedSection = section;\n      this.fields = section.fields || [];\n    });\n  }\n  viewSection(section) {\n    this.router.navigate([`/templates/${this.template.id}/sections/${section.id}`]);\n  }\n  backToSections() {\n    this.router.navigate([`/templates/${this.template.id}`]);\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    decls: 2,\n    vars: 0,\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"template-details works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wbGF0ZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJ0ZW1wbGF0ZWdlbmVyYXRvci9jb21wb25lbnRzL3RlbXBsYXRlLWRldGFpbHMvdGVtcGxhdGUtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnTEFBZ0wiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,wBAAwB;EAKnCC,YACUC,KAAqB,EACrBC,MAAc,EACdC,eAAgC;IAFhC,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,oBAAe,GAAfC,eAAe;IANzB,oBAAe,GAAmB,IAAI;IACtC,WAAM,GAAY,EAAE;EAMjB;EAEHC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MACnC,MAAMC,SAAS,GAAGH,MAAM,CAACE,GAAG,CAAC,WAAW,CAAC;MAEzC,IAAID,UAAU,EAAE;QACd,IAAI,CAACG,YAAY,CAACH,UAAU,CAAC;QAE7B,IAAIE,SAAS,EAAE;UACb,IAAI,CAACE,WAAW,CAACJ,UAAU,EAAEE,SAAS,CAAC;;;IAG7C,CAAC,CAAC;EACJ;EAEAC,YAAY,CAACE,EAAU;IACrB,IAAI,CAACV,eAAe,CAACW,uBAAuB,CAACD,EAAE,CAAC,CAACP,SAAS,CAACS,QAAQ,IAAG;MACpE,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC7B,CAAC,CAAC;EACJ;EAEAJ,WAAW,CAACJ,UAAkB,EAAEE,SAAiB;IAC/C,IAAI,CAACP,eAAe,CAACc,oBAAoB,CAACT,UAAU,EAAEE,SAAS,CAAC,CAACJ,SAAS,CAACY,OAAO,IAAG;MACnF,IAAI,CAACF,eAAe,GAAGE,OAAO;MAC9B,IAAI,CAACC,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAI,EAAE;IACpC,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACF,OAAgB;IAC1B,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,cAAc,IAAI,CAACN,QAAQ,CAACF,EAAE,aAAaK,OAAO,CAACL,EAAE,EAAE,CAAC,CAAC;EACjF;EAEAS,cAAc;IACZ,IAAI,CAACpB,MAAM,CAACmB,QAAQ,CAAC,CAAC,cAAc,IAAI,CAACN,QAAQ,CAACF,EAAE,EAAE,CAAC,CAAC;EAC1D;EAAC;qBA9CUd,wBAAwB;EAAA;EAAA;UAAxBA,wBAAwB;IAAAwB;IAAAC;IAAAC;IAAAV;MAAA;QCXrCW,yBAAG;QAAAA,uCAAuB;QAAAA,iBAAI","names":["TemplateDetailsComponent","constructor","route","router","templateService","ngOnInit","paramMap","subscribe","params","templateId","get","sectionId","loadTemplate","loadSection","id","getTemplateWithSections","template","selectedSection","getSectionWithFields","section","fields","viewSection","navigate","backToSections","selectors","decls","vars","i0"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["// template-details.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TemplateService } from '../../services/template.service';\nimport {T}\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html',\n  styleUrls: ['./template-details.component.css']\n})\nexport class TemplateDetailsComponent implements OnInit {\n  template!: Template;\n  selectedSection: Section | null = null;\n  fields: Field[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private templateService: TemplateService\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const templateId = params.get('id');\n      const sectionId = params.get('sectionId');\n\n      if (templateId) {\n        this.loadTemplate(templateId);\n        \n        if (sectionId) {\n          this.loadSection(templateId, sectionId);\n        }\n      }\n    });\n  }\n\n  loadTemplate(id: string) {\n    this.templateService.getTemplateWithSections(id).subscribe(template => {\n      this.template = template;\n      this.selectedSection = null;\n    });\n  }\n\n  loadSection(templateId: string, sectionId: string) {\n    this.templateService.getSectionWithFields(templateId, sectionId).subscribe(section => {\n      this.selectedSection = section;\n      this.fields = section.fields || [];\n    });\n  }\n\n  viewSection(section: Section) {\n    this.router.navigate([`/templates/${this.template.id}/sections/${section.id}`]);\n  }\n\n  backToSections() {\n    this.router.navigate([`/templates/${this.template.id}`]);\n  }\n}","<p>template-details works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}