{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/qrtemplategenerator/services/template.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"angular-custom-modal\";\nimport * as i5 from \"@angular/router\";\nconst _c0 = [\"addSectionModal\"];\nconst _c1 = [\"addFieldModal\"];\nfunction TemplateDetailsComponent_div_0_div_13_div_18_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 35);\n    i0.ɵɵtext(1, \" Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_div_13_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"div\")(3, \"span\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 31);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TemplateDetailsComponent_div_0_div_13_div_18_span_7_Template, 2, 0, \"span\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 20)(9, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_div_18_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const field_r14 = restoredCtx.$implicit;\n      const section_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.editField(section_r12, field_r14));\n    });\n    i0.ɵɵtext(10, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_div_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const field_r14 = restoredCtx.$implicit;\n      const section_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.deleteField(section_r12, field_r14.id));\n    });\n    i0.ɵɵtext(12, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const field_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(field_r14.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r13.getFieldType(field_r14.type), \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r14.isRequired);\n  }\n}\nfunction TemplateDetailsComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"h3\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.editSection(ctx_r21.template.id, section_r12));\n    });\n    i0.ɵɵtext(8, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.deleteSection(ctx_r23.template.id, section_r12.id));\n    });\n    i0.ɵɵtext(10, \" Delete \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 23)(12, \"div\", 24)(13, \"h4\", 25);\n    i0.ɵɵtext(14, \"Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.editField(section_r12));\n    });\n    i0.ɵɵtext(16, \" Add Field \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 27);\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_0_div_13_div_18_Template, 13, 3, \"div\", 28);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r12 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", section_r12.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r1.getSectionType(section_r12.type), \")\");\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", section_r12.fields);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.sectionParams.controls[\"id\"].value ? \"Edit Section\" : \"Add Section\");\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_21_div_5_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.sectionParams.controls[\"title\"].errors == null ? null : ctx_r25.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_21_div_16_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.sectionParams.controls[\"title\"].errors == null ? null : ctx_r26.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateDetailsComponent_div_0_ng_template_21_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.saveSection());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 39);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 40);\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_0_ng_template_21_div_5_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n    i0.ɵɵelement(11, \"input\", 42);\n    i0.ɵɵtext(12, \" Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵelement(14, \"input\", 43);\n    i0.ɵɵtext(15, \" Table \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(16, TemplateDetailsComponent_div_0_ng_template_21_div_16_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 44)(18, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_ng_template_21_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r30);\n      i0.ɵɵnextContext();\n      const _r2 = i0.ɵɵreference(18);\n      return i0.ɵɵresetView(_r2.close());\n    });\n    i0.ɵɵtext(19, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 46);\n    i0.ɵɵtext(21, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r6.sectionParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.sectionParams.controls[\"title\"].invalid && ctx_r6.sectionParams.controls[\"title\"].touched);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.sectionParams.controls[\"title\"].invalid && ctx_r6.sectionParams.controls[\"title\"].touched);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.fieldParams.controls[\"id\"].value ? \"Edit Field\" : \"Add Field\");\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title cannot be more than 100 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵtemplate(2, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_2_Template, 2, 0, \"div\", 48);\n    i0.ɵɵtemplate(3, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_3_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"maxlength\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_27_div_18_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.fieldParams.controls[\"type\"].errors == null ? null : ctx_r33.fieldParams.controls[\"type\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateDetailsComponent_div_0_ng_template_27_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.saveField());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 49);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 50);\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_0_ng_template_27_div_5_Template, 4, 3, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\", 51);\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 52)(10, \"option\", 53);\n    i0.ɵɵtext(11, \"Text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 54);\n    i0.ɵɵtext(13, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 55);\n    i0.ɵɵtext(15, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 56);\n    i0.ɵɵtext(17, \"Boolean\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_0_ng_template_27_div_18_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 38)(20, \"label\", 57);\n    i0.ɵɵtext(21, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 44)(24, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_ng_template_27_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r39);\n      i0.ɵɵnextContext();\n      const _r7 = i0.ɵɵreference(24);\n      return i0.ɵɵresetView(_r7.close());\n    });\n    i0.ɵɵtext(25, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 46);\n    i0.ɵɵtext(27, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r11.fieldParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.fieldParams.controls[\"title\"].invalid && ctx_r11.fieldParams.controls[\"title\"].touched);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.fieldParams.controls[\"type\"].invalid && ctx_r11.fieldParams.controls[\"type\"].touched);\n  }\n}\nfunction TemplateDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\")(3, \"h2\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\", 5);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵtext(11, \" Back to List \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 7);\n    i0.ɵɵtemplate(13, TemplateDetailsComponent_div_0_div_13_Template, 19, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.editSection(ctx_r41.template.id));\n    });\n    i0.ɵɵtext(16, \" Add New Section \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"modal\", 11, 12);\n    i0.ɵɵtemplate(19, TemplateDetailsComponent_div_0_ng_template_19_Template, 2, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(21, TemplateDetailsComponent_div_0_ng_template_21_Template, 22, 3, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"modal\", 11, 15);\n    i0.ɵɵtemplate(25, TemplateDetailsComponent_div_0_ng_template_25_Template, 2, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(27, TemplateDetailsComponent_div_0_ng_template_27_Template, 28, 3, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.template.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID: \", ctx_r0.template.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Unique Code: \", ctx_r0.template.uniqeCode, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.template.sections);\n  }\n}\nexport class TemplateDetailsComponent {\n  constructor(fb, templateService) {\n    this.fb = fb;\n    this.templateService = templateService;\n    this.template = {\n      id: 0,\n      title: '',\n      uniqeCode: '',\n      sections: []\n    };\n    this.sectionUpdated = new EventEmitter();\n    this.selectedTemplateId = null;\n    this.selectedSectionId = null;\n    this.templateList = [];\n    this.loadingSections = false;\n    this.loadingFields = false;\n    this.initForms();\n  }\n  ngOnInit() {\n    console.log(this.template);\n  }\n  ngOnChanges() {\n    console.log('Template received:', this.template);\n  }\n  initForms() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required]\n    });\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false]\n    });\n  }\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false, Validators.required]\n    });\n  }\n  editSection(templateId, section = null) {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initForms();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n  }\n  // In TemplateDetailsComponent\n  // Modify saveSection() method\n  saveSection() {\n    if (this.sectionParams.invalid) return;\n    const section = this.sectionParams.value;\n    const templateId = this.template?.id;\n    if (templateId === undefined) {\n      this.showMessage('Template ID is missing.', 'error');\n      return;\n    }\n    const addSectionDTO = {\n      title: section.title,\n      type: this.mapSectionType(section.type) // Ensure type is mapped correctly\n    };\n\n    const request = section.id ? this.templateService.updateSection(templateId.toString(), section.id.toString(), addSectionDTO) : this.templateService.addSection(templateId.toString(), addSectionDTO);\n    request.subscribe({\n      next: updatedSection => {\n        if (section.id) {\n          const index = this.template.sections.findIndex(s => s.id === section.id);\n          this.template.sections[index] = updatedSection;\n        } else {\n          this.template.sections.push(updatedSection);\n        }\n        this.sectionUpdated.emit();\n        this.addSectionModal.close();\n      },\n      error: error => this.handleErrorResponse(error)\n    });\n  }\n  mapSectionType(type) {\n    const sectionTypeMap = {\n      'Form': 0,\n      'Table': 1\n    };\n    return sectionTypeMap[type] ?? 0;\n  }\n  handleSectionUpdate(section) {\n    const template = this.templateList.find(t => t.id === this.selectedTemplateId);\n    template?.sections?.map(s => s.id === section.id ? Object.assign(s, section) : s);\n    this.showMessage('Section updated successfully.');\n    this.addSectionModal.close();\n  }\n  handleSectionAdd(newSection) {\n    const template = this.templateList.find(t => t.id === this.selectedTemplateId);\n    if (template) template.sections = [...(template.sections || []), newSection];\n    this.showMessage('Section added successfully.');\n    this.addSectionModal.close();\n  }\n  // private mapSectionType(type: string): number {\n  //   const sectionTypeMap: { [key: string]: number } = {\n  //     'form': 0,\n  //     'table': 1,\n  //   };\n  //   return sectionTypeMap[type.toLowerCase()] ?? 0;\n  // }\n  handleErrorResponse(error) {\n    console.error('Error:', error);\n    this.showMessage(error.error?.message || 'An unknown error occurred!', 'error');\n  }\n  showMessage(msg, type = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000\n    });\n  }\n  deleteSection(templateId, sectionId) {\n    this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe(() => {\n      const template = this.templateList.find(t => t.id === templateId);\n      if (template) template.sections = template.sections?.filter(s => s.id !== sectionId) || [];\n      this.showMessage('Section deleted successfully.');\n    }, error => this.showMessage(error, 'error'));\n  }\n  loadSections(templateId) {\n    this.templateService.getTemplateById(templateId.toString()).subscribe(template => {\n      const existingTemplate = this.templateList.find(t => t.id === templateId);\n      if (existingTemplate) existingTemplate.sections = template.sections;\n    });\n  }\n  getTemplateIdBySectionId(sectionId) {\n    return this.templateList.find(template => template.sections?.some(s => s.id === sectionId))?.id;\n  }\n  toggleSections() {\n    if (!this.template.sections?.length && !this.loadingSections) {\n      this.loadingSections = true;\n      this.templateService.getTemplateById(this.template.id.toString()).subscribe(fullTemplate => {\n        this.template.sections = fullTemplate.sections;\n        this.loadingSections = false;\n      });\n    }\n  }\n  toggleFields(section) {\n    if (!section.fields?.length && !this.loadingFields) {\n      this.loadingFields = true;\n      this.templateService.getSectionFields(this.template.id.toString(), section.id.toString()).subscribe(fields => {\n        section.fields = fields;\n        this.loadingFields = false;\n      });\n    }\n  }\n  loadFields(section) {\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      this.templateService.getSectionFields(templateId.toString(), section.id.toString()).subscribe(fields => {\n        section.fields = fields;\n      });\n    }\n  }\n  editField(section, field = null) {\n    this.selectedSectionId = section.id;\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    this.selectedTemplateId = templateId !== undefined ? templateId : null;\n    this.addFieldModal.open();\n    this.initFieldForm();\n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired\n      });\n    }\n  }\n  deleteField(section, fieldId) {\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    if (templateId !== undefined) {\n      this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        const existingSection = template?.sections?.find(s => s.id === section.id);\n        if (existingSection && existingSection.fields) {\n          existingSection.fields = existingSection.fields.filter(f => f.id !== fieldId);\n        }\n        this.showMessage('Field has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    } else {\n      this.showMessage('Failed to delete field: Template ID is missing.', 'error');\n    }\n  }\n  saveField() {\n    if (this.fieldParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n    const field = this.fieldParams.value;\n    const sectionId = this.selectedSectionId;\n    const templateId = this.selectedTemplateId;\n    if (templateId != null && sectionId != null) {\n      const addFieldDTO = {\n        title: field.title,\n        type: this.mapFieldType(field.type),\n        isRequired: field.isRequired\n      };\n      if (field.id != null && field.id !== 0) {\n        // In saveField() update case\n        this.templateService.updateField(templateId.toString(), sectionId.toString(), field.id.toString(), addFieldDTO).subscribe(updatedField => {\n          // Find and update the local field\n          const template = this.templateList.find(t => t.id === templateId);\n          const section = template?.sections?.find(s => s.id === sectionId);\n          if (section?.fields) {\n            const index = section.fields.findIndex(f => f.id === updatedField.id);\n            if (index > -1) {\n              section.fields = [...section.fields.slice(0, index), updatedField, ...section.fields.slice(index + 1)];\n            }\n          }\n          this.showMessage('Field updated successfully');\n          this.addFieldModal.close();\n        }, error => this.handleErrorResponse(error));\n      } else {\n        // In saveField() add case\n        this.templateService.addField(templateId.toString(), sectionId.toString(), addFieldDTO).subscribe(newField => {\n          // Find and update the local data\n          const template = this.templateList.find(t => t.id === templateId);\n          const section = template?.sections?.find(s => s.id === sectionId);\n          if (section) {\n            if (!section.fields) section.fields = [];\n            section.fields = [...section.fields, newField]; // Immutable update\n          }\n\n          this.showMessage('Field added successfully');\n          this.addFieldModal.close();\n        }, error => this.handleErrorResponse(error));\n      }\n    } else {\n      this.showMessage('Template ID or Section ID is missing.', 'error');\n    }\n  }\n  mapFieldType(type) {\n    const fieldTypeMap = {\n      'text': 0,\n      'number': 1,\n      'date': 2,\n      'boolean': 3\n    };\n    return fieldTypeMap[type.toLowerCase()] ?? 0;\n  }\n  getSectionType(type) {\n    return ['Form', 'Table'][type] || 'Unknown';\n  }\n  getFieldType(type) {\n    return ['Text', 'Number', 'Date', 'Boolean'][type] || 'Unknown';\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    viewQuery: function TemplateDetailsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSectionModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addFieldModal = _t.first);\n      }\n    },\n    inputs: {\n      template: \"template\"\n    },\n    outputs: {\n      sectionUpdated: \"sectionUpdated\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container mx-auto p-6\", 4, \"ngIf\"], [1, \"container\", \"mx-auto\", \"p-6\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-6\"], [1, \"text-2xl\", \"font-bold\"], [1, \"mt-2\", \"text-gray-600\"], [1, \"mr-4\"], [\"routerLink\", \"/admin/templates\", 1, \"btn\", \"btn-outline-primary\"], [1, \"mt-8\", \"space-y-6\"], [\"class\", \"card shadow-lg\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-8\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"no-footer\"], [\"addSectionModal\", \"\"], [\"modalHeader\", \"\"], [\"modalBody\", \"\"], [\"addFieldModal\", \"\"], [1, \"card\", \"shadow-lg\"], [1, \"card-header\", \"flex\", \"justify-between\", \"items-center\", \"bg-gray-100\"], [1, \"text-xl\", \"font-semibold\"], [1, \"text-sm\", \"text-gray-500\"], [1, \"flex\", \"gap-2\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"card-body\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-4\"], [1, \"font-medium\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"space-y-4\"], [\"class\", \"field-item border rounded p-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"field-item\", \"border\", \"rounded\", \"p-4\"], [1, \"flex\", \"justify-between\", \"items-center\"], [1, \"text-sm\", \"text-gray-500\", \"ml-2\"], [\"class\", \"badge bg-orange-100 text-orange-600 ml-2\", 4, \"ngIf\"], [1, \"btn\", \"btn-xs\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-xs\", \"btn-danger\", 3, \"click\"], [1, \"badge\", \"bg-orange-100\", \"text-orange-600\", \"ml-2\"], [1, \"!font-medium\"], [\"ngNativeValidate\", \"\", 1, \"text-sm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-5\"], [\"for\", \"sectionTitle\"], [\"id\", \"sectionTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"class\", \"text-red-500\", 4, \"ngIf\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"form\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"table\"], [1, \"mt-8\", \"flex\", \"items-center\", \"justify-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"ltr:ml-4\", \"rtl:ml-4\"], [1, \"text-red-500\"], [4, \"ngIf\"], [\"for\", \"fieldTitle\"], [\"id\", \"fieldTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"for\", \"fieldType\"], [\"id\", \"fieldType\", \"formControlName\", \"type\", 1, \"form-select\"], [\"value\", \"Text\"], [\"value\", \"Number\"], [\"value\", \"Date\"], [\"value\", \"Boolean\"], [\"for\", \"isRequired\"], [\"id\", \"isRequired\", \"type\", \"checkbox\", \"formControlName\", \"isRequired\"]],\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TemplateDetailsComponent_div_0_Template, 29, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.template);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.ModalComponent, i1.FormGroupDirective, i1.FormControlName, i5.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","Swal","i0","TemplateDetailsComponent","constructor","fb","templateService","id","title","uniqeCode","sections","initForms","ngOnInit","console","log","template","ngOnChanges","sectionParams","group","required","minLength","maxLength","type","fieldParams","isRequired","initFieldForm","editSection","templateId","section","selectedTemplateId","addSectionModal","open","setValue","saveSection","invalid","value","undefined","showMessage","addSectionDTO","mapSectionType","request","updateSection","toString","addSection","subscribe","next","updatedSection","index","findIndex","s","push","sectionUpdated","emit","close","error","handleErrorResponse","sectionTypeMap","handleSectionUpdate","templateList","find","t","map","Object","assign","handleSectionAdd","newSection","message","msg","fire","icon","toast","position","showConfirmButton","timer","deleteSection","sectionId","filter","loadSections","getTemplateById","existingTemplate","getTemplateIdBySectionId","some","toggleSections","length","loadingSections","fullTemplate","toggleFields","fields","loadingFields","getSectionFields","loadFields","editField","field","selectedSectionId","addFieldModal","deleteField","fieldId","existingSection","f","saveField","addFieldDTO","mapFieldType","updateField","updatedField","slice","addField","newField","fieldTypeMap","toLowerCase","getSectionType","getFieldType","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'angular-custom-modal';\nimport Swal from 'sweetalert2';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Template } from 'src/app/qrtemplategenerator/Models/Template';\nimport { Section } from 'src/app/qrtemplategenerator/Models/Section';\nimport { Field } from 'src/app/qrtemplategenerator/Models/Field';\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html'\n})\nexport class TemplateDetailsComponent {\n  @Input() template: Template = { id: 0, title: '', uniqeCode: '', sections: [] };\n  @Output() sectionUpdated = new EventEmitter<void>();\n  @ViewChild('addSectionModal') addSectionModal!: ModalComponent;\n  @ViewChild('addFieldModal') addFieldModal!: ModalComponent;\n\n  sectionParams!: FormGroup;\n  fieldParams!: FormGroup;\n  selectedSection?: Section;\n  selectedTemplateId: number | null = null;\n  selectedSectionId: number | null = null;\n  templateList: Template[] = [];\n\n  loadingSections = false;\n  loadingFields = false;\n\n  constructor(private fb: FormBuilder, private templateService: TemplateService) {\n    this.initForms();\n  }\n\n  ngOnInit(): void {\n    console.log(this.template);\n  }\n\n  ngOnChanges(): void {\n    console.log('Template received:', this.template);\n  }\n\n  private initForms(): void {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n    });\n\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false],\n    });\n  }\n\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false, Validators.required],\n    });\n  }\n\n\n  editSection(templateId: number, section: Section | null = null): void {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initForms();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type,\n      });\n    }\n  }\n  \n\n  // In TemplateDetailsComponent\n\n// Modify saveSection() method\nsaveSection() {\n  if (this.sectionParams.invalid) return;\n\n  const section: Section = this.sectionParams.value;\n  const templateId = this.template?.id;\n\n  if (templateId === undefined) {\n    this.showMessage('Template ID is missing.', 'error');\n    return;\n  }\n\n  const addSectionDTO = {\n    title: section.title,\n    type: this.mapSectionType(section.type) // Ensure type is mapped correctly\n  };\n\n  const request = section.id \n    ? this.templateService.updateSection(templateId.toString(), section.id.toString(), addSectionDTO)\n    : this.templateService.addSection(templateId.toString(), addSectionDTO);\n\n  request.subscribe({\n    next: (updatedSection) => {\n      if (section.id) {\n        const index = this.template.sections.findIndex(s => s.id === section.id);\n        this.template.sections[index] = updatedSection;\n      } else {\n        this.template.sections.push(updatedSection);\n      }\n      this.sectionUpdated.emit();\n      this.addSectionModal.close();\n    },\n    error: (error) => this.handleErrorResponse(error)\n  });\n}\n\nprivate mapSectionType(type: any): number {\n  const sectionTypeMap: { [key: string]: number } = {\n    'Form': 0,\n    'Table': 1,\n  };\n  return sectionTypeMap[type] ?? 0; \n}\n  private handleSectionUpdate(section: Section): void {\n    const template = this.templateList.find(t => t.id === this.selectedTemplateId);\n    template?.sections?.map(s => s.id === section.id ? Object.assign(s, section) : s);\n    this.showMessage('Section updated successfully.');\n    this.addSectionModal.close();\n  }\n\n  private handleSectionAdd(newSection: Section): void {\n    const template = this.templateList.find(t => t.id === this.selectedTemplateId);\n    if (template) template.sections = [...(template.sections || []), newSection];\n    this.showMessage('Section added successfully.');\n    this.addSectionModal.close();\n  }\n\n  // private mapSectionType(type: string): number {\n  //   const sectionTypeMap: { [key: string]: number } = {\n  //     'form': 0,\n  //     'table': 1,\n  //   };\n  //   return sectionTypeMap[type.toLowerCase()] ?? 0;\n  // }\n  \n  private handleErrorResponse(error: any): void {\n    console.error('Error:', error);\n    this.showMessage(error.error?.message || 'An unknown error occurred!', 'error');\n  }\n\n  showMessage(msg: string, type: 'success' | 'error' = 'success'): void {\n    Swal.fire({ icon: type, title: msg, toast: true, position: 'top', showConfirmButton: false, timer: 3000 });\n  }\n\n  deleteSection(templateId: number, sectionId: number): void {\n    this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe(() => {\n      const template = this.templateList.find(t => t.id === templateId);\n      if (template) template.sections = template.sections?.filter(s => s.id !== sectionId) || [];\n      this.showMessage('Section deleted successfully.');\n    }, error => this.showMessage(error, 'error'));\n  }\n\n  loadSections(templateId: number): void {\n    this.templateService.getTemplateById(templateId.toString()).subscribe(template => {\n      const existingTemplate = this.templateList.find(t => t.id === templateId);\n      if (existingTemplate) existingTemplate.sections = template.sections;\n    });\n  }\n\n  getTemplateIdBySectionId(sectionId: number): number | undefined {\n    return this.templateList.find(template => template.sections?.some(s => s.id === sectionId))?.id;\n  }\n\n  toggleSections() {\n    if (!this.template.sections?.length && !this.loadingSections) {\n      this.loadingSections = true;\n      this.templateService.getTemplateById(this.template.id.toString())\n        .subscribe(fullTemplate => {\n          this.template.sections = fullTemplate.sections;\n          this.loadingSections = false;\n        });\n    }\n  }\n  toggleFields(section: Section) {\n    if (!section.fields?.length && !this.loadingFields) {\n      this.loadingFields = true;\n      this.templateService.getSectionFields(\n        this.template.id.toString(), \n        section.id.toString()\n      ).subscribe(fields => {\n        section.fields = fields;\n        this.loadingFields = false;\n      });\n    }\n  }\n\n  loadFields(section: Section) {\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      this.templateService.getSectionFields(templateId.toString(), section.id.toString()).subscribe((fields) => {\n        section.fields = fields;\n      });\n    }\n  }\n\n  editField(section: Section, field: Field | null = null) {\n    this.selectedSectionId = section.id;\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    this.selectedTemplateId = templateId !== undefined ? templateId : null; \n    this.addFieldModal.open();  \n    this.initFieldForm();  \n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired,\n      });\n    }\n  }\n\n  deleteField(section: Section, fieldId: number) {\n    const templateId = this.getTemplateIdBySectionId(section.id); \n    \n   \n  \n    if (templateId !== undefined) {  \n      this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        const existingSection = template?.sections?.find(s => s.id === section.id);\n        if (existingSection && existingSection.fields) {\n          existingSection.fields = existingSection.fields.filter(f => f.id !== fieldId);\n        }\n        this.showMessage('Field has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    } else {\n      this.showMessage('Failed to delete field: Template ID is missing.', 'error');\n    }\n  }\n  saveField() {\n   \n    \n    if (this.fieldParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n  \n    const field: Field = this.fieldParams.value;\n    const sectionId = this.selectedSectionId;\n    const templateId = this.selectedTemplateId;\n  \n  \n  \n    if (templateId != null && sectionId != null) {\n      const addFieldDTO = {\n        title: field.title,\n        type: this.mapFieldType(field.type), // Convert type correctly\n        isRequired: field.isRequired,\n      };\n  \n    \n  \n      if (field.id != null && field.id !== 0) {\n       \n       // In saveField() update case\nthis.templateService.updateField(templateId.toString(), sectionId.toString(), field.id.toString(), addFieldDTO)\n.subscribe(\n  (updatedField) => {\n    // Find and update the local field\n    const template = this.templateList.find(t => t.id === templateId);\n    const section = template?.sections?.find(s => s.id === sectionId);\n    \n    if (section?.fields) {\n      const index = section.fields.findIndex(f => f.id === updatedField.id);\n      if (index > -1) {\n        section.fields = [\n          ...section.fields.slice(0, index),\n          updatedField,\n          ...section.fields.slice(index + 1)\n        ];\n      }\n    }\n    \n    this.showMessage('Field updated successfully');\n    this.addFieldModal.close();\n  },\n  (error) => this.handleErrorResponse(error)\n);\n      } else {\n      \n     // In saveField() add case\nthis.templateService.addField(templateId.toString(), sectionId.toString(), addFieldDTO)\n.subscribe(\n  (newField) => {\n    // Find and update the local data\n    const template = this.templateList.find(t => t.id === templateId);\n    const section = template?.sections?.find(s => s.id === sectionId);\n    \n    if (section) {\n      if (!section.fields) section.fields = [];\n      section.fields = [...section.fields, newField]; // Immutable update\n    }\n    \n    this.showMessage('Field added successfully');\n    this.addFieldModal.close();\n  },\n  (error) => this.handleErrorResponse(error)\n);\n      }\n    } else {\n      this.showMessage('Template ID or Section ID is missing.', 'error');\n    }\n  }\n  \n \n  private mapFieldType(type: string): number {\n    const fieldTypeMap: { [key: string]: number } = {\n      'text': 0,\n      'number': 1,\n      'date': 2,\n      'boolean': 3,\n    };\n    return fieldTypeMap[type.toLowerCase()] ?? 0;\n  }\n  \n  getSectionType(type: number): string {\n    return ['Form', 'Table'][type] || 'Unknown';\n  }\n  \n  getFieldType(type: number): string {\n    return ['Text', 'Number', 'Date', 'Boolean'][type] || 'Unknown';\n  }\n\n\n  \n  \n}\n","<div class=\"container mx-auto p-6\" *ngIf=\"template\">\n\n    <!-- Template Header -->\n    <div class=\"flex items-center justify-between mb-6\">\n      <div>\n        <h2 class=\"text-2xl font-bold\">{{ template.title }}</h2>\n        <div class=\"mt-2 text-gray-600\">\n          <span class=\"mr-4\">ID: {{ template.id }}</span>\n          <span>Unique Code: {{ template.uniqeCode }}</span>\n        </div>\n      </div>\n      <button routerLink=\"/admin/templates\" class=\"btn btn-outline-primary\">\n        Back to List\n      </button>\n    </div>\n  \n    <!-- Sections -->\n    <div class=\"mt-8 space-y-6\">\n      <div *ngFor=\"let section of template.sections\" class=\"card shadow-lg\">\n        <div class=\"card-header flex justify-between items-center bg-gray-100\">\n            <h3 class=\"text-xl font-semibold\">\n                {{ section.title }}\n                <span class=\"text-sm text-gray-500\">({{ getSectionType(section.type) }})</span>\n              </h3>\n          <div class=\"flex gap-2\">\n            <button (click)=\"editSection(template.id, section)\" class=\"btn btn-sm btn-primary\">\n              Edit\n            </button>\n            <button (click)=\"deleteSection(template.id, section.id)\" class=\"btn btn-sm btn-danger\">\n              Delete\n            </button>\n          </div>\n        </div>\n  \n        <!-- Fields -->\n        <div class=\"card-body\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h4 class=\"font-medium\">Fields</h4>\n            <button (click)=\"editField(section)\" class=\"btn btn-sm btn-success\">\n              Add Field\n            </button>\n          </div>\n  \n          <div class=\"space-y-4\">\n            <div *ngFor=\"let field of section.fields\" class=\"field-item border rounded p-4\">\n              <div class=\"flex justify-between items-center\">\n                <div>\n                  <span class=\"font-medium\">{{ field.title }}</span>\n                  <span class=\"text-sm text-gray-500 ml-2\">({{ getFieldType(field.type) }})</span>\n                  <span *ngIf=\"field.isRequired\" class=\"badge bg-orange-100 text-orange-600 ml-2\">\n                    Required\n                  </span>\n                </div>\n                <div class=\"flex gap-2\">\n                  <button (click)=\"editField(section, field)\" class=\"btn btn-xs btn-primary\">\n                    Edit\n                  </button>\n                  <button (click)=\"deleteField(section, field.id)\" class=\"btn btn-xs btn-danger\">\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Add Section Button -->\n    <div class=\"mt-8\">\n      <button (click)=\"editSection(template.id)\" class=\"btn btn-primary\">\n        Add New Section\n      </button>\n    </div>\n  \n    <!-- Include your existing modals here -->\n    <modal #addSectionModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ sectionParams.controls['id'].value ? 'Edit Section' : 'Add Section' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"sectionParams\" class=\"text-sm\" (ngSubmit)=\"saveSection()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"sectionTitle\">Title</label>\n                    <input id=\"sectionTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label>Type</label>\n                    <div>\n                        <label>\n                            <input type=\"radio\" formControlName=\"type\" value=\"form\" /> Form\n                        </label>\n                        <label>\n                            <input type=\"radio\" formControlName=\"type\" value=\"table\" /> Table\n                        </label>\n                    </div>\n                    <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                    </div>\n                </div>\n                <div class=\"mt-8 flex items-center justify-end\">\n                    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addSectionModal.close()\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n                </div>\n            </form>\n        </ng-template>\n    </modal>\n    <modal #addFieldModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ fieldParams.controls['id'].value ? 'Edit Field' : 'Add Field' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"fieldParams\" class=\"text-sm\" (ngSubmit)=\"saveField()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"fieldTitle\">Title</label>\n                    <input id=\"fieldTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"fieldParams.controls['title'].invalid && fieldParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['required']\">Title is required.</div>\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['minlength']\">Title must be at least 3 characters long.</div>\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['maxlength']\">Title cannot be more than 100 characters long.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label for=\"fieldType\">Type</label>\n                    \n          <select id=\"fieldType\" class=\"form-select\" formControlName=\"type\">\n            <option value=\"Text\">Text</option>\n            <option value=\"Number\">Number</option>\n            <option value=\"Date\">Date</option>\n            <option value=\"Boolean\">Boolean</option>\n          </select>\n          <div *ngIf=\"fieldParams.controls['type'].invalid && fieldParams.controls['type'].touched\" class=\"text-red-500\">\n            <div *ngIf=\"fieldParams.controls['type'].errors?.['required']\">Type is required.</div>\n          </div>\n        </div>\n        <div class=\"mb-5\">\n          <label for=\"isRequired\">Required</label>\n          <input id=\"isRequired\" type=\"checkbox\" formControlName=\"isRequired\" />\n        </div>\n        <div class=\"mt-8 flex items-center justify-end\">\n          <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFieldModal.close()\">Cancel</button>\n          <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n        </div>\n      </form>\n    </ng-template>\n  </modal>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}