{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Electronica Care/Downloads/QRCodeGenerator-main/QR-Generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class authGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const isLoggedIn = yield firstValueFrom(_this.authService.isLoggedIn$); // ✅ Convert observable to boolean\n      const role = _this.authService.getRole();\n      if (isLoggedIn) {\n        return true; // ✅ Allow both Admins & Employees\n      }\n\n      _this.router.navigate(['/auth/login']); // Redirect unauthorized users\n      return false;\n    })();\n  }\n  static #_ = this.ɵfac = function authGuard_Factory(t) {\n    return new (t || authGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: authGuard,\n    factory: authGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAGA,SAASA,cAAc,QAAQ,MAAM;;;;AAKrC,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEjEC,WAAW;IAAA;IAAA;MACf,MAAMC,UAAU,SAASN,cAAc,CAAC,KAAI,CAACG,WAAW,CAACI,WAAW,CAAC,CAAC,CAAC;MACvE,MAAMC,IAAI,GAAG,KAAI,CAACL,WAAW,CAACM,OAAO,EAAE;MAEvC,IAAIH,UAAU,EAAE;QACd,OAAO,IAAI,CAAC,CAAC;;;MAGf,KAAI,CAACF,MAAM,CAACM,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;MACvC,OAAO,KAAK;IAAC;EACf;EAAC;qBAbUT,SAAS;EAAA;EAAA;WAATA,SAAS;IAAAU,SAATV,SAAS;IAAAW,YAFR;EAAM","names":["firstValueFrom","authGuard","constructor","authService","router","canActivate","isLoggedIn","isLoggedIn$","role","getRole","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\authentication\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class authGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate(): Promise<boolean> {\n    const isLoggedIn = await firstValueFrom(this.authService.isLoggedIn$); // ✅ Convert observable to boolean\n    const role = this.authService.getRole();\n\n    if (isLoggedIn) {\n      return true; // ✅ Allow both Admins & Employees\n    }\n\n    this.router.navigate(['/auth/login']); // Redirect unauthorized users\n    return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}