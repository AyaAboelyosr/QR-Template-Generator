{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Electronica Care/Downloads/QRCodeGenerator-main/QR-Generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const role = _this.authService.getRole();\n      const isLoggedIn = yield firstValueFrom(_this.authService.isLoggedIn$);\n      // Allow only Admins\n      if (isLoggedIn && role === 'Admin') {\n        return true;\n      }\n      _this.router.navigate(['/auth/login']);\n      return false;\n    })();\n  }\n  static #_ = this.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAGA,SAASA,cAAc,QAAQ,MAAM;;;;AAKrC,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEjEC,WAAW;IAAA;IAAA;MACf,MAAMC,IAAI,GAAG,KAAI,CAACH,WAAW,CAACI,OAAO,EAAE;MACvC,MAAMC,UAAU,SAASR,cAAc,CAAC,KAAI,CAACG,WAAW,CAACM,WAAW,CAAC;MAErE;MACA,IAAID,UAAU,IAAIF,IAAI,KAAK,OAAO,EAAE;QAClC,OAAO,IAAI;;MAGb,KAAI,CAACF,MAAM,CAACM,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC,OAAO,KAAK;IAAC;EACf;EAAC;qBAdUT,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAU,SAAVV,UAAU;IAAAW,YAFT;EAAM","names":["firstValueFrom","AdminGuard","constructor","authService","router","canActivate","role","getRole","isLoggedIn","isLoggedIn$","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\authentication\\guards\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate(): Promise<boolean> {\n    const role = this.authService.getRole();\n    const isLoggedIn = await firstValueFrom(this.authService.isLoggedIn$);\n\n    // Allow only Admins\n    if (isLoggedIn && role === 'Admin') {\n      return true; \n    }\n\n    this.router.navigate(['/auth/login']); \n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}