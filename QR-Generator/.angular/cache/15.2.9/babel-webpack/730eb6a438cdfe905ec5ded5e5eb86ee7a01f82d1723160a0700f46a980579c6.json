{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nlet ListTemplateComponent = class ListTemplateComponent {\n  constructor(fb, templateService) {\n    this.fb = fb;\n    this.templateService = templateService;\n    this.filteredTemplateList = [];\n    this.searchTemplate = '';\n    this.templateList = [];\n    this.displayType = 'list';\n    this.selectedTemplateWithSections = null;\n  }\n  ngOnInit() {\n    this.initForm();\n    this.loadTemplates();\n  }\n  initForm() {\n    this.params = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      uniqeCode: ['', [Validators.required, Validators.pattern(/^[A-Z]{2}-\\d{3}$/)]]\n    });\n  }\n  loadTemplates() {\n    this.templateService.getAllTemplates().subscribe(templates => {\n      this.templateList = templates;\n      this.templateList = templates.map(t => ({\n        ...t,\n        expanded: false\n      }));\n      this.searchTemplates();\n    });\n  }\n  searchTemplates() {\n    this.filteredTemplateList = this.templateList.filter(template => template.title.toLowerCase().includes(this.searchTemplate.toLowerCase()));\n  }\n  editTemplate(template = null) {\n    if (this.addTemplateModal) {\n      this.addTemplateModal.open();\n      this.initForm();\n      if (template) {\n        this.params.setValue({\n          id: template.id,\n          title: template.title,\n          uniqeCode: template.uniqeCode\n        });\n      }\n    } else {\n      console.error('addTemplateModal is not defined');\n    }\n  }\n  saveTemplate() {\n    if (this.params.invalid) {\n      this.showMessage('Please fill all required fields correctly.', 'error');\n      return;\n    }\n    const template = this.params.value;\n    if (template.id) {\n      this.templateService.updateTemplate(template.id.toString(), template).subscribe(() => {\n        const existingTemplate = this.templateList.find(t => t.id === template.id);\n        if (existingTemplate) {\n          Object.assign(existingTemplate, template);\n        }\n        this.searchTemplates();\n        this.showMessage('Template has been updated successfully.');\n        this.addTemplateModal.close();\n      });\n    } else {\n      this.templateService.addTemplate(template).subscribe(newTemplate => {\n        this.templateList.unshift(newTemplate);\n        this.searchTemplates();\n        this.showMessage('Template has been added successfully.');\n        this.addTemplateModal.close();\n      }, error => {\n        this.showMessage('Failed to add template. Please try again.', 'error');\n      });\n    }\n  }\n  deleteTemplate(template) {\n    this.templateService.deleteTemplate(template.id.toString()).subscribe(() => {\n      this.templateList = this.templateList.filter(t => t.id !== template.id);\n      this.searchTemplates();\n      this.showMessage('Template has been deleted successfully.');\n    }, error => {\n      this.showMessage(error, 'error');\n    });\n  }\n  showMessage(msg, type = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: {\n        container: 'toast'\n      }\n    });\n  }\n  getTemplateWithSections(templateId) {\n    console.log('Fetching template details for ID:', templateId);\n    this.templateService.getTemplateById(templateId.toString()).subscribe({\n      next: fullTemplate => {\n        if (fullTemplate) {\n          this.selectedTemplateWithSections = fullTemplate;\n          console.log('Updated template with sections:', this.selectedTemplateWithSections);\n        } else {\n          this.showMessage('Template details not found.', 'error');\n        }\n      },\n      error: error => {\n        console.error('Error fetching template:', error);\n        this.showMessage('Failed to load template details.', 'error');\n      }\n    });\n  }\n  onSelectTemplate(template) {\n    if (template?.id) {\n      this.getTemplateWithSections(template.id);\n    } else {\n      this.showMessage('Invalid template selected.', 'error');\n    }\n  }\n  handleSectionUpdate() {\n    // Refresh your template list data here if needed\n    this.loadTemplates();\n  }\n  toggleSections(template) {\n    if (!template.expanded) {\n      this.templateService.getTemplateById(template.id.toString()).subscribe(fullTemplate => {\n        const index = this.templateList.findIndex(t => t.id === template.id);\n        this.templateList[index] = {\n          ...template,\n          ...fullTemplate\n        };\n        template.expanded = true;\n      });\n    } else {\n      template.expanded = !template.expanded;\n    }\n  }\n};\n__decorate([ViewChild('addTemplateModal')], ListTemplateComponent.prototype, \"addTemplateModal\", void 0);\nListTemplateComponent = __decorate([Component({\n  selector: 'app-list-template',\n  templateUrl: './list-template.component.html',\n  styleUrls: ['./list-template.component.css']\n})], ListTemplateComponent);\nexport { ListTemplateComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","Validators","Swal","ListTemplateComponent","constructor","fb","templateService","ngOnInit","initForm","loadTemplates","params","group","id","title","required","minLength","maxLength","uniqeCode","pattern","getAllTemplates","subscribe","templates","templateList","map","t","expanded","searchTemplates","filteredTemplateList","filter","template","toLowerCase","includes","searchTemplate","editTemplate","addTemplateModal","open","setValue","console","error","saveTemplate","invalid","showMessage","value","updateTemplate","toString","existingTemplate","find","Object","assign","close","addTemplate","newTemplate","unshift","deleteTemplate","msg","type","fire","icon","toast","position","showConfirmButton","timer","customClass","container","getTemplateWithSections","templateId","log","getTemplateById","next","fullTemplate","selectedTemplateWithSections","onSelectTemplate","handleSectionUpdate","toggleSections","index","findIndex","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\list-template\\list-template.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Template } from 'src/app/qrtemplategenerator/Models/Template';\nimport { ModalComponent } from 'angular-custom-modal';\n\n@Component({\n  selector: 'app-list-template',\n  templateUrl: './list-template.component.html',\n  styleUrls: ['./list-template.component.css']\n})\nexport class ListTemplateComponent implements OnInit {\n  @ViewChild('addTemplateModal') addTemplateModal!: ModalComponent;\n  params!: FormGroup;\n  filteredTemplateList: Template[] = [];\n  searchTemplate = '';\n  templateList: Template[] = [];\n  displayType = 'list';\n\n  constructor(private fb: FormBuilder, private templateService: TemplateService) {}\n\n  ngOnInit() {\n    this.initForm();\n    this.loadTemplates();\n  }\n\n  initForm() {\n    this.params = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      uniqeCode: ['', [Validators.required, Validators.pattern(/^[A-Z]{2}-\\d{3}$/)]],\n    });\n  }\n\n  loadTemplates() {\n    \n    this.templateService.getAllTemplates().subscribe((templates) => {\n      this.templateList = templates;\n      this.templateList= templates.map(t => ({ ...t, expanded: false }));\n      this.searchTemplates();\n    });\n  }\n\n  searchTemplates() {\n    this.filteredTemplateList = this.templateList.filter(template =>\n      template.title.toLowerCase().includes(this.searchTemplate.toLowerCase())\n    );\n  }\n\n  editTemplate(template: Template | null = null) {\n    if (this.addTemplateModal) {\n      this.addTemplateModal.open();\n      this.initForm();\n      if (template) {\n        this.params.setValue({\n          id: template.id,\n          title: template.title,\n          uniqeCode: template.uniqeCode,\n        });\n      }\n    } else {\n      console.error('addTemplateModal is not defined');\n    }\n  }\n\n  saveTemplate() {\n    if (this.params.invalid) {\n      this.showMessage('Please fill all required fields correctly.', 'error');\n      return;\n    }\n  \n    const template: Template = this.params.value;\n  \n    if (template.id) {\n      this.templateService.updateTemplate(template.id.toString(), template).subscribe(() => {\n        const existingTemplate = this.templateList.find(t => t.id === template.id);\n        if (existingTemplate) {\n          Object.assign(existingTemplate, template);\n        }\n        this.searchTemplates();\n        this.showMessage('Template has been updated successfully.');\n        this.addTemplateModal.close();\n      });\n    } else {\n      this.templateService.addTemplate(template).subscribe((newTemplate) => {\n        this.templateList.unshift(newTemplate);\n        this.searchTemplates();\n        this.showMessage('Template has been added successfully.');\n        this.addTemplateModal.close();\n      }, (error) => {\n        this.showMessage('Failed to add template. Please try again.', 'error');\n      });\n    }\n  }\n\n  deleteTemplate(template: Template) {\n    this.templateService.deleteTemplate(template.id.toString()).subscribe(() => {\n      this.templateList = this.templateList.filter(t => t.id !== template.id);\n      this.searchTemplates();\n      this.showMessage('Template has been deleted successfully.');\n    }, error => {\n      this.showMessage(error, 'error');\n    });\n  }\n  showMessage(msg: string, type: 'success' | 'error' = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: { container: 'toast' },\n    });\n  }\n  selectedTemplateWithSections: Template | null = null;\n\n  getTemplateWithSections(templateId: number): void {\n    console.log('Fetching template details for ID:', templateId);\n  \n    this.templateService.getTemplateById(templateId.toString()).subscribe({\n      next: (fullTemplate) => {\n        if (fullTemplate) {\n          this.selectedTemplateWithSections = fullTemplate;\n          console.log('Updated template with sections:', this.selectedTemplateWithSections);\n        } else {\n          this.showMessage('Template details not found.', 'error');\n        }\n      },\n      error: (error) => {\n        console.error('Error fetching template:', error);\n        this.showMessage('Failed to load template details.', 'error');\n      }\n    });\n  }\n  \n  onSelectTemplate(template: Template) {\n    if (template?.id) {\n      this.getTemplateWithSections(template.id);\n    } else {\n      this.showMessage('Invalid template selected.', 'error');\n    }\n  }\n  \n  \n\n\n  handleSectionUpdate() {\n    // Refresh your template list data here if needed\n    this.loadTemplates();\n  }\n  \n\n  toggleSections(template: Template) {\n    if (!template.expanded) {\n      this.templateService.getTemplateById(template.id.toString())\n        .subscribe(fullTemplate => {\n          const index = this.templateList.findIndex(t => t.id === template.id);\n          this.templateList[index] = { ...template, ...fullTemplate };\n          template.expanded = true;\n        });\n    } else {\n      template.expanded = !template.expanded;\n    }\n  }\n\n  \n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}