{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    // First check authentication\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n    // Then check role\n    const role = this.authService.getRole();\n    if (role === 'Admin') return true;\n    if (role === 'Application User') {\n      this.router.navigate(['/QRCodeGenerator']);\n      return false;\n    }\n    this.router.navigate(['/auth/login']);\n    return false;\n  }\n  static #_ = this.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW;IACT;IACA,IAAI,CAAC,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,EAAE;MAClC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC,OAAO,KAAK;;IAGd;IACA,MAAMC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,OAAO,EAAE;IAEvC,IAAID,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI;IAEjC,IAAIA,IAAI,KAAK,kBAAkB,EAAE;MAC/B,IAAI,CAACJ,MAAM,CAACG,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;MAC1C,OAAO,KAAK;;IAGd,IAAI,CAACH,MAAM,CAACG,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACrC,OAAO,KAAK;EAEd;EAAC;qBAvBUN,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAS,SAAVT,UAAU;IAAAU,YAFT;EAAM","names":["AdminGuard","constructor","authService","router","canActivate","isLoggedIn","navigate","role","getRole","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\authentication\\guards\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    // First check authentication\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  \n    // Then check role\n    const role = this.authService.getRole();\n    \n    if (role === 'Admin') return true;\n    \n    if (role === 'Application User') {\n      this.router.navigate(['/QRCodeGenerator']);\n      return false;\n    }\n  \n    this.router.navigate(['/auth/login']);\n    return false;\n  \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}