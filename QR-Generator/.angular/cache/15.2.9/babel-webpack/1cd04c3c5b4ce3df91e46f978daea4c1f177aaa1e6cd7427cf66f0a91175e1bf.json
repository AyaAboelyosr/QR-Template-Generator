{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/form.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/record.service\";\nimport * as i5 from \"@angular/common\";\nfunction PreviewComponent_ng_container_1_div_1_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"label\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const field_r6 = ctx.$implicit;\n    const section_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r6.fieldTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", section_r2.values[field_r6.id] || \"-\", \" \");\n  }\n}\nfunction PreviewComponent_ng_container_1_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, PreviewComponent_ng_container_1_div_1_div_3_div_1_Template, 5, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r2.fields);\n  }\n}\nfunction PreviewComponent_ng_container_1_div_1_div_4_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", field_r11.fieldTitle, \" \");\n  }\n}\nfunction PreviewComponent_ng_container_1_div_1_div_4_tr_6_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r14 = ctx.$implicit;\n    const row_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r12[field_r14.id] || \"-\", \" \");\n  }\n}\nfunction PreviewComponent_ng_container_1_div_1_div_4_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 18);\n    i0.ɵɵtemplate(1, PreviewComponent_ng_container_1_div_1_div_4_tr_6_td_1_Template, 2, 1, \"td\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r2.fields);\n  }\n}\nfunction PreviewComponent_ng_container_1_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"table\", 14)(2, \"thead\")(3, \"tr\");\n    i0.ɵɵtemplate(4, PreviewComponent_ng_container_1_div_1_div_4_th_4_Template, 2, 1, \"th\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, PreviewComponent_ng_container_1_div_1_div_4_tr_6_Template, 2, 1, \"tr\", 16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", section_r2.fields);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", section_r2.rows);\n  }\n}\nfunction PreviewComponent_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h2\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, PreviewComponent_ng_container_1_div_1_div_3_Template, 2, 1, \"div\", 8);\n    i0.ɵɵtemplate(4, PreviewComponent_ng_container_1_div_1_div_4_Template, 7, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(section_r2.sectionTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !section_r2.isTableSection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r2.isTableSection);\n  }\n}\nfunction PreviewComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PreviewComponent_ng_container_1_div_1_Template, 5, 3, \"div\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.formData.sections);\n  }\n}\nexport class PreviewComponent {\n  constructor(router, formService, fb, recordService) {\n    this.router = router;\n    this.formService = formService;\n    this.fb = fb;\n    this.recordService = recordService;\n    this.template = null;\n    this.recordId = null;\n    this.form = this.formService.getFormGroup();\n  }\n  ngOnInit() {\n    this.template = this.formService.getTemplate();\n    this.form = this.formService.getFormGroup();\n    this.formData = this.formService.getFormData();\n    this.recordId = history.state.recordId;\n    if (history.state.isEditMode && this.recordId) {\n      this.formService.setEditMode(true, this.recordId);\n    }\n    if (!this.template || !this.form || !this.formData) {\n      console.error('Missing required data');\n      this.router.navigate(['qrgenerator']);\n    }\n  }\n  onEdit() {\n    const state = history.state;\n    if (state.isNewForm) {\n      // Editing a new form that hasn't been saved yet\n      this.router.navigate(['/dynamic-form'], {\n        state: {\n          id: state.templateId,\n          fromPreview: true,\n          formData: this.formData,\n          isNewForm: true\n        }\n      });\n    } else if (this.template && this.recordId) {\n      // Editing an existing record\n      this.recordService.getRecordPreview(this.recordId).subscribe({\n        next: record => {\n          this.router.navigate(['/dynamic-form'], {\n            state: {\n              id: record.templateId,\n              recordId: this.recordId,\n              existingData: record,\n              isEditMode: true,\n              fromPreview: true\n            }\n          });\n        },\n        error: error => {\n          console.error('Failed to load record', error);\n        }\n      });\n    }\n  }\n  onSave() {\n    const editModeState = this.formService.getEditMode();\n    if (editModeState.isEditMode && this.recordId) {\n      // If in edit mode, update the existing record\n      this.formService.updateFormData(this.recordId, this.form, this.template);\n    } else {\n      // If not in edit mode, create a new record\n      this.formService.saveFormData(this.form, this.template);\n    }\n    this.formService.clearStoredData(); // Clear stored data after saving\n    this.formService.clearEditMode(); // Clear edit mode state\n    this.router.navigate(['qrgenerator']);\n  }\n  static #_ = this.ɵfac = function PreviewComponent_Factory(t) {\n    return new (t || PreviewComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.RecordService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PreviewComponent,\n    selectors: [[\"app-preview\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"p-6\", \"space-y-6\", \"bg-white\", \"dark:bg-[#1b2e4b]\"], [4, \"ngIf\"], [1, \"flex\", \"justify-end\", \"space-x-4\", \"mt-6\"], [\"type\", \"button\", 1, \"px-4\", \"py-2\", \"bg-blue-600\", \"text-white\", \"rounded-md\", \"hover:bg-blue-700\", 3, \"click\"], [\"type\", \"button\", 1, \"px-4\", \"py-2\", \"bg-green-600\", \"text-white\", \"rounded-md\", \"hover:bg-green-700\", 3, \"click\"], [\"class\", \"mb-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-6\"], [1, \"text-lg\", \"font-semibold\", \"text-black\", \"dark:text-white\", \"mb-2\"], [\"class\", \"space-y-4\", 4, \"ngIf\"], [1, \"space-y-4\"], [\"class\", \"mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-4\"], [1, \"block\", \"text-sm\", \"font-medium\", \"text-black\", \"dark:text-white\", \"mb-1\"], [1, \"w-full\", \"p-2\", \"bg-gray-50\", \"border\", \"rounded-md\", \"dark:bg-[#1b2e4b]\"], [1, \"w-full\", \"border-collapse\"], [\"class\", \"border p-2 text-left text-black dark:text-white\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"hover:bg-gray-50 dark:hover:bg-[#1b2e4b]\", 4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"p-2\", \"text-left\", \"text-black\", \"dark:text-white\"], [1, \"hover:bg-gray-50\", \"dark:hover:bg-[#1b2e4b]\"], [\"class\", \"border p-2 text-black dark:text-white\", 4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"p-2\", \"text-black\", \"dark:text-white\"]],\n    template: function PreviewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, PreviewComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function PreviewComponent_Template_button_click_3_listener() {\n          return ctx.onEdit();\n        });\n        i0.ɵɵtext(4, \" Edit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function PreviewComponent_Template_button_click_5_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵtext(6, \" Save \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formData);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcmV2aWV3LmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJnZW5lcmF0b3IvQ29tcG9uZW50cy9wcmV2aWV3L3ByZXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","PreviewComponent","constructor","router","formService","fb","recordService","form","getFormGroup","ngOnInit","template","getTemplate","formData","getFormData","recordId","history","state","isEditMode","setEditMode","console","error","navigate","onEdit","isNewForm","id","templateId","fromPreview","getRecordPreview","subscribe","next","record","existingData","onSave","editModeState","getEditMode","updateFormData","saveFormData","clearStoredData","clearEditMode","selectors","decls","vars","consts","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrgenerator\\Components\\preview\\preview.component.html","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrgenerator\\Components\\preview\\preview.component.ts"],"sourcesContent":["<div class=\"p-6 space-y-6 bg-white dark:bg-[#1b2e4b]\">\r\n  <ng-container *ngIf=\"formData\">\r\n    <div *ngFor=\"let section of formData.sections\" class=\"mb-6\">\r\n      <h2 class=\"text-lg font-semibold text-black dark:text-white mb-2\">{{ section.sectionTitle }}</h2>\r\n      \r\n\r\n      <!-- Form Section -->\r\n      <div *ngIf=\"!section.isTableSection\" class=\"space-y-4\">\r\n        <div *ngFor=\"let field of section.fields\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium text-black dark:text-white mb-1\">{{ field.fieldTitle }}</label>\r\n          <label class=\"w-full p-2 bg-gray-50 border rounded-md dark:bg-[#1b2e4b]\">\r\n            {{ section.values[field.id] || '-' }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Table Section -->\r\n      <div *ngIf=\"section.isTableSection\" class=\"space-y-4\">\r\n        <table class=\"w-full border-collapse\">\r\n          <thead>\r\n            <tr>\r\n              <th *ngFor=\"let field of section.fields\" \r\n                  class=\"border p-2 text-left text-black dark:text-white\">\r\n                {{ field.fieldTitle }}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let row of section.rows\" \r\n                class=\"hover:bg-gray-50 dark:hover:bg-[#1b2e4b]\">\r\n              <td *ngFor=\"let field of section.fields\" \r\n                  class=\"border p-2 text-black dark:text-white\">\r\n                {{ row[field.id] || '-' }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"flex justify-end space-x-4 mt-6\">\r\n    <button type=\"button\" (click)=\"onEdit()\" \r\n            class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n      Edit\r\n    </button>\r\n    <button type=\"button\" (click)=\"onSave()\" \r\n            class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\">\r\n      Save\r\n    </button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { QRTemplate } from '../../viewmodels/qrtemplate';\r\nimport { FormService } from '../../services/form.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { RecordService } from '../../services/record.service';\r\n@Component({\r\n  selector: 'app-preview',\r\n  templateUrl: './preview.component.html',\r\n  styleUrls: ['./preview.component.css']\r\n})\r\nexport class PreviewComponent implements OnInit {\r\n  formData: any;\r\n  template: QRTemplate | null = null;\r\n  form: FormGroup;\r\n  recordId: number | null = null; \r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formService: FormService,\r\n     private fb: FormBuilder,\r\n     private recordService: RecordService,\r\n  ) {\r\n    this.form = this.formService.getFormGroup();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n   \r\n    this.template = this.formService.getTemplate();\r\n    this.form = this.formService.getFormGroup();\r\n    this.formData = this.formService.getFormData();\r\n    this.recordId = history.state.recordId;\r\n  \r\n    if (history.state.isEditMode && this.recordId) {\r\n      this.formService.setEditMode(true, this.recordId);\r\n    }\r\n  \r\n    if (!this.template || !this.form || !this.formData) {\r\n      console.error('Missing required data');\r\n      this.router.navigate(['qrgenerator']);\r\n    }\r\n  }\r\n\r\n  onEdit() {\r\n  const state = history.state;\r\n  \r\n  if (state.isNewForm) {\r\n    // Editing a new form that hasn't been saved yet\r\n    this.router.navigate(['/dynamic-form'], { \r\n      state: { \r\n        id: state.templateId,\r\n        fromPreview: true,\r\n        formData: this.formData,\r\n        isNewForm: true\r\n      }\r\n    });\r\n  } else if (this.template && this.recordId) {\r\n    // Editing an existing record\r\n    this.recordService.getRecordPreview(this.recordId).subscribe({\r\n      next: (record) => {\r\n        this.router.navigate(['/dynamic-form'], { \r\n          state: { \r\n            id: record.templateId,\r\n            recordId: this.recordId,\r\n            existingData: record,\r\n            isEditMode: true,\r\n            fromPreview: true\r\n          }\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load record', error);\r\n      }\r\n    });\r\n  }\r\n   }\r\n\r\n  onSave() {\r\n    const editModeState = this.formService.getEditMode();\r\n  \r\n    if (editModeState.isEditMode && this.recordId) {\r\n      // If in edit mode, update the existing record\r\n      this.formService.updateFormData(this.recordId, this.form, this.template);\r\n    } else {\r\n      // If not in edit mode, create a new record\r\n      this.formService.saveFormData(this.form, this.template);\r\n    }\r\n    \r\n    this.formService.clearStoredData(); // Clear stored data after saving\r\n    this.formService.clearEditMode();   // Clear edit mode state\r\n    this.router.navigate(['qrgenerator']);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}