{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/qrtemplategenerator/services/template.service\";\nimport * as i3 from \"@angular/common\";\nfunction TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0, 14);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"div\", 7)(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const field_r4 = restoredCtx.$implicit;\n      const section_r1 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onEditField.emit({\n        section: section_r1,\n        field: field_r4\n      }));\n    });\n    i0.ɵɵtext(11, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const field_r4 = restoredCtx.$implicit;\n      const section_r1 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onDeleteField.emit({\n        section: section_r1,\n        fieldId: field_r4.id\n      }));\n    });\n    i0.ɵɵtext(13, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(field_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r4.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r4.isRequired ? \"Yes\" : \"No\");\n  }\n}\nfunction TemplateDetailsComponent_ng_container_11_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4)(2, \"div\", 0)(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"Field Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 2);\n    i0.ɵɵtext(13, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template, 14, 3, \"ng-container\", 12);\n    i0.ɵɵelementStart(16, \"tr\")(17, \"td\", 13)(18, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_tr_14_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const section_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onEditField.emit({\n        section: section_r1\n      }));\n    });\n    i0.ɵɵtext(19, \" Add Field \");\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const section_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", section_r1.fields);\n  }\n}\nfunction TemplateDetailsComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0, 6);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"div\", 7)(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const section_r1 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onEditSection.emit({\n        templateId: ctx_r14.template.id,\n        section: section_r1\n      }));\n    });\n    i0.ɵɵtext(9, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const section_r1 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onDeleteSection.emit({\n        templateId: ctx_r16.template.id,\n        sectionId: section_r1.id\n      }));\n    });\n    i0.ɵɵtext(11, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const section_r1 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onToggleFields.emit(section_r1));\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(14, TemplateDetailsComponent_ng_container_11_tr_14_Template, 20, 1, \"tr\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const section_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(section_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(section_r1.type);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", section_r1.expanded ? \"Hide Fields\" : \"View Fields\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r1.expanded && section_r1.fields);\n  }\n}\nexport class TemplateDetailsComponent {\n  constructor(route, templateService) {\n    this.route = route;\n    this.templateService = templateService;\n    this.selectedSectionId = null;\n    this.selectedTemplateId = null;\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.loadTemplateDetails(+id);\n    }\n  }\n  loadTemplateDetails(id) {\n    this.templateService.getTemplateById(id.toString()).subscribe({\n      next: template => {\n        this.template = template;\n        this.template.sections?.forEach(s => {\n          s.expanded = false;\n          if (s.fields) {\n            s.fields.forEach(f => f.expanded = false);\n          }\n        });\n      },\n      error: err => Swal.fire('Error', 'Failed to load template details', 'error')\n    });\n  }\n  toggleSection(section) {\n    if (!section.fields) {\n      this.templateService.getSectionFields(this.template.id.toString(), section.id.toString()).subscribe(fields => {\n        section.fields = fields;\n        section.expanded = !section.expanded;\n      });\n    } else {\n      section.expanded = !section.expanded;\n    }\n  }\n  toggleField(field) {\n    field.expanded = !field.expanded;\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"table-responsive\"], [1, \"table-striped\", \"table-hover\"], [1, \"!text-center\"], [\"key\", \"section.id\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"3\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-success\", 3, \"click\"], [\"key\", \"section.id\"], [1, \"flex\", \"items-center\", \"justify-center\", \"gap-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [4, \"ngIf\"], [\"key\", \"field.id\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"4\"], [\"key\", \"field.id\"]],\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\");\n        i0.ɵɵtext(5, \"Section Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 2);\n        i0.ɵɵtext(9, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"tbody\");\n        i0.ɵɵtemplate(11, TemplateDetailsComponent_ng_container_11_Template, 15, 4, \"ng-container\", 3);\n        i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_14_listener() {\n          return ctx.onAddSection.emit(ctx.template.id);\n        });\n        i0.ɵɵtext(15, \" Add Section \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.template.sections);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wbGF0ZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJ0ZW1wbGF0ZWdlbmVyYXRvci9jb21wb25lbnRzL3RlbXBsYXRlLWRldGFpbHMvdGVtcGxhdGUtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnTEFBZ0wiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Swal","i0","section","field","fieldId","templateId","sectionId","TemplateDetailsComponent","constructor","route","templateService","ngOnInit","id","snapshot","paramMap","get","loadTemplateDetails","getTemplateById","toString","subscribe","next","template","sections","forEach","s","expanded","fields","f","error","err","fire","toggleSection","getSectionFields","toggleField","selectors","decls","vars","consts","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Template } from 'src/app/qrtemplategenerator/Models/';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html',\n  styleUrls: ['./template-details.component.css']\n})\nexport class TemplateDetailsComponent implements OnInit {\n  template!: Template;\n  selectedSectionId: number | null = null;\n  selectedTemplateId: number | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private templateService: TemplateService\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.loadTemplateDetails(+id);\n    }\n  }\n\n  loadTemplateDetails(id: number) {\n    this.templateService.getTemplateById(id.toString()).subscribe({\n      next: (template) => {\n        this.template = template;\n        this.template.sections?.forEach(s => {\n          s.expanded = false;\n          if (s.fields) {\n            s.fields.forEach(f => f.expanded = false);\n          }\n        });\n      },\n      error: (err) => Swal.fire('Error', 'Failed to load template details', 'error')\n    });\n  }\n\n  toggleSection(section: Section) {\n    if (!section.fields) {\n      this.templateService.getSectionFields(\n        this.template.id.toString(),\n        section.id.toString()\n      ).subscribe(fields => {\n        section.fields = fields;\n        section.expanded = !section.expanded;\n      });\n    } else {\n      section.expanded = !section.expanded;\n    }\n  }\n\n  toggleField(field: Field) {\n    field.expanded = !field.expanded;\n  }\n}","<!-- template-sections-fields.component.html -->\n<div class=\"table-responsive\">\n    <!-- Sections Table -->\n    <table class=\"table-striped table-hover\">\n      <thead>\n        <tr>\n          <th>Section Title</th>\n          <th>Type</th>\n          <th class=\"!text-center\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-container *ngFor=\"let section of template.sections\" key=\"section.id\">\n          <tr>\n            <td>{{ section.title }}</td>\n            <td>{{ section.type }}</td>\n            <td>\n              <div class=\"flex items-center justify-center gap-4\">\n                <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" \n                  (click)=\"onEditSection.emit({templateId: template.id, section})\">\n                  Edit\n                </button>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" \n                  (click)=\"onDeleteSection.emit({templateId: template.id, sectionId: section.id})\">\n                  Delete\n                </button>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" \n                  (click)=\"onToggleFields.emit(section)\">\n                  {{ section.expanded ? 'Hide Fields' : 'View Fields' }}\n                </button>\n              </div>\n            </td>\n          </tr>\n          \n          <!-- Fields Table (nested) -->\n          <tr *ngIf=\"section.expanded && section.fields\">\n            <td colspan=\"3\">\n              <div class=\"table-responsive\">\n                <table class=\"table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Field Title</th>\n                      <th>Type</th>\n                      <th>Required</th>\n                      <th class=\"!text-center\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <ng-container *ngFor=\"let field of section.fields\" key=\"field.id\">\n                      <tr>\n                        <td>{{ field.title }}</td>\n                        <td>{{ field.type }}</td>\n                        <td>{{ field.isRequired ? 'Yes' : 'No' }}</td>\n                        <td>\n                          <div class=\"flex items-center justify-center gap-4\">\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" \n                              (click)=\"onEditField.emit({section, field})\">\n                              Edit\n                            </button>\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" \n                              (click)=\"onDeleteField.emit({section, fieldId: field.id})\">\n                              Delete\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    </ng-container>\n                    <tr>\n                      <td colspan=\"4\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-success\" \n                          (click)=\"onEditField.emit({section})\">\n                          Add Field\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </td>\n          </tr>\n        </ng-container>\n        <tr>\n          <td colspan=\"3\">\n            <button type=\"button\" class=\"btn btn-sm btn-outline-success\" \n              (click)=\"onAddSection.emit(template.id)\">\n              Add Section\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}