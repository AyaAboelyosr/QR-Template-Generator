{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"template\"];\nfunction IconMenuUsersComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 1);\n    i0.ɵɵelement(1, \"circle\", 2)(2, \"ellipse\", 3)(3, \"circle\", 4)(4, \"ellipse\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.class);\n  }\n}\nexport class IconMenuUsersComponent {\n  constructor(viewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n    this.class = '';\n  }\n  ngOnInit() {\n    this.viewContainerRef.createEmbeddedView(this.template);\n    this.viewContainerRef.element.nativeElement.remove();\n  }\n  static #_ = this.ɵfac = function IconMenuUsersComponent_Factory(t) {\n    return new (t || IconMenuUsersComponent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IconMenuUsersComponent,\n    selectors: [[\"icon-menu-users\"]],\n    viewQuery: function IconMenuUsersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      class: \"class\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"template\", \"\"], [\"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\", 3, \"ngClass\"], [\"opacity\", \"0.5\", \"cx\", \"15\", \"cy\", \"6\", \"r\", \"3\", \"fill\", \"currentColor\"], [\"opacity\", \"0.5\", \"cx\", \"16\", \"cy\", \"17\", \"rx\", \"5\", \"ry\", \"3\", \"fill\", \"currentColor\"], [\"cx\", \"9.00098\", \"cy\", \"6\", \"r\", \"4\", \"fill\", \"currentColor\"], [\"cx\", \"9.00098\", \"cy\", \"17.001\", \"rx\", \"7\", \"ry\", \"4\", \"fill\", \"currentColor\"]],\n    template: function IconMenuUsersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, IconMenuUsersComponent_ng_template_0_Template, 5, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    dependencies: [i1.NgClass],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":";;;;;IAMMA,mBAAiH;IAAjHA,8BAAiH;IAC/GA,4BAAiE;IAInEA,iBAAM;;;;IALyFA,sCAAiB;;;AAStH,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAF3B,UAAK,GAAQ,EAAE;EAEiC;EACzDC,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,kBAAkB,CAAC,IAAI,CAACC,QAAQ,CAAC;IACvD,IAAI,CAACH,gBAAgB,CAACI,OAAO,CAACC,aAAa,CAACC,MAAM,EAAE;EACtD;EAAC;qBAPUR,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAS;IAAAC;MAAA;;;;;;;;;;;;;;;;QAV/BX,wHAOc","names":["i0","IconMenuUsersComponent","constructor","viewContainerRef","ngOnInit","createEmbeddedView","template","element","nativeElement","remove","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\shared\\icon\\menu\\icon-menu-users.ts"],"sourcesContent":["import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'icon-menu-users',\r\n  template: `\r\n    <ng-template #template>\r\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" [ngClass]=\"class\">\r\n        <circle opacity=\"0.5\" cx=\"15\" cy=\"6\" r=\"3\" fill=\"currentColor\" />\r\n        <ellipse opacity=\"0.5\" cx=\"16\" cy=\"17\" rx=\"5\" ry=\"3\" fill=\"currentColor\" />\r\n        <circle cx=\"9.00098\" cy=\"6\" r=\"4\" fill=\"currentColor\" />\r\n        <ellipse cx=\"9.00098\" cy=\"17.001\" rx=\"7\" ry=\"4\" fill=\"currentColor\" />\r\n      </svg>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class IconMenuUsersComponent {\r\n  @Input() class: any = '';\r\n  @ViewChild('template', { static: true }) template: any;\r\n  constructor(private viewContainerRef: ViewContainerRef) {}\r\n  ngOnInit() {\r\n    this.viewContainerRef.createEmbeddedView(this.template);\r\n    this.viewContainerRef.element.nativeElement.remove();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}