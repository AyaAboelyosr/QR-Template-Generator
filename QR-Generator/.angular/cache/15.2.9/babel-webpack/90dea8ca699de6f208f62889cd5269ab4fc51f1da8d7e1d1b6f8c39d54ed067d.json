{"ast":null,"code":"import { $themeConfig } from '../theme.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@ngrx/store\";\nexport class AppService {\n  constructor(translate, store) {\n    this.translate = translate;\n    this.store = store;\n    this.initStoreData();\n  }\n  initStoreData() {\n    this.store.select(d => d.index).subscribe(d => {\n      this.storeData = d;\n    });\n    // set default styles\n    let val = localStorage.getItem('theme'); // light, dark, system\n    val = val || $themeConfig.theme;\n    this.store.dispatch({\n      type: 'toggleTheme',\n      payload: val\n    });\n    val = localStorage.getItem('menu'); // vertical, collapsible-vertical, horizontal\n    val = val || $themeConfig.menu;\n    this.store.dispatch({\n      type: 'toggleMenu',\n      payload: val\n    });\n    val = localStorage.getItem('layout'); // full, boxed-layout\n    val = val || $themeConfig.layout;\n    this.store.dispatch({\n      type: 'toggleLayout',\n      payload: val\n    });\n    val = localStorage.getItem('i18n_locale'); // en, da, de, el, es, fr, hu, it, ja, pl, pt, ru, sv, tr, zh\n    val = val || $themeConfig.locale;\n    const list = this.storeData.languageList;\n    const item = list.find(item => item.code === val);\n    if (item) {\n      this.toggleLanguage(item);\n    }\n    val = localStorage.getItem('rtlClass'); // rtl, ltr\n    val = val || $themeConfig.rtlClass;\n    this.store.dispatch({\n      type: 'toggleRTL',\n      payload: val\n    });\n    val = localStorage.getItem('animation'); // animate__fadeIn, animate__fadeInDown, animate__fadeInUp, animate__fadeInLeft, animate__fadeInRight, animate__slideInDown, animate__slideInLeft, animate__slideInRight, animate__zoomIn\n    val = val || $themeConfig.animation;\n    this.store.dispatch({\n      type: 'toggleAnimation',\n      payload: val\n    });\n    val = localStorage.getItem('navbar'); // navbar-sticky, navbar-floating, navbar-static\n    val = val || $themeConfig.navbar;\n    this.store.dispatch({\n      type: 'toggleNavbar',\n      payload: val\n    });\n    val = localStorage.getItem('semidark');\n    val = val === 'true' ? true : $themeConfig.semidark;\n    this.store.dispatch({\n      type: 'toggleSemidark',\n      payload: val\n    });\n  }\n  toggleLanguage(item) {\n    let lang = null;\n    lang = 'en';\n    if (item) {\n      lang = item;\n    } else {\n      let code = this.translate.currentLang || null;\n      if (!code) {\n        code = localStorage.getItem('i18n_locale');\n      }\n      item = this.storeData.languageList.find(d => d.code === code);\n      if (item) {\n        lang = item;\n      }\n    }\n    if (!lang) {\n      lang = this.storeData.languageList.find(d => d.code === 'en');\n    }\n    this.translate.use(lang.code); // set language\n    this.store.dispatch({\n      type: 'toggleLocale',\n      payload: lang.code\n    });\n    return lang;\n  }\n  changeAnimation(type = 'add') {\n    if (this.storeData.animation) {\n      const ele = document.querySelector('.animation');\n      if (type === 'add') {\n        ele?.classList.add('animate__animated');\n        ele?.classList.add(this.storeData.animation);\n      } else {\n        ele?.classList.remove('animate__animated');\n        ele?.classList.remove(this.storeData.animation);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.TranslateService), i0.ɵɵinject(i2.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac\n  });\n}","map":{"version":3,"mappings":"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","names":["$themeConfig","AppService","constructor","translate","store","initStoreData","select","d","index","subscribe","storeData","val","localStorage","getItem","theme","dispatch","type","payload","menu","layout","locale","list","languageList","item","find","code","toggleLanguage","rtlClass","animation","navbar","semidark","lang","currentLang","use","changeAnimation","ele","document","querySelector","classList","add","remove","factory"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\service\\app.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { $themeConfig } from '../theme.config';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class AppService {\n    storeData: any;\n    constructor(public translate: TranslateService, public store: Store<any>) {\n        this.initStoreData();\n    }\n\n    initStoreData() {\n        this.store\n            .select((d: any) => d.index)\n            .subscribe((d: any) => {\n                this.storeData = d;\n            });\n\n        // set default styles\n        let val: any = localStorage.getItem('theme'); // light, dark, system\n        val = val || $themeConfig.theme;\n        this.store.dispatch({ type: 'toggleTheme', payload: val });\n\n        val = localStorage.getItem('menu'); // vertical, collapsible-vertical, horizontal\n        val = val || $themeConfig.menu;\n        this.store.dispatch({ type: 'toggleMenu', payload: val });\n\n        val = localStorage.getItem('layout'); // full, boxed-layout\n        val = val || $themeConfig.layout;\n        this.store.dispatch({ type: 'toggleLayout', payload: val });\n\n        val = localStorage.getItem('i18n_locale'); // en, da, de, el, es, fr, hu, it, ja, pl, pt, ru, sv, tr, zh\n        val = val || $themeConfig.locale;\n\n        const list = this.storeData.languageList;\n        const item = list.find((item: any) => item.code === val);\n        if (item) {\n            this.toggleLanguage(item);\n        }\n\n        val = localStorage.getItem('rtlClass'); // rtl, ltr\n        val = val || $themeConfig.rtlClass;\n        this.store.dispatch({ type: 'toggleRTL', payload: val });\n\n        val = localStorage.getItem('animation'); // animate__fadeIn, animate__fadeInDown, animate__fadeInUp, animate__fadeInLeft, animate__fadeInRight, animate__slideInDown, animate__slideInLeft, animate__slideInRight, animate__zoomIn\n        val = val || $themeConfig.animation;\n        this.store.dispatch({ type: 'toggleAnimation', payload: val });\n\n        val = localStorage.getItem('navbar'); // navbar-sticky, navbar-floating, navbar-static\n        val = val || $themeConfig.navbar;\n        this.store.dispatch({ type: 'toggleNavbar', payload: val });\n\n        val = localStorage.getItem('semidark');\n        val = val === 'true' ? true : $themeConfig.semidark;\n        this.store.dispatch({ type: 'toggleSemidark', payload: val });\n    }\n\n    toggleLanguage(item: any) {\n        let lang: any = null;\n        lang = 'en';\n        if (item) {\n            lang = item;\n        } else {\n            let code = this.translate.currentLang || null;\n            if (!code) {\n                code = localStorage.getItem('i18n_locale');\n            }\n\n            item = this.storeData.languageList.find((d: any) => d.code === code);\n            if (item) {\n                lang = item;\n            }\n        }\n\n        if (!lang) {\n            lang = this.storeData.languageList.find((d: any) => d.code === 'en');\n        }\n\n        this.translate.use(lang.code); // set language\n        this.store.dispatch({ type: 'toggleLocale', payload: lang.code });\n        return lang;\n    }\n\n    changeAnimation(type = 'add') {\n        if (this.storeData.animation) {\n            const ele: any = document.querySelector('.animation');\n            if (type === 'add') {\n                ele?.classList.add('animate__animated');\n                ele?.classList.add(this.storeData.animation);\n            } else {\n                ele?.classList.remove('animate__animated');\n                ele?.classList.remove(this.storeData.animation);\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}