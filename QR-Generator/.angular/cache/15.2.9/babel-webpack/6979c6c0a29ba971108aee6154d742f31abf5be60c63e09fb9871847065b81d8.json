{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Please fill out all required fields. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_35_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"span\", 29);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_35_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\");\n    i0.ɵɵtext(2, \"Registration Successful!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_35_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"p\");\n    i0.ɵɵtext(2, \"Registration Failed. Please try again.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"div\", 25);\n    i0.ɵɵtemplate(2, RegisterComponent_div_35_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(3, RegisterComponent_div_35_div_3_Template, 3, 0, \"div\", 27);\n    i0.ɵɵtemplate(4, RegisterComponent_div_35_div_4_Template, 3, 0, \"div\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registrationSuccess && !ctx_r2.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registrationError && !ctx_r2.isLoading);\n  }\n}\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.firstName = '';\n    this.lastName = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n    this.passwordMismatchError = false;\n    this.formInvalid = false;\n    this.showModal = false;\n    this.isLoading = false;\n    this.registrationSuccess = false;\n    this.registrationError = false;\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleConfirmPasswordVisibility() {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n  validateForm() {\n    if (!this.email || !this.firstName || !this.lastName || !this.password || !this.confirmPassword) {\n      this.formInvalid = true;\n      return false;\n    }\n    this.formInvalid = false;\n    return true;\n  }\n  onSubmit() {\n    if (!this.validateForm()) return;\n    if (this.password !== this.confirmPassword) {\n      this.passwordMismatchError = true;\n      return;\n    }\n    this.passwordMismatchError = false;\n    this.showModal = true;\n    this.isLoading = true;\n    this.registrationSuccess = false;\n    this.registrationError = false;\n    const registrationData = {\n      email: this.email,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      password: this.password\n    };\n    this.authService.register(registrationData).subscribe({\n      next: response => {\n        setTimeout(() => {\n          this.isLoading = false;\n          this.registrationSuccess = true;\n          // Store the role from response\n          if (response.role) {\n            this.authService.setRole(response.role);\n          }\n          let redirectUrl = '/auth/login';\n          if (response.role === 'Admin') {\n            redirectUrl = '/admin';\n          } else if (response.role === 'Employee') {\n            redirectUrl = '/QRCodeGenerator/qrgenerator';\n          }\n          setTimeout(() => {\n            this.showModal = false;\n            this.resetForm();\n            this.router.navigate([redirectUrl]);\n          }, 2000);\n        }, 1500);\n      },\n      error: error => {\n        setTimeout(() => {\n          this.isLoading = false;\n          this.registrationError = true;\n          setTimeout(() => {\n            this.showModal = false;\n          }, 2000);\n        }, 1500);\n        console.error('Registration failed:', error);\n      }\n    });\n  }\n  resetForm() {\n    this.email = '';\n    this.firstName = '';\n    this.lastName = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.formInvalid = false;\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 36,\n    vars: 10,\n    consts: [[1, \"form-container\"], [1, \"flex\", \"justify-center\", \"mb-6\"], [\"src\", \"https://sdq.sa/uploads/settings/logo-2024-10-16-10-54-20-6838.svg\", \"alt\", \"Logo\", 1, \"w-32\", \"h-auto\"], [1, \"space-y-5\", 3, \"ngSubmit\"], [\"type\", \"email\", \"placeholder\", \"Enter Email Address *\", \"name\", \"email\", \"required\", \"\", 1, \"form-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Enter First Name *\", \"name\", \"firstName\", \"required\", \"\", 1, \"form-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Enter Last Name *\", \"name\", \"lastName\", \"required\", \"\", 1, \"form-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"relative\"], [\"placeholder\", \"Enter Password *\", \"name\", \"password\", \"required\", \"\", 1, \"form-input\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"absolute\", \"inset-y-0\", \"right-0\", \"pr-3\", \"flex\", \"items-center\", 3, \"click\"], [\"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"opacity\", \"0.5\", \"d\", \"M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\"], [\"d\", \"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\"], [\"placeholder\", \"Enter Confirm Password *\", \"name\", \"confirmPassword\", \"required\", \"\", 1, \"form-input\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [1, \"!mt-2\"], [1, \"text-white-dark\", \"text-[11px]\", \"inline-block\"], [\"class\", \"text-red-500 text-sm mt-2\", 4, \"ngIf\"], [1, \"flex\", \"justify-center\", \"!mt-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-full\"], [1, \"text-center\", \"mt-4\"], [1, \"text-gray-600\"], [\"routerLink\", \"/login\", 1, \"text-blue-600\", \"hover:text-blue-800\", \"hover:underline\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"text-red-500\", \"text-sm\", \"mt-2\"], [1, \"modal\"], [1, \"modal-content\"], [4, \"ngIf\"], [\"class\", \"text-green-500\", 4, \"ngIf\"], [\"class\", \"text-red-500\", 4, \"ngIf\"], [1, \"animate-spin\", \"border-4\", \"border-success\", \"border-l-transparent\", \"rounded-full\", \"w-10\", \"h-10\", \"inline-block\", \"align-middle\", \"m-auto\", \"mb-10\"], [1, \"text-green-500\"], [1, \"text-red-500\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_12_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(13, \"svg\", 10);\n        i0.ɵɵelement(14, \"path\", 11)(15, \"path\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.confirmPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_18_listener() {\n          return ctx.toggleConfirmPasswordVisibility();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(19, \"svg\", 10);\n        i0.ɵɵelement(20, \"path\", 11)(21, \"path\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(22, \"div\", 14)(23, \"span\", 15);\n        i0.ɵɵtext(24, \"*Required Fields\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 2, 0, \"div\", 16);\n        i0.ɵɵtemplate(26, RegisterComponent_div_26_Template, 2, 0, \"div\", 16);\n        i0.ɵɵelementStart(27, \"div\", 17)(28, \"button\", 18);\n        i0.ɵɵtext(29, \"Create Account\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"div\", 19)(31, \"span\", 20);\n        i0.ɵɵtext(32, \"Already have an account? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"a\", 21);\n        i0.ɵɵtext(34, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(35, RegisterComponent_div_35_Template, 5, 3, \"div\", 22);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.lastName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\")(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"type\", ctx.showConfirmPassword ? \"text\" : \"password\")(\"ngModel\", ctx.confirmPassword);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.formInvalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordMismatchError);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showModal);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 100vh; \\r\\n}\\r\\n\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    max-width: 400px; \\r\\n    padding: 20px;\\r\\n    border: 1px solid #e2e8f0;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n\\r\\n.animate-spin[_ngcontent-%COMP%] {\\r\\n    animation: _ngcontent-%COMP%_spin 1s linear infinite;\\r\\n}\\r\\n\\r\\n@keyframes _ngcontent-%COMP%_spin {\\r\\n    0% {\\r\\n        transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n        transform: rotate(360deg);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n.modal[_ngcontent-%COMP%] {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: rgba(0, 0, 0, 0.5);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    z-index: 1000;\\r\\n}\\r\\n\\r\\n.modal-content[_ngcontent-%COMP%] {\\r\\n    background-color: white;\\r\\n    padding: 20px;\\r\\n    border-radius: 8px;\\r\\n    text-align: center;\\r\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQWdDO0FBQ2hDO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWEsRUFBRSx5QkFBeUI7QUFDNUM7O0FBRUEsMEJBQTBCO0FBQzFCO0lBQ0ksV0FBVztJQUNYLGdCQUFnQixFQUFFLCtCQUErQjtJQUNqRCxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQix3Q0FBd0M7QUFDNUM7O0FBRUEsb0JBQW9CO0FBQ3BCO0lBQ0ksa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0k7UUFDSSx1QkFBdUI7SUFDM0I7SUFDQTtRQUNJLHlCQUF5QjtJQUM3QjtBQUNKOztBQUVBLGtCQUFrQjtBQUNsQjtJQUNJLGVBQWU7SUFDZixNQUFNO0lBQ04sT0FBTztJQUNQLFdBQVc7SUFDWCxZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7QUFDakI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsd0NBQXdDO0FBQzVDIiwiZmlsZSI6InJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDZW50ZXIgdGhlIGZvcm0gb24gdGhlIHBhZ2UgKi9cclxuLmZvcm0tY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDsgLyogRnVsbCB2aWV3cG9ydCBoZWlnaHQgKi9cclxufVxyXG5cclxuLyogTWFrZSB0aGUgZm9ybSBzbWFsbGVyICovXHJcbmZvcm0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4OyAvKiBBZGp1c3QgdGhlIHdpZHRoIGFzIG5lZWRlZCAqL1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMmU4ZjA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59XHJcblxyXG4vKiBTcGlubmVyIHN0eWxpbmcgKi9cclxuLmFuaW1hdGUtc3BpbiB7XHJcbiAgICBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNwaW4ge1xyXG4gICAgMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxufVxyXG5cclxuLyogTW9kYWwgc3R5bGluZyAqL1xyXG4ubW9kYWwge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbn1cclxuXHJcbi5tb2RhbC1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdDQUFnQztBQUNoQztJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhLEVBQUUseUJBQXlCO0FBQzVDOztBQUVBLDBCQUEwQjtBQUMxQjtJQUNJLFdBQVc7SUFDWCxnQkFBZ0IsRUFBRSwrQkFBK0I7SUFDakQsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsd0NBQXdDO0FBQzVDOztBQUVBLG9CQUFvQjtBQUNwQjtJQUNJLGtDQUFrQztBQUN0Qzs7QUFFQTtJQUNJO1FBQ0ksdUJBQXVCO0lBQzNCO0lBQ0E7UUFDSSx5QkFBeUI7SUFDN0I7QUFDSjs7QUFFQSxrQkFBa0I7QUFDbEI7SUFDSSxlQUFlO0lBQ2YsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLG9DQUFvQztJQUNwQyxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLHdDQUF3QztBQUM1QztBQUNBLGc4RUFBZzhFIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ2VudGVyIHRoZSBmb3JtIG9uIHRoZSBwYWdlICovXHJcbi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7IC8qIEZ1bGwgdmlld3BvcnQgaGVpZ2h0ICovXHJcbn1cclxuXHJcbi8qIE1ha2UgdGhlIGZvcm0gc21hbGxlciAqL1xyXG5mb3JtIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTJlOGYwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuLyogU3Bpbm5lciBzdHlsaW5nICovXHJcbi5hbmltYXRlLXNwaW4ge1xyXG4gICAgYW5pbWF0aW9uOiBzcGluIDFzIGxpbmVhciBpbmZpbml0ZTtcclxufVxyXG5cclxuQGtleWZyYW1lcyBzcGluIHtcclxuICAgIDAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qIE1vZGFsIHN0eWxpbmcgKi9cclxuLm1vZGFsIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG59XHJcblxyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","authService","router","togglePasswordVisibility","showPassword","toggleConfirmPasswordVisibility","showConfirmPassword","validateForm","email","firstName","lastName","password","confirmPassword","formInvalid","onSubmit","passwordMismatchError","showModal","isLoading","registrationSuccess","registrationError","registrationData","register","subscribe","next","response","setTimeout","role","setRole","redirectUrl","resetForm","navigate","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\authentication\\components\\register\\register.component.html","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\authentication\\components\\register\\register.component.ts"],"sourcesContent":["<div class=\"form-container\">\r\n    <!-- Centered Logo above the form -->\r\n    <div class=\"flex justify-center mb-6\">\r\n        <img src=\"https://sdq.sa/uploads/settings/logo-2024-10-16-10-54-20-6838.svg\" alt=\"Logo\" class=\"w-32 h-auto\" />\r\n    </div>\r\n\r\n    <form class=\"space-y-5\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- Email Field -->\r\n        <div>\r\n            <input type=\"email\" placeholder=\"Enter Email Address *\" class=\"form-input\" [(ngModel)]=\"email\" name=\"email\" required />\r\n        </div>\r\n\r\n        <!-- First Name Field -->\r\n        <div>\r\n            <input type=\"text\" placeholder=\"Enter First Name *\" class=\"form-input\" [(ngModel)]=\"firstName\" name=\"firstName\" required />\r\n        </div>\r\n\r\n        <!-- Last Name Field -->\r\n        <div>\r\n            <input type=\"text\" placeholder=\"Enter Last Name *\" class=\"form-input\" [(ngModel)]=\"lastName\" name=\"lastName\" required />\r\n        </div>\r\n\r\n        <!-- Password Field -->\r\n        <div class=\"relative\">\r\n            <input [type]=\"showPassword ? 'text' : 'password'\" placeholder=\"Enter Password *\" class=\"form-input\" [(ngModel)]=\"password\" name=\"password\" required />\r\n            <button type=\"button\" class=\"absolute inset-y-0 right-0 pr-3 flex items-center\" (click)=\"togglePasswordVisibility()\">\r\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.5\" d=\"M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z\" stroke=\"currentColor\" stroke-width=\"1.5\"></path>\r\n                    <path d=\"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\" stroke=\"currentColor\" stroke-width=\"1.5\"></path>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n\r\n        <!-- Confirm Password Field -->\r\n        <div class=\"relative\">\r\n            <input [type]=\"showConfirmPassword ? 'text' : 'password'\" placeholder=\"Enter Confirm Password *\" class=\"form-input\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" required />\r\n            <button type=\"button\" class=\"absolute inset-y-0 right-0 pr-3 flex items-center\" (click)=\"toggleConfirmPasswordVisibility()\">\r\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.5\" d=\"M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z\" stroke=\"currentColor\" stroke-width=\"1.5\"></path>\r\n                    <path d=\"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\" stroke=\"currentColor\" stroke-width=\"1.5\"></path>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n\r\n        <!-- Required Fields Note -->\r\n        <div class=\"!mt-2\">\r\n            <span class=\"text-white-dark text-[11px] inline-block\">*Required Fields</span>\r\n        </div>\r\n\r\n        <!-- Form Invalid Error -->\r\n        <div *ngIf=\"formInvalid\" class=\"text-red-500 text-sm mt-2\">\r\n            Please fill out all required fields.\r\n        </div>\r\n\r\n        <!-- Password Mismatch Error -->\r\n        <div *ngIf=\"passwordMismatchError\" class=\"text-red-500 text-sm mt-2\">\r\n            Passwords do not match.\r\n        </div>\r\n\r\n        <!-- Centered Submit Button -->\r\n        <div class=\"flex justify-center !mt-6\">\r\n            <button type=\"submit\" class=\"btn btn-primary w-full\">Create Account</button>\r\n        </div>\r\n    </form>\r\n\r\n    <div class=\"text-center mt-4\">\r\n        <span class=\"text-gray-600\">Already have an account? </span>\r\n        <a routerLink=\"/login\" class=\"text-blue-600 hover:text-blue-800 hover:underline\">Login</a>\r\n    </div>\r\n</div>\r\n\r\n<!-- registration-form.component.html -->\r\n<div *ngIf=\"showModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <!-- Loading Spinner -->\r\n      <div *ngIf=\"isLoading\">\r\n        <span class=\"animate-spin border-4 border-success border-l-transparent rounded-full w-10 h-10 inline-block align-middle m-auto mb-10\"></span>\r\n      </div>\r\n  \r\n      <!-- Success Message -->\r\n      <div *ngIf=\"registrationSuccess && !isLoading\" class=\"text-green-500\">\r\n        <p>Registration Successful!</p>\r\n      </div>\r\n  \r\n      <!-- Error Message -->\r\n      <div *ngIf=\"registrationError && !isLoading\" class=\"text-red-500\">\r\n        <p>Registration Failed. Please try again.</p>\r\n      </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  email: string = '';\r\n  firstName: string = '';\r\n  lastName: string = '';\r\n  password: string = '';\r\n  confirmPassword: string = '';\r\n  showPassword: boolean = false;\r\n  showConfirmPassword: boolean = false;\r\n  passwordMismatchError: boolean = false;\r\n  formInvalid: boolean = false;\r\n  \r\n  showModal: boolean = false;\r\n  isLoading: boolean = false;\r\n  registrationSuccess: boolean = false;\r\n  registrationError: boolean = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  togglePasswordVisibility(): void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  toggleConfirmPasswordVisibility(): void {\r\n    this.showConfirmPassword = !this.showConfirmPassword;\r\n  }\r\n\r\n  validateForm(): boolean {\r\n    if (!this.email || !this.firstName || !this.lastName || !this.password || !this.confirmPassword) {\r\n      this.formInvalid = true;\r\n      return false;\r\n    }\r\n    this.formInvalid = false;\r\n    return true;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (!this.validateForm()) return;\r\n\r\n    if (this.password !== this.confirmPassword) {\r\n      this.passwordMismatchError = true;\r\n      return;\r\n    }\r\n    this.passwordMismatchError = false;\r\n\r\n    this.showModal = true;\r\n    this.isLoading = true;\r\n    this.registrationSuccess = false;\r\n    this.registrationError = false;\r\n\r\n    const registrationData = {\r\n      email: this.email,\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      password: this.password\r\n    };\r\n\r\n    this.authService.register(registrationData).subscribe({\r\n      next: (response) => {\r\n        setTimeout(() => {\r\n          this.isLoading = false;\r\n          this.registrationSuccess = true;\r\n\r\n          // Store the role from response\r\n          if (response.role) {\r\n            this.authService.setRole(response.role);\r\n          }\r\n\r\n          let redirectUrl = '/auth/login';\r\n          if (response.role === 'Admin') {\r\n            redirectUrl = '/admin';\r\n          } else if (response.role === 'Employee') {\r\n            redirectUrl = '/QRCodeGenerator/qrgenerator';\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.showModal = false;\r\n            this.resetForm();\r\n            this.router.navigate([redirectUrl]);\r\n          }, 2000);\r\n        }, 1500);\r\n      },\r\n      error: (error) => {\r\n        setTimeout(() => {\r\n          this.isLoading = false;\r\n          this.registrationError = true;\r\n          setTimeout(() => {\r\n            this.showModal = false;\r\n          }, 2000);\r\n        }, 1500);\r\n\r\n        console.error('Registration failed:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private resetForm(): void {\r\n    this.email = '';\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n    this.password = '';\r\n    this.confirmPassword = '';\r\n    this.formInvalid = false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}