{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TemplateService } from '../../services/template.service';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-custom-modal\";\nimport * as i4 from \"../../../shared/icon/icon-layout-grid\";\nimport * as i5 from \"../../../shared/icon/icon-list-check\";\nimport * as i6 from \"../../../shared/icon/icon-search\";\nimport * as i7 from \"../../../shared/icon/icon-user-plus\";\nimport * as i8 from \"@angular/router\";\nconst _c0 = [\"addFieldModal\"];\nconst _c1 = [\"addSectionModal\"];\nfunction TemplateItemComponent_ng_container_21_ng_container_14_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nconst _c2 = function (a1) {\n  return [\"/admin/items\", a1];\n};\nfunction TemplateItemComponent_ng_container_21_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"div\", 23)(10, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_container_21_ng_container_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const template_r18 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.editTemplate(template_r18));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_container_21_ng_container_14_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const template_r18 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.deleteTemplate(template_r18));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_container_21_ng_container_14_Template_a_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const template_r18 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.onSelectTemplate(template_r18));\n    });\n    i0.ɵɵtext(15, \" View Details \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(16, TemplateItemComponent_ng_container_21_ng_container_14_div_16_Template, 1, 0, \"div\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const template_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(template_r18.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r18.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r18.uniqeCode);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c2, template_r18.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.selectedTemplateWithSections);\n  }\n}\nfunction TemplateItemComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 19)(2, \"table\", 20)(3, \"thead\")(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Unique Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 21);\n    i0.ɵɵtext(12, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, TemplateItemComponent_ng_container_21_ng_container_14_Template, 17, 7, \"ng-container\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filteredTemplateList);\n  }\n}\nfunction TemplateItemComponent_ng_container_22_ng_container_2_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction TemplateItemComponent_ng_container_22_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelement(2, \"div\", 29);\n    i0.ɵɵelementStart(3, \"div\", 30)(4, \"div\", 31)(5, \"div\", 1);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 32);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 33)(10, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_container_22_ng_container_2_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const template_r26 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.editTemplate(template_r26));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_container_22_ng_container_2_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const template_r26 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.deleteTemplate(template_r26));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(14, TemplateItemComponent_ng_container_22_ng_container_2_div_14_Template, 1, 0, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const template_r26 = ctx.$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(template_r26.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r26.uniqeCode);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.selectedTemplateWithSections);\n  }\n}\nfunction TemplateItemComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵtemplate(2, TemplateItemComponent_ng_container_22_ng_container_2_Template, 15, 3, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.filteredTemplateList);\n  }\n}\nfunction TemplateItemComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.params.controls[\"id\"].value ? \"Edit Template\" : \"Add Template\");\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title cannot be more than 100 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateItemComponent_ng_template_27_div_5_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, TemplateItemComponent_ng_template_27_div_5_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(3, TemplateItemComponent_ng_template_27_div_5_div_3_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.params.controls[\"title\"].errors == null ? null : ctx_r32.params.controls[\"title\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.params.controls[\"title\"].errors == null ? null : ctx_r32.params.controls[\"title\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.params.controls[\"title\"].errors == null ? null : ctx_r32.params.controls[\"title\"].errors[\"maxlength\"]);\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Unique Code is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Unique Code must follow the pattern SI-XXX.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_27_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateItemComponent_ng_template_27_div_10_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, TemplateItemComponent_ng_template_27_div_10_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.params.controls[\"uniqeCode\"].errors == null ? null : ctx_r33.params.controls[\"uniqeCode\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.params.controls[\"uniqeCode\"].errors == null ? null : ctx_r33.params.controls[\"uniqeCode\"].errors[\"pattern\"]);\n  }\n}\nfunction TemplateItemComponent_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateItemComponent_ng_template_27_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.saveTemplate());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 39);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 40);\n    i0.ɵɵtemplate(5, TemplateItemComponent_ng_template_27_div_5_Template, 4, 3, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\", 42);\n    i0.ɵɵtext(8, \"Unique Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 43);\n    i0.ɵɵtemplate(10, TemplateItemComponent_ng_template_27_div_10_Template, 3, 2, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 44)(12, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_template_27_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r40);\n      i0.ɵɵnextContext();\n      const _r2 = i0.ɵɵreference(24);\n      return i0.ɵɵresetView(_r2.close());\n    });\n    i0.ɵɵtext(13, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 46);\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r6.params);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.params.controls[\"title\"].invalid && ctx_r6.params.controls[\"title\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.params.controls[\"uniqeCode\"].invalid && ctx_r6.params.controls[\"uniqeCode\"].touched);\n  }\n}\nfunction TemplateItemComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.sectionParams.controls[\"id\"].value ? \"Edit Section\" : \"Add Section\");\n  }\n}\nfunction TemplateItemComponent_ng_template_33_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_33_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateItemComponent_ng_template_33_div_5_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r42.sectionParams.controls[\"title\"].errors == null ? null : ctx_r42.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateItemComponent_ng_template_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 48);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateItemComponent_ng_template_33_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.saveSection());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 49);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 50);\n    i0.ɵɵtemplate(5, TemplateItemComponent_ng_template_33_div_5_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n    i0.ɵɵelement(11, \"input\", 51);\n    i0.ɵɵtext(12, \" Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵelement(14, \"input\", 52);\n    i0.ɵɵtext(15, \" Table \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\", 44)(17, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_template_33_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r45);\n      i0.ɵɵnextContext();\n      const _r7 = i0.ɵɵreference(30);\n      return i0.ɵɵresetView(_r7.close());\n    });\n    i0.ɵɵtext(18, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 46);\n    i0.ɵɵtext(20, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r11.sectionParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.sectionParams.controls[\"title\"].invalid && ctx_r11.sectionParams.controls[\"title\"].touched);\n  }\n}\nfunction TemplateItemComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.fieldParams.controls[\"id\"].value ? \"Edit Field\" : \"Add Field\");\n  }\n}\nfunction TemplateItemComponent_ng_template_39_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateItemComponent_ng_template_39_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateItemComponent_ng_template_39_div_5_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.fieldParams.controls[\"title\"].errors == null ? null : ctx_r47.fieldParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateItemComponent_ng_template_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 48);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateItemComponent_ng_template_39_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.saveField());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 53);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 54);\n    i0.ɵɵtemplate(5, TemplateItemComponent_ng_template_39_div_5_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\", 55);\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 56)(10, \"option\", 57);\n    i0.ɵɵtext(11, \"Text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 58);\n    i0.ɵɵtext(13, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 59);\n    i0.ɵɵtext(15, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 60);\n    i0.ɵɵtext(17, \"Boolean\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 38)(19, \"label\", 61);\n    i0.ɵɵtext(20, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 44)(23, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_template_39_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r50);\n      i0.ɵɵnextContext();\n      const _r12 = i0.ɵɵreference(36);\n      return i0.ɵɵresetView(_r12.close());\n    });\n    i0.ɵɵtext(24, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 46);\n    i0.ɵɵtext(26, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r16.fieldParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.fieldParams.controls[\"title\"].invalid && ctx_r16.fieldParams.controls[\"title\"].touched);\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"bg-primary text-white\": a0\n  };\n};\nexport class TemplateItemComponent {\n  constructor() {\n    this._TemplateService = inject(TemplateService);\n    this._router = inject(ActivatedRoute);\n    this._fb = inject(FormBuilder);\n    this.currentSectionId = null;\n    this.templateData = {};\n    this.displayType = 'grid';\n  }\n  ngOnInit() {\n    this.templateId = this._router.snapshot.paramMap.get('id');\n    this.getTemplatebyId();\n    this.initFieldForm();\n    this.initSectionForm();\n  }\n  initSectionForm() {\n    this.sectionParams = this._fb.group({\n      id: [null],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required]\n    });\n  }\n  initFieldForm() {\n    this.fieldParams = this._fb.group({\n      id: [null],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['Text', Validators.required],\n      isRequired: [false]\n    });\n  }\n  openAddFieldModal(sectionId) {\n    this.currentSectionId = sectionId;\n    this.fieldParams.reset({\n      type: 'Text',\n      isRequired: false,\n      title: ''\n    });\n    this.addFieldModal.open();\n  }\n  openAddSectionModal() {\n    this.sectionParams.reset({\n      type: 'form'\n    });\n    this.addSectionModal.open();\n  }\n  saveField() {\n    if (this.fieldParams.invalid) return;\n    const fieldData = this.fieldParams.value;\n    // Map the field type to the enum value\n    const mappedType = this.mapFieldType(fieldData.type);\n    // Create the payload for the API request\n    const requestData = {\n      title: fieldData.title,\n      type: mappedType,\n      isRequired: fieldData.isRequired\n    };\n    if (fieldData.id) {\n      // If there is an ID, it's an existing field that needs to be updated\n      this._TemplateService.updateField(this.templateId, this.currentSectionId.toString(), fieldData.id.toString(), requestData).subscribe({\n        next: res => {\n          const section = this.templateData.sections.find(s => s.id === this.currentSectionId);\n          if (section) {\n            const fieldIndex = section.fields.findIndex(f => f.id === fieldData.id);\n            if (fieldIndex !== -1) {\n              // Replace the existing field with the updated one\n              section.fields[fieldIndex] = res;\n            }\n          }\n          this.addFieldModal.close();\n        },\n        error: error => {\n          console.error('Error updating field:', error);\n        }\n      });\n    } else {\n      // If there is no ID, it's a new field that needs to be added\n      this._TemplateService.addField(this.templateId, this.currentSectionId.toString(), requestData).subscribe({\n        next: res => {\n          const section = this.templateData.sections.find(s => s.id === this.currentSectionId);\n          if (section) {\n            section.fields.push(res); // Add the new field to the section\n          }\n\n          this.addFieldModal.close();\n        },\n        error: error => {\n          console.error('Error adding field:', error);\n        }\n      });\n    }\n  }\n  getTemplatebyId() {\n    this._TemplateService.getTemplateById(this.templateId).subscribe({\n      next: res => {\n        console.log('Template id', this.templateId);\n        console.log('Result =', res);\n        this.templateData = res;\n      },\n      error: error => {\n        console.error('Error:', error);\n      }\n    });\n  }\n  toggleSection(section) {\n    section.expanded = !section.expanded;\n  }\n  toggleField(field) {\n    field.expanded = !field.expanded;\n  }\n  addSection() {\n    const newSection = {\n      title: 'New Section',\n      type: this.mapSectionType('Form'),\n      fields: [],\n      expanded: false\n    };\n    this._TemplateService.addSection(this.templateId, newSection).subscribe({\n      next: res => {\n        this.templateData.sections.push(res);\n      },\n      error: error => {\n        console.error('Error adding section:', error);\n      }\n    });\n  }\n  // The mapSectionType method\n  mapSectionType(type) {\n    const sectionTypeMap = {\n      'form': 0,\n      'table': 1 // Assuming 1 is for \"Table\"\n    };\n\n    return sectionTypeMap[type.toLowerCase()] ?? 0; // Default to 0 if the type is not found\n  }\n\n  saveSection() {\n    if (this.sectionParams.invalid) {\n      console.log('Form is invalid');\n      return;\n    }\n    const sectionData = this.sectionParams.value;\n    // Ensure title is not empty\n    if (!sectionData.title || sectionData.title.trim() === '') {\n      console.error('Title is required');\n      return;\n    }\n    const requestData = {\n      id: sectionData.id,\n      title: sectionData.title,\n      type: this.mapSectionType(sectionData.type)\n    };\n    if (sectionData.id) {\n      // Edit existing section\n      this._TemplateService.updateSection(this.templateId, sectionData.id.toString(), requestData).subscribe({\n        next: res => {\n          const sectionIndex = this.templateData.sections.findIndex(s => s.id === sectionData.id);\n          if (sectionIndex !== -1) {\n            this.templateData.sections[sectionIndex] = res;\n          }\n          this.addSectionModal.close();\n        },\n        error: error => {\n          console.error('Error updating section:', error);\n        }\n      });\n    } else {\n      // Add new section\n      this._TemplateService.addSection(this.templateId, requestData).subscribe({\n        next: res => {\n          this.templateData.sections.push(res);\n          this.addSectionModal.close();\n        },\n        error: error => {\n          console.error('Error adding section:', error);\n        }\n      });\n    }\n  }\n  editSection(section) {\n    // Initialize the form before setting values\n    this.initSectionForm();\n    // If a section is provided, set the form values for the selected section\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n    // Open the modal to edit the section\n    this.addSectionModal.open();\n  }\n  deleteSection(sectionId) {\n    this._TemplateService.deleteSection(this.templateId, sectionId.toString()).subscribe({\n      next: () => {\n        this.templateData.sections = this.templateData.sections.filter(s => s.id !== sectionId);\n      },\n      error: error => {\n        console.error('Error deleting section:', error);\n      }\n    });\n  }\n  // field methods \n  addField(sectionId) {\n    const newField = {\n      title: '',\n      type: 'Text',\n      isRequired: false,\n      expanded: false\n    };\n    // Convert sectionId to string before passing it to the service\n    this._TemplateService.addField(this.templateId, sectionId.toString(), newField).subscribe({\n      next: res => {\n        const section = this.templateData.sections.find(s => s.id === sectionId);\n        if (section) {\n          section.fields.push(res);\n        }\n      },\n      error: error => {\n        console.error('Error adding field:', error);\n      }\n    });\n  }\n  editField(sectionId, field) {\n    this.currentSectionId = sectionId;\n    this.fieldParams.patchValue(field); // Populate the form with the field data\n    this.addFieldModal.open(); // Open the modal to edit the field\n  }\n\n  deleteField(sectionId, fieldId) {\n    // Convert both sectionId and fieldId to strings before passing to the service\n    this._TemplateService.deleteField(this.templateId, sectionId.toString(), fieldId.toString()).subscribe({\n      next: () => {\n        const section = this.templateData.sections.find(s => s.id === sectionId);\n        if (section) {\n          section.fields = section.fields.filter(f => f.id !== fieldId);\n        }\n      },\n      error: error => {\n        console.error('Error deleting field:', error);\n      }\n    });\n  }\n  mapFieldType(type) {\n    const fieldTypeMap = {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3\n    };\n    return fieldTypeMap[type] ?? 0; // Default to 0 (Text) if the type is not found\n  }\n  static #_ = this.ɵfac = function TemplateItemComponent_Factory(t) {\n    return new (t || TemplateItemComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateItemComponent,\n    selectors: [[\"app-template-item\"]],\n    viewQuery: function TemplateItemComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addFieldModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSectionModal = _t.first);\n      }\n    },\n    decls: 41,\n    vars: 9,\n    consts: [[1, \"flex\", \"flex-wrap\", \"items-center\", \"justify-between\", \"gap-4\"], [1, \"text-xl\"], [1, \"flex\", \"w-full\", \"flex-col\", \"gap-4\", \"sm:w-auto\", \"sm:flex-row\", \"sm:items-center\", \"sm:gap-3\"], [1, \"flex\", \"gap-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"ltr:mr-2\", \"rtl:ml-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"p-2\", 3, \"ngClass\", \"click\"], [1, \"relative\"], [\"type\", \"text\", \"placeholder\", \"Search Templates\", \"name\", \"searchTemplate\", 1, \"peer\", \"form-input\", \"py-2\", \"ltr:pr-11\", \"rtl:pl-11\", 3, \"ngModel\", \"ngModelChange\"], [1, \"absolute\", \"top-1/2\", \"-translate-y-1/2\", \"peer-focus:text-primary\", \"ltr:right-[11px]\", \"rtl:left-[11px]\"], [1, \"mx-auto\"], [1, \"panel\", \"mt-5\", \"overflow-hidden\", \"border-0\", \"p-0\"], [4, \"ngIf\"], [1, \"no-footer\"], [\"addTemplateModal\", \"\"], [\"modalHeader\", \"\"], [\"modalBody\", \"\"], [\"addSectionModal\", \"\"], [\"addFieldModal\", \"\"], [1, \"table-responsive\"], [1, \"table-striped\", \"table-hover\"], [1, \"!text-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"justify-center\", \"gap-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"routerLink\", \"click\"], [1, \"grid\", \"w-full\", \"grid-cols-1\", \"gap-6\", \"sm:grid-cols-2\", \"xl:grid-cols-3\", \"2xl:grid-cols-4\"], [1, \"relative\", \"overflow-hidden\", \"rounded-md\", \"bg-white\", \"text-center\", \"shadow\", \"dark:bg-[#1c232f]\"], [1, \"rounded-t-md\", \"bg-white/40\", \"bg-[url('/assets/images/notification-bg.png')]\", \"bg-cover\", \"bg-center\", \"p-6\", \"pb-0\"], [1, \"relative\", \"-mt-10\", \"px-6\", \"pb-24\"], [1, \"rounded-md\", \"bg-white\", \"px-2\", \"py-4\", \"shadow-md\", \"dark:bg-gray-900\"], [1, \"text-white-dark\"], [1, \"absolute\", \"bottom-0\", \"mt-6\", \"flex\", \"w-full\", \"gap-4\", \"p-6\", \"ltr:left-0\", \"rtl:right-0\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"w-1/2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", \"w-1/2\", 3, \"click\"], [1, \"!font-medium\"], [\"ngNativeValidate\", \"\", 1, \"text-sm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-5\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"class\", \"text-red-500\", 4, \"ngIf\"], [\"for\", \"uniqeCode\"], [\"id\", \"uniqeCode\", \"type\", \"text\", \"placeholder\", \"Enter Unique Code\", \"formControlName\", \"uniqeCode\", 1, \"form-input\"], [1, \"mt-8\", \"flex\", \"items-center\", \"justify-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"ltr:ml-4\", \"rtl:ml-4\"], [1, \"text-red-500\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"sectionTitle\"], [\"id\", \"sectionTitle\", \"type\", \"text\", \"formControlName\", \"title\", \"placeholder\", \"Enter Title\", 1, \"form-input\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"form\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"table\"], [\"for\", \"fieldTitle\"], [\"id\", \"fieldTitle\", \"type\", \"text\", \"formControlName\", \"title\", \"placeholder\", \"Enter Title\", 1, \"form-input\"], [\"for\", \"fieldType\"], [\"id\", \"fieldType\", \"formControlName\", \"type\", 1, \"form-select\"], [\"value\", \"Text\"], [\"value\", \"Number\"], [\"value\", \"Date\"], [\"value\", \"Boolean\"], [\"for\", \"isRequired\"], [\"id\", \"isRequired\", \"type\", \"checkbox\", \"formControlName\", \"isRequired\"]],\n    template: function TemplateItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"h2\", 1);\n        i0.ɵɵtext(3, \"Templates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\")(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TemplateItemComponent_Template_button_click_7_listener() {\n          return ctx.editTemplate();\n        });\n        i0.ɵɵelement(8, \"icon-user-plus\", 5);\n        i0.ɵɵtext(9, \" Add Template \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TemplateItemComponent_Template_button_click_11_listener() {\n          return ctx.displayType = \"list\";\n        });\n        i0.ɵɵelement(12, \"icon-list-check\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\")(14, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TemplateItemComponent_Template_button_click_14_listener() {\n          return ctx.displayType = \"grid\";\n        });\n        i0.ɵɵelement(15, \"icon-layout-grid\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function TemplateItemComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.searchTemplate = $event;\n        })(\"ngModelChange\", function TemplateItemComponent_Template_input_ngModelChange_17_listener() {\n          return ctx.searchTemplates();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 9);\n        i0.ɵɵelement(19, \"icon-search\", 10);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 11);\n        i0.ɵɵtemplate(21, TemplateItemComponent_ng_container_21_Template, 15, 1, \"ng-container\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, TemplateItemComponent_ng_container_22_Template, 3, 1, \"ng-container\", 12);\n        i0.ɵɵelementStart(23, \"modal\", 13, 14);\n        i0.ɵɵtemplate(25, TemplateItemComponent_ng_template_25_Template, 2, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(27, TemplateItemComponent_ng_template_27_Template, 16, 3, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"modal\", 13, 17);\n        i0.ɵɵtemplate(31, TemplateItemComponent_ng_template_31_Template, 2, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(33, TemplateItemComponent_ng_template_33_Template, 21, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"modal\", 13, 18);\n        i0.ɵɵtemplate(37, TemplateItemComponent_ng_template_37_Template, 2, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(39, TemplateItemComponent_ng_template_39_Template, 27, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c3, ctx.displayType === \"list\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c3, ctx.displayType === \"grid\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTemplate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayType === \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayType === \"grid\");\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i3.ModalComponent, i2.FormGroupDirective, i2.FormControlName, i4.IconLayoutGridComponent, i5.IconListCheckComponent, i6.IconSearchComponent, i7.IconUserPlusComponent, i8.RouterLink],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wbGF0ZS1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJ0ZW1wbGF0ZWdlbmVyYXRvci9jb21wb25lbnRzL3RlbXBsYXRlLWl0ZW0vdGVtcGxhdGUtaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0S0FBNEsiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,MAAM,QAA2B,eAAe;AACpE,SAASC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,cAAc,QAAgB,iBAAiB;;;;;;;;;;;;;;ICiK5BC,sBAEQ;;;;;;;;;IApBZA,6BAA4D;IACxDA,0BAAI;IACIA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAwB;IAAAA,iBAAK;IACjCA,0BAAI;IAEiEA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAsB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IAC3GA,mCAA+F;IAAnCA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAwB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IAC9GA,8BAEqC;IAArCA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAA0B;IAAA,EAAC;IACpCA,+BACA;IAAAA,iBAAI;IAKhBA,yGAEQ;IACZA,0BAAe;;;;;IAnBHA,eAAiB;IAAjBA,qCAAiB;IACjBA,eAAoB;IAApBA,wCAAoB;IACpBA,eAAwB;IAAxBA,4CAAwB;IAKjBA,eAA4C;IAA5CA,wEAA4C;IASrDA,eAAmC;IAAnCA,2DAAmC;;;;;IA9B7DA,6BAA6C;IACzCA,+BAA8B;IAIVA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,qBAAK;IAAAA,iBAAK;IACdA,0BAAI;IAAAA,4BAAW;IAAAA,iBAAK;IACpBA,+BAAyB;IAAAA,wBAAO;IAAAA,iBAAK;IAG7CA,8BAAO;IACHA,4GAqBe;IACnBA,iBAAQ;IAGpBA,0BAAe;;;;IAzBoCA,gBAAuB;IAAvBA,qDAAuB;;;;;IA2C1DA,sBAEQ;;;;;;IAhBpBA,6BAA4D;IACxDA,+BAA+F;IAC3FA,0BAEM;IACNA,+BAAwC;IAEXA,YAAoB;IAAAA,iBAAM;IAC/CA,+BAA6B;IAAAA,YAAwB;IAAAA,iBAAM;IAE/DA,+BAAiF;IACjBA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAsB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IAC1GA,mCAA8F;IAAnCA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAwB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IAEjHA,wGAEQ;IACZA,iBAAM;IAEdA,0BAAe;;;;;IAZsBA,eAAoB;IAApBA,wCAAoB;IACZA,eAAwB;IAAxBA,4CAAwB;IAMnDA,eAAmC;IAAnCA,2DAAmC;;;;;IAhB7DA,6BAA6C;IACzCA,+BAAyF;IACrFA,0GAmBe;IACnBA,iBAAM;IACVA,0BAAe;;;;IArB4BA,eAAuB;IAAvBA,qDAAuB;;;;;IA0B1DA,+BAA0B;IAAAA,YAAoE;IAAAA,iBAAM;;;;IAA1EA,eAAoE;IAApEA,2FAAoE;;;;;IAQlFA,2BAA2D;IAAAA,kCAAkB;IAAAA,iBAAM;;;;;IACnFA,2BAA4D;IAAAA,yDAAyC;IAAAA,iBAAM;;;;;IAC3GA,2BAA4D;IAAAA,8DAA8C;IAAAA,iBAAM;;;;;IAHpHA,+BAAuG;IACnGA,4FAAmF;IACnFA,4FAA2G;IAC3GA,4FAAgH;IACpHA,iBAAM;;;;IAHIA,eAAmD;IAAnDA,mIAAmD;IACnDA,eAAoD;IAApDA,oIAAoD;IACpDA,eAAoD;IAApDA,oIAAoD;;;;;IAO1DA,2BAA+D;IAAAA,wCAAwB;IAAAA,iBAAM;;;;;IAC7FA,2BAA8D;IAAAA,2DAA2C;IAAAA,iBAAM;;;;;IAFnHA,+BAA+G;IAC3GA,6FAA6F;IAC7FA,6FAA+G;IACnHA,iBAAM;;;;IAFIA,eAAuD;IAAvDA,2IAAuD;IACvDA,eAAsD;IAAtDA,0IAAsD;;;;;;IAfxEA,gCAAwF;IAA7CA;MAAAA;MAAA;MAAA,OAAYA,qCAAc;IAAA,EAAC;IAClEA,+BAAkB;IACKA,qBAAK;IAAAA,iBAAQ;IAChCA,4BAAqG;IACrGA,sFAIM;IACVA,iBAAM;IACNA,+BAAkB;IACSA,2BAAW;IAAAA,iBAAQ;IAC1CA,4BAAmH;IACnHA,wFAGM;IACVA,iBAAM;IACNA,gCAAgD;IACSA;MAAAA;MAAAA;MAAA;MAAA,OAASA,0BAAwB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IACvGA,mCAAgE;IAAAA,qBAAI;IAAAA,iBAAS;;;;IApB/EA,yCAAoB;IAIZA,eAA0E;IAA1EA,yGAA0E;IAS1EA,eAAkF;IAAlFA,iHAAkF;;;;;IAkBpGA,+BAA0B;IAAAA,YAAyE;IAAAA,iBAAM;;;;IAA/EA,eAAyE;IAAzEA,gGAAyE;;;;;IAQvFA,2BAAkE;IAAAA,kCAAkB;IAAAA,iBAAM;;;;;IAD9FA,+BAAqH;IACjHA,4FAA0F;IAC9FA,iBAAM;;;;IADIA,eAA0D;IAA1DA,iJAA0D;;;;;;IAL5EA,gCAA6D;IAA3BA;MAAAA;MAAA;MAAA,OAAYA,oCAAa;IAAA,EAAC;IACxDA,+BAAkB;IACYA,qBAAK;IAAAA,iBAAQ;IACvCA,4BAA4G;IAC5GA,sFAEM;IACVA,iBAAM;IACNA,+BAAkB;IACPA,oBAAI;IAAAA,iBAAQ;IACnBA,2BAAK;IAEGA,6BAA0D;IAACA,uBAC/D;IAAAA,iBAAQ;IACRA,8BAAO;IACHA,6BAA2D;IAACA,wBAChE;IAAAA,iBAAQ;IAGhBA,gCAAgD;IACSA;MAAAA;MAAAA;MAAA;MAAA,OAASA,0BAAuB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IACtGA,mCAAgE;IAAAA,qBAAI;IAAAA,iBAAS;;;;IArB/EA,iDAA2B;IAInBA,eAAwF;IAAxFA,yHAAwF;;;;;IA0BtGA,+BAA0B;IAAAA,YAAmE;IAAAA,iBAAM;;;;IAAzEA,eAAmE;IAAnEA,2FAAmE;;;;;IAQjFA,2BAAgE;IAAAA,kCAAkB;IAAAA,iBAAM;;;;;IAD5FA,+BAAiH;IAC7GA,4FAAwF;IAC5FA,iBAAM;;;;IADIA,eAAwD;IAAxDA,6IAAwD;;;;;;IAL1EA,gCAAyD;IAAzBA;MAAAA;MAAA;MAAA,OAAYA,kCAAW;IAAA,EAAC;IACpDA,+BAAkB;IACUA,qBAAK;IAAAA,iBAAQ;IACrCA,4BAA0G;IAC1GA,sFAEM;IACVA,iBAAM;IACNA,+BAAkB;IACSA,oBAAI;IAAAA,iBAAQ;IACnCA,kCAAkE;IACzCA,qBAAI;IAAAA,iBAAS;IAClCA,mCAAuB;IAAAA,uBAAM;IAAAA,iBAAS;IACtCA,mCAAqB;IAAAA,qBAAI;IAAAA,iBAAS;IAClCA,mCAAwB;IAAAA,wBAAO;IAAAA,iBAAS;IAGhDA,gCAAkB;IACUA,yBAAQ;IAAAA,iBAAQ;IACxCA,6BAAsE;IAC1EA,iBAAM;IACNA,gCAAgD;IACSA;MAAAA;MAAAA;MAAA;MAAA,OAASA,2BAAqB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IACpGA,mCAAgE;IAAAA,qBAAI;IAAAA,iBAAS;;;;IAvB/EA,+CAAyB;IAIjBA,eAAoF;IAApFA,qHAAoF;;;;;;;;ADxQ1G,OAAM,MAAOC,qBAAqB;EALlCC;IASE,qBAAgB,GAACP,MAAM,CAACG,eAAe,CAAC;IACxC,YAAO,GAACH,MAAM,CAACI,cAAc,CAAC;IAC9B,QAAG,GAAGJ,MAAM,CAACC,WAAW,CAAC;IAGzB,qBAAgB,GAAkB,IAAI;IACtC,iBAAY,GAAQ,EAAE;IACtB,gBAAW,GAAW,MAAM;;EAE5BO,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IAC3D,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,GAAG,CAACC,KAAK,CAAC;MAClCC,EAAE,EAAE,CAAC,IAAI,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACoB,QAAQ,EAAEpB,UAAU,CAACqB,SAAS,CAAC,CAAC,CAAC,EAAErB,UAAU,CAACsB,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MACtFC,IAAI,EAAE,CAAC,EAAE,EAAEvB,UAAU,CAACoB,QAAQ;KAC/B,CAAC;EACJ;EAIAP,aAAa;IACX,IAAI,CAACW,WAAW,GAAG,IAAI,CAACR,GAAG,CAACC,KAAK,CAAC;MAChCC,EAAE,EAAE,CAAC,IAAI,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACoB,QAAQ,EAAEpB,UAAU,CAACqB,SAAS,CAAC,CAAC,CAAC,EAAErB,UAAU,CAACsB,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MACtFC,IAAI,EAAE,CAAC,MAAM,EAAEvB,UAAU,CAACoB,QAAQ,CAAC;MACnCK,UAAU,EAAE,CAAC,KAAK;KACnB,CAAC;EACJ;EAEAC,iBAAiB,CAACC,SAAiB;IACjC,IAAI,CAACC,gBAAgB,GAAGD,SAAS;IACjC,IAAI,CAACH,WAAW,CAACK,KAAK,CAAC;MAAEN,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAE,KAAK;MAAEN,KAAK,EAAE;IAAE,CAAE,CAAC;IACtE,IAAI,CAACW,aAAa,CAACC,IAAI,EAAE;EAC3B;EAGAC,mBAAmB;IACjB,IAAI,CAACjB,aAAa,CAACc,KAAK,CAAC;MAAEN,IAAI,EAAE;IAAM,CAAE,CAAC;IAC1C,IAAI,CAACU,eAAe,CAACF,IAAI,EAAE;EAC7B;EAEAG,SAAS;IACP,IAAI,IAAI,CAACV,WAAW,CAACW,OAAO,EAAE;IAE9B,MAAMC,SAAS,GAAG,IAAI,CAACZ,WAAW,CAACa,KAAK;IAExC;IACA,MAAMC,UAAU,GAAG,IAAI,CAACC,YAAY,CAACH,SAAS,CAACb,IAAI,CAAC;IAEpD;IACA,MAAMiB,WAAW,GAAG;MAClBrB,KAAK,EAAEiB,SAAS,CAACjB,KAAK;MACtBI,IAAI,EAAEe,UAAU;MAChBb,UAAU,EAAEW,SAAS,CAACX;KACvB;IAED,IAAIW,SAAS,CAAClB,EAAE,EAAE;MAChB;MACA,IAAI,CAACuB,gBAAgB,CAACC,WAAW,CAAC,IAAI,CAACnC,UAAU,EAAE,IAAI,CAACqB,gBAAiB,CAACe,QAAQ,EAAE,EAAEP,SAAS,CAAClB,EAAE,CAACyB,QAAQ,EAAE,EAAEH,WAAW,CAAC,CACxHI,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAI;UACZ,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACC,QAAQ,CAACC,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACjC,EAAE,KAAK,IAAI,CAACU,gBAAgB,CAAC;UAC3F,IAAImB,OAAO,EAAE;YACX,MAAMK,UAAU,GAAGL,OAAO,CAACM,MAAM,CAACC,SAAS,CAAEC,CAAM,IAAKA,CAAC,CAACrC,EAAE,KAAKkB,SAAS,CAAClB,EAAE,CAAC;YAC9E,IAAIkC,UAAU,KAAK,CAAC,CAAC,EAAE;cACrB;cACAL,OAAO,CAACM,MAAM,CAACD,UAAU,CAAC,GAAGN,GAAG;;;UAGpC,IAAI,CAAChB,aAAa,CAAC0B,KAAK,EAAE;QAC5B,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;OACD,CAAC;KACL,MAAM;MACL;MACA,IAAI,CAAChB,gBAAgB,CAACkB,QAAQ,CAAC,IAAI,CAACpD,UAAU,EAAE,IAAI,CAACqB,gBAAiB,CAACe,QAAQ,EAAE,EAAEH,WAAW,CAAC,CAC5FI,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAI;UACZ,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACC,QAAQ,CAACC,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACjC,EAAE,KAAK,IAAI,CAACU,gBAAgB,CAAC;UAC3F,IAAImB,OAAO,EAAE;YACXA,OAAO,CAACM,MAAM,CAACO,IAAI,CAACd,GAAG,CAAC,CAAC,CAAE;;;UAE7B,IAAI,CAAChB,aAAa,CAAC0B,KAAK,EAAE;QAC5B,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C;OACD,CAAC;;EAER;EAGA7C,eAAe;IACb,IAAI,CAAC6B,gBAAgB,CAACoB,eAAe,CAAC,IAAI,CAACtD,UAAU,CAAC,CAACqC,SAAS,CAAC;MAC/DC,IAAI,EAAGC,GAAG,IAAI;QACZY,OAAO,CAACI,GAAG,CAAE,aAAa,EAAC,IAAI,CAACvD,UAAU,CAAC;QAC3CmD,OAAO,CAACI,GAAG,CAAC,UAAU,EAAEhB,GAAG,CAAC;QAC5B,IAAI,CAACE,YAAY,GAAGF,GAAG;MAEzB,CAAC;MACDW,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;KAGD,CAAC;EACJ;EAEAM,aAAa,CAAChB,OAAY;IACxBA,OAAO,CAACiB,QAAQ,GAAG,CAACjB,OAAO,CAACiB,QAAQ;EACtC;EAIAC,WAAW,CAACC,KAAU;IACpBA,KAAK,CAACF,QAAQ,GAAG,CAACE,KAAK,CAACF,QAAQ;EAClC;EAEAG,UAAU;IACR,MAAMC,UAAU,GAAG;MACjBjD,KAAK,EAAE,aAAa;MACpBI,IAAI,EAAE,IAAI,CAAC8C,cAAc,CAAC,MAAM,CAAC;MACjChB,MAAM,EAAE,EAAE;MACVW,QAAQ,EAAE;KACX;IAED,IAAI,CAACvB,gBAAgB,CAAC0B,UAAU,CAAC,IAAI,CAAC5D,UAAU,EAAE6D,UAAU,CAAC,CAACxB,SAAS,CAAC;MACtEC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACE,YAAY,CAACC,QAAQ,CAACW,IAAI,CAACd,GAAG,CAAC;MACtC,CAAC;MACDW,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;KACD,CAAC;EACJ;EAEA;EACQY,cAAc,CAAC9C,IAAY;IACjC,MAAM+C,cAAc,GAA8B;MAChD,MAAM,EAAE,CAAC;MACT,OAAO,EAAE,CAAC,CAAG;KACd;;IACD,OAAOA,cAAc,CAAC/C,IAAI,CAACgD,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAE;EACnD;;EAGAC,WAAW;IACT,IAAI,IAAI,CAACzD,aAAa,CAACoB,OAAO,EAAE;MAC9BuB,OAAO,CAACI,GAAG,CAAC,iBAAiB,CAAC;MAC9B;;IAGF,MAAMW,WAAW,GAAG,IAAI,CAAC1D,aAAa,CAACsB,KAAK;IAE5C;IACA,IAAI,CAACoC,WAAW,CAACtD,KAAK,IAAIsD,WAAW,CAACtD,KAAK,CAACuD,IAAI,EAAE,KAAK,EAAE,EAAE;MACzDhB,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAC;MAClC;;IAGF,MAAMjB,WAAW,GAAG;MAClBtB,EAAE,EAAEuD,WAAW,CAACvD,EAAE;MAClBC,KAAK,EAAEsD,WAAW,CAACtD,KAAK;MACxBI,IAAI,EAAE,IAAI,CAAC8C,cAAc,CAACI,WAAW,CAAClD,IAAI;KAC3C;IAED,IAAIkD,WAAW,CAACvD,EAAE,EAAE;MAClB;MACA,IAAI,CAACuB,gBAAgB,CAACkC,aAAa,CAAC,IAAI,CAACpE,UAAU,EAAEkE,WAAW,CAACvD,EAAE,CAACyB,QAAQ,EAAE,EAAEH,WAAW,CAAC,CACzFI,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAI;UACZ,MAAM8B,YAAY,GAAG,IAAI,CAAC5B,YAAY,CAACC,QAAQ,CAACK,SAAS,CAAEH,CAAM,IAAKA,CAAC,CAACjC,EAAE,KAAKuD,WAAW,CAACvD,EAAE,CAAC;UAC9F,IAAI0D,YAAY,KAAK,CAAC,CAAC,EAAE;YACvB,IAAI,CAAC5B,YAAY,CAACC,QAAQ,CAAC2B,YAAY,CAAC,GAAG9B,GAAG;;UAEhD,IAAI,CAACb,eAAe,CAACuB,KAAK,EAAE;QAC9B,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;OACD,CAAC;KACL,MAAM;MACL;MACA,IAAI,CAAChB,gBAAgB,CAAC0B,UAAU,CAAC,IAAI,CAAC5D,UAAU,EAAEiC,WAAW,CAAC,CAC3DI,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAI;UACZ,IAAI,CAACE,YAAY,CAACC,QAAQ,CAACW,IAAI,CAACd,GAAG,CAAC;UACpC,IAAI,CAACb,eAAe,CAACuB,KAAK,EAAE;QAC9B,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;OACD,CAAC;;EAER;EAGAoB,WAAW,CAAC9B,OAAY;IACtB;IACA,IAAI,CAACjC,eAAe,EAAE;IAEtB;IACA,IAAIiC,OAAO,EAAE;MACX,IAAI,CAAChC,aAAa,CAAC+D,QAAQ,CAAC;QAC1B5D,EAAE,EAAE6B,OAAO,CAAC7B,EAAE;QACdC,KAAK,EAAE4B,OAAO,CAAC5B,KAAK;QACpBI,IAAI,EAAEwB,OAAO,CAACxB;OACf,CAAC;;IAGJ;IACA,IAAI,CAACU,eAAe,CAACF,IAAI,EAAE;EAC7B;EAGAgD,aAAa,CAACpD,SAAiB;IAC7B,IAAI,CAACc,gBAAgB,CAACsC,aAAa,CAAC,IAAI,CAACxE,UAAU,EAAEoB,SAAS,CAACgB,QAAQ,EAAE,CAAC,CAACC,SAAS,CAAC;MACnFC,IAAI,EAAE,MAAK;QACT,IAAI,CAACG,YAAY,CAACC,QAAQ,GAAG,IAAI,CAACD,YAAY,CAACC,QAAQ,CAAC+B,MAAM,CAAE7B,CAAM,IAAKA,CAAC,CAACjC,EAAE,KAAKS,SAAS,CAAC;MAChG,CAAC;MACD8B,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;KACD,CAAC;EACJ;EACF;EAEAE,QAAQ,CAAChC,SAAiB;IACxB,MAAMsD,QAAQ,GAAG;MACf9D,KAAK,EAAE,EAAE;MACTI,IAAI,EAAE,MAAM;MACZE,UAAU,EAAE,KAAK;MACjBuC,QAAQ,EAAE;KACX;IAED;IACA,IAAI,CAACvB,gBAAgB,CAACkB,QAAQ,CAAC,IAAI,CAACpD,UAAU,EAAEoB,SAAS,CAACgB,QAAQ,EAAE,EAAEsC,QAAQ,CAAC,CAACrC,SAAS,CAAC;MACxFC,IAAI,EAAGC,GAAG,IAAI;QACZ,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACC,QAAQ,CAACC,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACjC,EAAE,KAAKS,SAAS,CAAC;QAC/E,IAAIoB,OAAO,EAAE;UACXA,OAAO,CAACM,MAAM,CAACO,IAAI,CAACd,GAAG,CAAC;;MAE5B,CAAC;MACDW,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;KACD,CAAC;EACJ;EAEAyB,SAAS,CAACvD,SAAiB,EAAEuC,KAAU;IACrC,IAAI,CAACtC,gBAAgB,GAAGD,SAAS;IACjC,IAAI,CAACH,WAAW,CAAC2D,UAAU,CAACjB,KAAK,CAAC,CAAC,CAAE;IACrC,IAAI,CAACpC,aAAa,CAACC,IAAI,EAAE,CAAC,CAAW;EACvC;;EAGAqD,WAAW,CAACzD,SAAiB,EAAE0D,OAAe;IAC5C;IACA,IAAI,CAAC5C,gBAAgB,CAAC2C,WAAW,CAAC,IAAI,CAAC7E,UAAU,EAAEoB,SAAS,CAACgB,QAAQ,EAAE,EAAE0C,OAAO,CAAC1C,QAAQ,EAAE,CAAC,CAACC,SAAS,CAAC;MACrGC,IAAI,EAAE,MAAK;QACT,MAAME,OAAO,GAAG,IAAI,CAACC,YAAY,CAACC,QAAQ,CAACC,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACjC,EAAE,KAAKS,SAAS,CAAC;QAC/E,IAAIoB,OAAO,EAAE;UACXA,OAAO,CAACM,MAAM,GAAGN,OAAO,CAACM,MAAM,CAAC2B,MAAM,CAAEzB,CAAM,IAAKA,CAAC,CAACrC,EAAE,KAAKmE,OAAO,CAAC;;MAExE,CAAC;MACD5B,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;KACD,CAAC;EACJ;EAIQlB,YAAY,CAAChB,IAAY;IAC/B,MAAM+D,YAAY,GAA8B;MAC9C,MAAM,EAAE,CAAC;MACT,QAAQ,EAAE,CAAC;MACX,MAAM,EAAE,CAAC;MACT,SAAS,EAAE;KACZ;IACD,OAAOA,YAAY,CAAC/D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAClC;EAAC;qBArSYnB,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAmF;IAAAC;MAAA;;;;;;;;;;;;;;;QC0E/BrF,2BAAK;QAEoBA,yBAAS;QAAAA,iBAAK;QAClCA,8BAAuF;QAG7BA;UAAA,OAASsF,kBAAc;QAAA,EAAC;QAClEtF,oCAA4C;QAC5CA,8BACJ;QAAAA,iBAAS;QAEbA,4BAAK;QAKGA;UAAA,yBAAuB,MAAM;QAAA,EAAC;QAE9BA,mCAAmB;QACvBA,iBAAS;QAEbA,4BAAK;QAKGA;UAAA,yBAAuB,MAAM;QAAA,EAAC;QAE9BA,oCAAoB;QACxBA,iBAAS;QAIjBA,+BAAsB;QAKdA;UAAA;QAAA,EAA4B;UAAA,OAEXsF,qBAAiB;QAAA,EAFN;QAJhCtF,iBAOE;QACFA,+BAAwG;QACpGA,mCAA+B;QACnCA,iBAAM;QAIlBA,gCAAqD;QACjDA,4FAqCe;QACnBA,iBAAM;QACNA,2FAuBe;QAGfA,sCAA2C;QACvCA,0HAEc;QACdA,2HAwBc;QAClBA,iBAAQ;QAKZA,sCAA0C;QACtCA,0HAEc;QACdA,2HAyBc;QAClBA,iBAAQ;QAGRA,sCAAwC;QACpCA,0HAEc;QACdA,2HA2Bc;QAClBA,iBAAQ;;;QAtMgBA,gBAA+D;QAA/DA,gFAA+D;QAU/DA,eAA+D;QAA/DA,gFAA+D;QAanEA,eAA4B;QAA5BA,4CAA4B;QAWzBA,eAA4B;QAA5BA,iDAA4B;QAuChCA,eAA4B;QAA5BA,iDAA4B","names":["inject","FormBuilder","Validators","TemplateService","ActivatedRoute","i0","TemplateItemComponent","constructor","ngOnInit","templateId","_router","snapshot","paramMap","get","getTemplatebyId","initFieldForm","initSectionForm","sectionParams","_fb","group","id","title","required","minLength","maxLength","type","fieldParams","isRequired","openAddFieldModal","sectionId","currentSectionId","reset","addFieldModal","open","openAddSectionModal","addSectionModal","saveField","invalid","fieldData","value","mappedType","mapFieldType","requestData","_TemplateService","updateField","toString","subscribe","next","res","section","templateData","sections","find","s","fieldIndex","fields","findIndex","f","close","error","console","addField","push","getTemplateById","log","toggleSection","expanded","toggleField","field","addSection","newSection","mapSectionType","sectionTypeMap","toLowerCase","saveSection","sectionData","trim","updateSection","sectionIndex","editSection","setValue","deleteSection","filter","newField","editField","patchValue","deleteField","fieldId","fieldTypeMap","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-item\\template-item.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-item\\template-item.component.html"],"sourcesContent":["import { Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'angular-custom-modal';\nimport { TemplateService } from '../../services/template.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-template-item',\n  templateUrl: './template-item.component.html',\n  styleUrls: ['./template-item.component.css']\n})\nexport class TemplateItemComponent implements OnInit {\n  @ViewChild('addFieldModal') addFieldModal!: ModalComponent;\n  @ViewChild('addSectionModal') addSectionModal!: ModalComponent;\n\n  _TemplateService=inject(TemplateService);\n  _router=inject(ActivatedRoute);\n  _fb = inject(FormBuilder);\n  fieldParams!: FormGroup;\n  sectionParams!: FormGroup;\n  currentSectionId: number | null = null;\n  templateData: any = {};\n  displayType: string = 'grid'; \n  templateId!: string;\n  ngOnInit(): void {\n    this.templateId = this._router.snapshot.paramMap.get('id')!; \n    this.getTemplatebyId();\n    this.initFieldForm();\n    this.initSectionForm();\n  }\n\n  initSectionForm(): void {\n    this.sectionParams = this._fb.group({\n      id: [null],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],  // Title validation\n      type: ['', Validators.required]\n    });\n  }\n  \n  \n\n  initFieldForm(): void {\n    this.fieldParams = this._fb.group({\n      id: [null],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['Text', Validators.required],\n      isRequired: [false]\n    });\n  }\n\n  openAddFieldModal(sectionId: number): void {\n    this.currentSectionId = sectionId;\n    this.fieldParams.reset({ type: 'Text', isRequired: false, title: '' });\n    this.addFieldModal.open();\n  }\n  \n\n  openAddSectionModal(): void {\n    this.sectionParams.reset({ type: 'form' });\n    this.addSectionModal.open();\n  }\n\n  saveField(): void {\n    if (this.fieldParams.invalid) return;\n  \n    const fieldData = this.fieldParams.value;\n  \n    // Map the field type to the enum value\n    const mappedType = this.mapFieldType(fieldData.type);\n  \n    // Create the payload for the API request\n    const requestData = {\n      title: fieldData.title,\n      type: mappedType,\n      isRequired: fieldData.isRequired\n    };\n  \n    if (fieldData.id) {\n      // If there is an ID, it's an existing field that needs to be updated\n      this._TemplateService.updateField(this.templateId, this.currentSectionId!.toString(), fieldData.id.toString(), requestData)\n        .subscribe({\n          next: (res) => {\n            const section = this.templateData.sections.find((s: any) => s.id === this.currentSectionId);\n            if (section) {\n              const fieldIndex = section.fields.findIndex((f: any) => f.id === fieldData.id);\n              if (fieldIndex !== -1) {\n                // Replace the existing field with the updated one\n                section.fields[fieldIndex] = res;\n              }\n            }\n            this.addFieldModal.close();\n          },\n          error: (error) => {\n            console.error('Error updating field:', error);\n          }\n        });\n    } else {\n      // If there is no ID, it's a new field that needs to be added\n      this._TemplateService.addField(this.templateId, this.currentSectionId!.toString(), requestData)\n        .subscribe({\n          next: (res) => {\n            const section = this.templateData.sections.find((s: any) => s.id === this.currentSectionId);\n            if (section) {\n              section.fields.push(res);  // Add the new field to the section\n            }\n            this.addFieldModal.close();\n          },\n          error: (error) => {\n            console.error('Error adding field:', error);\n          }\n        });\n    }\n  }\n  \n\n  getTemplatebyId(){\n    this._TemplateService.getTemplateById(this.templateId).subscribe({\n      next: (res) => {\n        console.log( 'Template id',this.templateId);\n        console.log('Result =' ,res);\n        this.templateData = res;\n       \n      },\n      error: (error) => {\n        console.error('Error:', error);\n      }\n\n\n    })\n  }\n  \n  toggleSection(section: any) {\n    section.expanded = !section.expanded;\n  }\n  \n  \n\n  toggleField(field: any): void {\n    field.expanded = !field.expanded;\n  }\n\n  addSection(): void {\n    const newSection = {\n      title: 'New Section',  // Ensure the title is not empty and has at least 3 characters\n      type: this.mapSectionType('Form'), // Default type 'Form'\n      fields: [],\n      expanded: false\n    };\n  \n    this._TemplateService.addSection(this.templateId, newSection).subscribe({\n      next: (res) => {\n        this.templateData.sections.push(res);\n      },\n      error: (error) => {\n        console.error('Error adding section:', error);\n      }\n    });\n  }\n  \n  // The mapSectionType method\n  private mapSectionType(type: string): number {\n    const sectionTypeMap: { [key: string]: number } = {\n      'form': 0,   // Assuming 0 is for \"Form\"\n      'table': 1,  // Assuming 1 is for \"Table\"\n    };\n    return sectionTypeMap[type.toLowerCase()] ?? 0;  // Default to 0 if the type is not found\n  }\n  \n\n  saveSection(): void {\n    if (this.sectionParams.invalid) {\n      console.log('Form is invalid');\n      return;\n    }\n  \n    const sectionData = this.sectionParams.value;\n  \n    // Ensure title is not empty\n    if (!sectionData.title || sectionData.title.trim() === '') {\n      console.error('Title is required');\n      return;\n    }\n  \n    const requestData = {\n      id: sectionData.id,\n      title: sectionData.title,\n      type: this.mapSectionType(sectionData.type),\n    };\n  \n    if (sectionData.id) {\n      // Edit existing section\n      this._TemplateService.updateSection(this.templateId, sectionData.id.toString(), requestData)\n        .subscribe({\n          next: (res) => {\n            const sectionIndex = this.templateData.sections.findIndex((s: any) => s.id === sectionData.id);\n            if (sectionIndex !== -1) {\n              this.templateData.sections[sectionIndex] = res;\n            }\n            this.addSectionModal.close();\n          },\n          error: (error) => {\n            console.error('Error updating section:', error);\n          }\n        });\n    } else {\n      // Add new section\n      this._TemplateService.addSection(this.templateId, requestData)\n        .subscribe({\n          next: (res) => {\n            this.templateData.sections.push(res);\n            this.addSectionModal.close();\n          },\n          error: (error) => {\n            console.error('Error adding section:', error);\n          }\n        });\n    }\n  }\n  \n  \n  editSection(section: any): void {\n    // Initialize the form before setting values\n    this.initSectionForm();\n  \n    // If a section is provided, set the form values for the selected section\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n  \n    // Open the modal to edit the section\n    this.addSectionModal.open();\n  }\n  \n\n  deleteSection(sectionId: number): void {\n    this._TemplateService.deleteSection(this.templateId, sectionId.toString()).subscribe({\n      next: () => {\n        this.templateData.sections = this.templateData.sections.filter((s: any) => s.id !== sectionId);\n      },\n      error: (error) => {\n        console.error('Error deleting section:', error);\n      }\n    });\n  }\n// field methods \n\naddField(sectionId: number): void {\n  const newField = {\n    title: '',\n    type: 'Text', // Default type 'Text'\n    isRequired: false,\n    expanded: false\n  };\n\n  // Convert sectionId to string before passing it to the service\n  this._TemplateService.addField(this.templateId, sectionId.toString(), newField).subscribe({\n    next: (res) => {\n      const section = this.templateData.sections.find((s: any) => s.id === sectionId);\n      if (section) {\n        section.fields.push(res);\n      }\n    },\n    error: (error) => {\n      console.error('Error adding field:', error);\n    }\n  });\n}\n\neditField(sectionId: number, field: any): void {\n  this.currentSectionId = sectionId;\n  this.fieldParams.patchValue(field);  // Populate the form with the field data\n  this.addFieldModal.open();           // Open the modal to edit the field\n}\n\n\ndeleteField(sectionId: number, fieldId: number): void {\n  // Convert both sectionId and fieldId to strings before passing to the service\n  this._TemplateService.deleteField(this.templateId, sectionId.toString(), fieldId.toString()).subscribe({\n    next: () => {\n      const section = this.templateData.sections.find((s: any) => s.id === sectionId);\n      if (section) {\n        section.fields = section.fields.filter((f: any) => f.id !== fieldId);\n      }\n    },\n    error: (error) => {\n      console.error('Error deleting field:', error);\n    }\n  });\n}\n\n\n\nprivate mapFieldType(type: string): number {\n  const fieldTypeMap: { [key: string]: number } = {\n    'Text': 0,\n    'Number': 1,\n    'Date': 2,\n    'Boolean': 3\n  };\n  return fieldTypeMap[type] ?? 0; // Default to 0 (Text) if the type is not found\n}\n\n\n\n\n}\n","<!-- <div class=\"template-details-container\">\n    <h2>Template: {{ template.title }}</h2>\n  \n    \n    <div class=\"section-list\">\n      <h3>Sections</h3>\n      <button class=\"btn btn-primary\" (click)=\"editSection(template.id)\">Add Section</button>\n  \n      <div *ngFor=\"let section of template.sections\">\n        <div class=\"section-item\">\n          <h4>{{ section.title }}</h4>\n          <button class=\"btn btn-secondary\" (click)=\"editSection(template.id, section)\">Edit</button>\n          <button class=\"btn btn-danger\" (click)=\"deleteSection(template.id, section.id)\">Delete</button>\n          <button class=\"btn btn-info\" (click)=\"toggleFieldsVisibility(section)\">\n            {{ section.expanded ? 'Hide' : 'Show' }} Fields\n          </button>\n  \n          \n          <div *ngIf=\"section.expanded\">\n            <div *ngFor=\"let field of section.fields\">\n              <div class=\"field-item\">\n                <span>{{ field.title }} ({{ field.type }})</span>\n                <button class=\"btn btn-secondary\" (click)=\"editField(section, field)\">Edit</button>\n                <button class=\"btn btn-danger\" (click)=\"deleteField(section, field.id)\">Delete</button>\n              </div>\n            </div>\n            <button class=\"btn btn-primary\" (click)=\"editField(section)\">Add Field</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n\n    <modal #addSectionModal>\n      <ng-template let-modal>\n        <div class=\"modal-content\">\n          <h4>{{ sectionParams.value.id ? 'Edit' : 'Add' }} Section</h4>\n          <form [formGroup]=\"sectionParams\" (ngSubmit)=\"saveSection()\">\n            <div class=\"form-group\">\n              <label for=\"title\">Section Title</label>\n              <input type=\"text\" formControlName=\"title\" class=\"form-control\" id=\"title\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"type\">Section Type</label>\n              <select formControlName=\"type\" class=\"form-control\" id=\"type\">\n                <option value=\"1\">Form</option> \n                <option value=\"2\">Table</option> \n              </select>\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"sectionParams.invalid\">Save</button>\n          </form>\n        </div>\n      </ng-template>\n    </modal>\n  \n   \n    <modal #addFieldModal>\n      <ng-template let-modal>\n        <div class=\"modal-content\">\n          <h4>{{ fieldParams.value.id ? 'Edit' : 'Add' }} Field</h4>\n          <form [formGroup]=\"fieldParams\" (ngSubmit)=\"saveField()\">\n            <div class=\"form-group\">\n              <label for=\"title\">Field Title</label>\n              <input type=\"text\" formControlName=\"title\" class=\"form-control\" id=\"title\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"type\">Field Type</label>\n              <select formControlName=\"type\" class=\"form-control\" id=\"type\">\n                <option value=\"1\">Text</option> \n                <option value=\"2\">Number</option> \n                <option value=\"3\">Date</option> \n                <option value=\"4\">Boolean</option> \n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"isRequired\">Required</label>\n              <input type=\"checkbox\" formControlName=\"isRequired\" class=\"form-check-input\" id=\"isRequired\" />\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"fieldParams.invalid\">Save</button>\n          </form>\n        </div>\n      </ng-template>\n    </modal>\n  </div>\n   -->\n\n   <div>\n    <div class=\"flex flex-wrap items-center justify-between gap-4\">\n        <h2 class=\"text-xl\">Templates</h2>\n        <div class=\"flex w-full flex-col gap-4 sm:w-auto sm:flex-row sm:items-center sm:gap-3\">\n            <div class=\"flex gap-3\">\n                <div>\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"editTemplate()\">\n                        <icon-user-plus class=\"ltr:mr-2 rtl:ml-2\" />\n                        Add Template\n                    </button>\n                </div>\n                <div>\n                    <button\n                        type=\"button\"\n                        class=\"btn btn-outline-primary p-2\"\n                        [ngClass]=\"{ 'bg-primary text-white': displayType === 'list' }\"\n                        (click)=\"displayType = 'list'\"\n                    >\n                        <icon-list-check />\n                    </button>\n                </div>\n                <div>\n                    <button\n                        type=\"button\"\n                        class=\"btn btn-outline-primary p-2\"\n                        [ngClass]=\"{ 'bg-primary text-white': displayType === 'grid' }\"\n                        (click)=\"displayType = 'grid'\"\n                    >\n                        <icon-layout-grid />\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"relative\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Templates\"\n                    class=\"peer form-input py-2 ltr:pr-11 rtl:pl-11\"\n                    [(ngModel)]=\"searchTemplate\"\n                    name=\"searchTemplate\"\n                    (ngModelChange)=\"searchTemplates()\"\n                />\n                <div class=\"absolute top-1/2 -translate-y-1/2 peer-focus:text-primary ltr:right-[11px] rtl:left-[11px]\">\n                    <icon-search class=\"mx-auto\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"panel mt-5 overflow-hidden border-0 p-0\">\n        <ng-container *ngIf=\"displayType === 'list'\">\n            <div class=\"table-responsive\">\n                <table class=\"table-striped table-hover\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Title</th>\n                            <th>Unique Code</th>\n                            <th class=\"!text-center\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngFor=\"let template of filteredTemplateList\">\n                            <tr>\n                                <td>{{ template.id }}</td>\n                                <td>{{ template.title }}</td>\n                                <td>{{ template.uniqeCode }}</td>\n                                <td>\n                                    <div class=\"flex items-center justify-center gap-4\">\n                                        <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"editTemplate(template)\">Edit</button>\n                                        <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteTemplate(template)\">Delete</button>\n                                        <a [routerLink]=\"['/admin/items', template.id]\" \n                                        class=\"btn btn-sm btn-outline-secondary\"\n                                        (click)=\"onSelectTemplate(template)\">\n                                        View Details\n                                        </a>\n\n                                    </div>\n                                </td>\n                            </tr>\n                            <div *ngIf=\"selectedTemplateWithSections as template\">\n                                <!-- <app-template-details [template]=\"template\"></app-template-details> -->\n                              </div>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </div>\n        </ng-container>\n    </div>\n    <ng-container *ngIf=\"displayType === 'grid'\">\n        <div class=\"grid w-full grid-cols-1 gap-6 sm:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4\">\n            <ng-container *ngFor=\"let template of filteredTemplateList\">\n                <div class=\"relative overflow-hidden rounded-md bg-white text-center shadow dark:bg-[#1c232f]\">\n                    <div class=\"rounded-t-md bg-white/40 bg-[url('/assets/images/notification-bg.png')] bg-cover bg-center p-6 pb-0\">\n                        <!-- Optional: Add an image/placeholder if needed -->\n                    </div>\n                    <div class=\"relative -mt-10 px-6 pb-24\">\n                        <div class=\"rounded-md bg-white px-2 py-4 shadow-md dark:bg-gray-900\">\n                            <div class=\"text-xl\">{{ template.title }}</div>\n                            <div class=\"text-white-dark\">{{ template.uniqeCode }}</div>\n                        </div>\n                        <div class=\"absolute bottom-0 mt-6 flex w-full gap-4 p-6 ltr:left-0 rtl:right-0\">\n                            <button type=\"button\" class=\"btn btn-outline-primary w-1/2\" (click)=\"editTemplate(template)\">Edit</button>\n                            <button type=\"button\" class=\"btn btn-outline-danger w-1/2\" (click)=\"deleteTemplate(template)\">Delete</button>\n                        </div>\n                        <div *ngIf=\"selectedTemplateWithSections as template\">\n                            <!-- <app-template-details [template]=\"template\"></app-template-details> -->\n                          </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n\n    <!-- Add/Edit Template Modal -->\n    <modal #addTemplateModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ params.controls['id'].value ? 'Edit Template' : 'Add Template' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"params\" class=\"text-sm\" (ngSubmit)=\"saveTemplate()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"title\">Title</label>\n                    <input id=\"title\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"params.controls['title'].invalid && params.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"params.controls['title'].errors?.['required']\">Title is required.</div>\n                        <div *ngIf=\"params.controls['title'].errors?.['minlength']\">Title must be at least 3 characters long.</div>\n                        <div *ngIf=\"params.controls['title'].errors?.['maxlength']\">Title cannot be more than 100 characters long.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label for=\"uniqeCode\">Unique Code</label>\n                    <input id=\"uniqeCode\" type=\"text\" placeholder=\"Enter Unique Code\" class=\"form-input\" formControlName=\"uniqeCode\" />\n                    <div *ngIf=\"params.controls['uniqeCode'].invalid && params.controls['uniqeCode'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"params.controls['uniqeCode'].errors?.['required']\">Unique Code is required.</div>\n                        <div *ngIf=\"params.controls['uniqeCode'].errors?.['pattern']\">Unique Code must follow the pattern SI-XXX.</div>\n                    </div>\n                </div>\n                <div class=\"mt-8 flex items-center justify-end\">\n                    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addTemplateModal.close()\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n                </div>\n            </form>\n        </ng-template>\n    </modal>\n</div>\n\n<!-- Keep all modals EXACTLY as they are in your original code -->\n<!-- Add/Edit Section Modal -->\n<modal #addSectionModal class=\"no-footer\">\n    <ng-template #modalHeader>\n        <div class=\"!font-medium\">{{ sectionParams.controls['id'].value ? 'Edit Section' : 'Add Section' }}</div>\n    </ng-template>\n    <ng-template #modalBody>\n        <form [formGroup]=\"sectionParams\" (ngSubmit)=\"saveSection()\">\n            <div class=\"mb-5\">\n                <label for=\"sectionTitle\">Title</label>\n                <input id=\"sectionTitle\" type=\"text\" class=\"form-input\" formControlName=\"title\" placeholder=\"Enter Title\" />\n                <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                    <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                </div>\n            </div>\n            <div class=\"mb-5\">\n                <label>Type</label>\n                <div>\n                    <label>\n                        <input type=\"radio\" formControlName=\"type\" value=\"form\" /> Form\n                    </label>\n                    <label>\n                        <input type=\"radio\" formControlName=\"type\" value=\"table\" /> Table\n                    </label>\n                </div>\n            </div>\n            <div class=\"mt-8 flex items-center justify-end\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addSectionModal.close()\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n            </div>\n        </form>\n    </ng-template>\n</modal>\n\n<!-- Add/Edit Field Modal -->\n<modal #addFieldModal class=\"no-footer\">\n    <ng-template #modalHeader>\n        <div class=\"!font-medium\">{{ fieldParams.controls['id'].value ? 'Edit Field' : 'Add Field' }}</div>\n    </ng-template>\n    <ng-template #modalBody>\n        <form [formGroup]=\"fieldParams\" (ngSubmit)=\"saveField()\">\n            <div class=\"mb-5\">\n                <label for=\"fieldTitle\">Title</label>\n                <input id=\"fieldTitle\" type=\"text\" class=\"form-input\" formControlName=\"title\" placeholder=\"Enter Title\" />\n                <div *ngIf=\"fieldParams.controls['title'].invalid && fieldParams.controls['title'].touched\" class=\"text-red-500\">\n                    <div *ngIf=\"fieldParams.controls['title'].errors?.['required']\">Title is required.</div>\n                </div>\n            </div>\n            <div class=\"mb-5\">\n                <label for=\"fieldType\">Type</label>\n                <select id=\"fieldType\" class=\"form-select\" formControlName=\"type\">\n                    <option value=\"Text\">Text</option>\n                    <option value=\"Number\">Number</option>\n                    <option value=\"Date\">Date</option>\n                    <option value=\"Boolean\">Boolean</option>\n                </select>\n            </div>\n            <div class=\"mb-5\">\n                <label for=\"isRequired\">Required</label>\n                <input id=\"isRequired\" type=\"checkbox\" formControlName=\"isRequired\" />\n            </div>\n            <div class=\"mt-8 flex items-center justify-end\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFieldModal.close()\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n            </div>\n        </form>\n    </ng-template>\n</modal>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}