{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/qrtemplategenerator/services/template.service\";\nimport * as i3 from \"@angular/common\";\nfunction TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0, 14);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"div\", 7)(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const field_r4 = restoredCtx.$implicit;\n      const section_r1 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onEditField.emit({\n        section: section_r1,\n        field: field_r4\n      }));\n    });\n    i0.ɵɵtext(11, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const field_r4 = restoredCtx.$implicit;\n      const section_r1 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onDeleteField.emit({\n        section: section_r1,\n        fieldId: field_r4.id\n      }));\n    });\n    i0.ɵɵtext(13, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(field_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r4.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r4.isRequired ? \"Yes\" : \"No\");\n  }\n}\nfunction TemplateDetailsComponent_ng_container_11_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4)(2, \"div\", 0)(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"Field Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 2);\n    i0.ɵɵtext(13, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, TemplateDetailsComponent_ng_container_11_tr_14_ng_container_15_Template, 14, 3, \"ng-container\", 12);\n    i0.ɵɵelementStart(16, \"tr\")(17, \"td\", 13)(18, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_tr_14_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const section_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onEditField.emit({\n        section: section_r1\n      }));\n    });\n    i0.ɵɵtext(19, \" Add Field \");\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const section_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", section_r1.fields);\n  }\n}\nfunction TemplateDetailsComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0, 6);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"div\", 7)(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const section_r1 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onEditSection.emit({\n        templateId: ctx_r14.template.id,\n        section: section_r1\n      }));\n    });\n    i0.ɵɵtext(9, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const section_r1 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onDeleteSection.emit({\n        templateId: ctx_r16.template.id,\n        sectionId: section_r1.id\n      }));\n    });\n    i0.ɵɵtext(11, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_ng_container_11_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const section_r1 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onToggleFields.emit(section_r1));\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(14, TemplateDetailsComponent_ng_container_11_tr_14_Template, 20, 1, \"tr\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const section_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(section_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(section_r1.type);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", section_r1.expanded ? \"Hide Fields\" : \"View Fields\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r1.expanded && section_r1.fields);\n  }\n}\nexport class TemplateDetailsComponent {\n  constructor(fb, templateService) {\n    this.fb = fb;\n    this.templateService = templateService;\n    this.sections = [];\n    this.selectedSectionId = null;\n  }\n  ngOnInit() {\n    this.initSectionForm();\n    this.initFieldForm();\n    this.loadSections();\n  }\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required]\n    });\n  }\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false, Validators.required]\n    });\n  }\n  loadSections() {\n    if (!this.templateId) return;\n    this.templateService.getTemplateById(this.templateId.toString()).subscribe(template => {\n      this.sections = template.sections || [];\n    });\n  }\n  editSection(section = null) {\n    this.selectedSectionId = section ? section.id : null;\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n  }\n  saveSection() {\n    if (this.sectionParams.invalid || !this.templateId) return;\n    const section = this.sectionParams.value;\n    const sectionData = {\n      title: section.title,\n      type: this.mapSectionType(section.type)\n    };\n    if (section.id) {\n      this.templateService.updateSection(this.templateId.toString(), section.id.toString(), sectionData).subscribe(() => {\n        const existingSection = this.sections.find(s => s.id === section.id);\n        if (existingSection) Object.assign(existingSection, section);\n        this.showMessage('Section updated successfully.');\n      });\n    } else {\n      this.templateService.addSection(this.templateId.toString(), sectionData).subscribe(newSection => {\n        this.sections.push(newSection);\n        this.showMessage('Section added successfully.');\n      });\n    }\n  }\n  deleteSection(sectionId) {\n    if (!this.templateId) return;\n    this.templateService.deleteSection(this.templateId.toString(), sectionId.toString()).subscribe(() => {\n      this.sections = this.sections.filter(s => s.id !== sectionId);\n      this.showMessage('Section deleted successfully.');\n    });\n  }\n  editField(section, field = null) {\n    this.selectedSectionId = section.id;\n    this.initFieldForm();\n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired\n      });\n    }\n  }\n  saveField() {\n    if (this.fieldParams.invalid || !this.selectedSectionId || !this.templateId) return;\n    const field = this.fieldParams.value;\n    const fieldData = {\n      title: field.title,\n      type: this.mapFieldType(field.type),\n      isRequired: field.isRequired\n    };\n    if (field.id) {\n      this.templateService.updateField(this.templateId.toString(), this.selectedSectionId.toString(), field.id.toString(), fieldData).subscribe(() => {\n        const section = this.sections.find(s => s.id === this.selectedSectionId);\n        if (section) {\n          const existingField = section.fields?.find(f => f.id === field.id);\n          if (existingField) Object.assign(existingField, field);\n        }\n        this.showMessage('Field updated successfully.');\n      });\n    } else {\n      this.templateService.addField(this.templateId.toString(), this.selectedSectionId.toString(), fieldData).subscribe(newField => {\n        const section = this.sections.find(s => s.id === this.selectedSectionId);\n        if (section) {\n          if (!section.fields) section.fields = [];\n          section.fields.push(newField);\n        }\n        this.showMessage('Field added successfully.');\n      });\n    }\n  }\n  deleteField(section, fieldId) {\n    if (!this.templateId) return;\n    this.templateService.deleteField(this.templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n      section.fields = section.fields?.filter(f => f.id !== fieldId);\n      this.showMessage('Field deleted successfully.');\n    });\n  }\n  showMessage(msg) {\n    Swal.fire({\n      icon: 'success',\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000\n    });\n  }\n  mapSectionType(type) {\n    return type === 'Table' ? 1 : 0;\n  }\n  mapFieldType(type) {\n    const map = {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3\n    };\n    return map[type] ?? 0;\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    inputs: {\n      templateId: \"templateId\"\n    },\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"table-responsive\"], [1, \"table-striped\", \"table-hover\"], [1, \"!text-center\"], [\"key\", \"section.id\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"3\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-success\", 3, \"click\"], [\"key\", \"section.id\"], [1, \"flex\", \"items-center\", \"justify-center\", \"gap-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [4, \"ngIf\"], [\"key\", \"field.id\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"4\"], [\"key\", \"field.id\"]],\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\");\n        i0.ɵɵtext(5, \"Section Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 2);\n        i0.ɵɵtext(9, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"tbody\");\n        i0.ɵɵtemplate(11, TemplateDetailsComponent_ng_container_11_Template, 15, 4, \"ng-container\", 3);\n        i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_14_listener() {\n          return ctx.onAddSection.emit(ctx.template.id);\n        });\n        i0.ɵɵtext(15, \" Add Section \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.template.sections);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wbGF0ZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJ0ZW1wbGF0ZWdlbmVyYXRvci9jb21wb25lbnRzL3RlbXBsYXRlLWRldGFpbHMvdGVtcGxhdGUtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnTEFBZ0wiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","Swal","i0","section","field","fieldId","templateId","sectionId","TemplateDetailsComponent","constructor","fb","templateService","ngOnInit","initSectionForm","initFieldForm","loadSections","sectionParams","group","id","title","required","minLength","maxLength","type","fieldParams","isRequired","getTemplateById","toString","subscribe","template","sections","editSection","selectedSectionId","setValue","saveSection","invalid","value","sectionData","mapSectionType","updateSection","existingSection","find","s","Object","assign","showMessage","addSection","newSection","push","deleteSection","filter","editField","saveField","fieldData","mapFieldType","updateField","existingField","fields","f","addField","newField","deleteField","msg","fire","icon","toast","position","showConfirmButton","timer","map","selectors","inputs","decls","vars","consts","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Section } from 'src/app/qrtemplategenerator/Models/Section';\nimport { Field } from 'src/app/qrtemplategenerator/Models/Field';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html',\n  styleUrls: ['./template-details.component.css']\n})\nexport class TemplateDetailsComponent implements OnInit {\n  @Input() templateId!: number; \n  sectionParams!: FormGroup;\n  fieldParams!: FormGroup;\n\n  sections: Section[] = [];\n  selectedSectionId: number | null = null;\n\n  constructor(private fb: FormBuilder, private templateService: TemplateService) {}\n\n  ngOnInit() {\n    this.initSectionForm();\n    this.initFieldForm();\n    this.loadSections();\n  }\n\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n    });\n  }\n\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false, Validators.required],\n    });\n  }\n\n  loadSections() {\n    if (!this.templateId) return;\n\n    this.templateService.getTemplateById(this.templateId.toString()).subscribe((template) => {\n      this.sections = template.sections || [];\n    });\n  }\n\n  editSection(section: Section | null = null) {\n    this.selectedSectionId = section ? section.id : null;\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type,\n      });\n    }\n  }\n\n  saveSection() {\n    if (this.sectionParams.invalid || !this.templateId) return;\n    const section: Section = this.sectionParams.value;\n    const sectionData = { title: section.title, type: this.mapSectionType(section.type) };\n\n    if (section.id) {\n      this.templateService.updateSection(this.templateId.toString(), section.id.toString(), sectionData).subscribe(() => {\n        const existingSection = this.sections.find(s => s.id === section.id);\n        if (existingSection) Object.assign(existingSection, section);\n        this.showMessage('Section updated successfully.');\n      });\n    } else {\n      this.templateService.addSection(this.templateId.toString(), sectionData).subscribe((newSection) => {\n        this.sections.push(newSection);\n        this.showMessage('Section added successfully.');\n      });\n    }\n  }\n\n  deleteSection(sectionId: number) {\n    if (!this.templateId) return;\n\n    this.templateService.deleteSection(this.templateId.toString(), sectionId.toString()).subscribe(() => {\n      this.sections = this.sections.filter(s => s.id !== sectionId);\n      this.showMessage('Section deleted successfully.');\n    });\n  }\n\n  editField(section: Section, field: Field | null = null) {\n    this.selectedSectionId = section.id;\n    this.initFieldForm();\n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired,\n      });\n    }\n  }\n\n  saveField() {\n    if (this.fieldParams.invalid || !this.selectedSectionId || !this.templateId) return;\n    const field: Field = this.fieldParams.value;\n    const fieldData = { title: field.title, type: this.mapFieldType(field.type), isRequired: field.isRequired };\n\n    if (field.id) {\n      this.templateService.updateField(this.templateId.toString(), this.selectedSectionId.toString(), field.id.toString(), fieldData).subscribe(() => {\n        const section = this.sections.find(s => s.id === this.selectedSectionId);\n        if (section) {\n          const existingField = section.fields?.find(f => f.id === field.id);\n          if (existingField) Object.assign(existingField, field);\n        }\n        this.showMessage('Field updated successfully.');\n      });\n    } else {\n      this.templateService.addField(this.templateId.toString(), this.selectedSectionId.toString(), fieldData).subscribe((newField) => {\n        const section = this.sections.find(s => s.id === this.selectedSectionId);\n        if (section) {\n          if (!section.fields) section.fields = [];\n          section.fields.push(newField);\n        }\n        this.showMessage('Field added successfully.');\n      });\n    }\n  }\n\n  deleteField(section: Section, fieldId: number) {\n    if (!this.templateId) return;\n\n    this.templateService.deleteField(this.templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n      section.fields = section.fields?.filter(f => f.id !== fieldId);\n      this.showMessage('Field deleted successfully.');\n    });\n  }\n\n  showMessage(msg: string) {\n    Swal.fire({\n      icon: 'success',\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000\n    });\n  }\n\n  private mapSectionType(type: string): number {\n    return type === 'Table' ? 1 : 0;\n  }\n\n  private mapFieldType(type: string): number {\n    const map: { [key: string]: number } = { 'Text': 0, 'Number': 1, 'Date': 2, 'Boolean': 3 };\n    return map[type] ?? 0;\n  }\n}\n","<!-- template-sections-fields.component.html -->\n<div class=\"table-responsive\">\n    <!-- Sections Table -->\n    <table class=\"table-striped table-hover\">\n      <thead>\n        <tr>\n          <th>Section Title</th>\n          <th>Type</th>\n          <th class=\"!text-center\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-container *ngFor=\"let section of template.sections\" key=\"section.id\">\n          <tr>\n            <td>{{ section.title }}</td>\n            <td>{{ section.type }}</td>\n            <td>\n              <div class=\"flex items-center justify-center gap-4\">\n                <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" \n                  (click)=\"onEditSection.emit({templateId: template.id, section})\">\n                  Edit\n                </button>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" \n                  (click)=\"onDeleteSection.emit({templateId: template.id, sectionId: section.id})\">\n                  Delete\n                </button>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" \n                  (click)=\"onToggleFields.emit(section)\">\n                  {{ section.expanded ? 'Hide Fields' : 'View Fields' }}\n                </button>\n              </div>\n            </td>\n          </tr>\n          \n          <!-- Fields Table (nested) -->\n          <tr *ngIf=\"section.expanded && section.fields\">\n            <td colspan=\"3\">\n              <div class=\"table-responsive\">\n                <table class=\"table-striped table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Field Title</th>\n                      <th>Type</th>\n                      <th>Required</th>\n                      <th class=\"!text-center\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <ng-container *ngFor=\"let field of section.fields\" key=\"field.id\">\n                      <tr>\n                        <td>{{ field.title }}</td>\n                        <td>{{ field.type }}</td>\n                        <td>{{ field.isRequired ? 'Yes' : 'No' }}</td>\n                        <td>\n                          <div class=\"flex items-center justify-center gap-4\">\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" \n                              (click)=\"onEditField.emit({section, field})\">\n                              Edit\n                            </button>\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" \n                              (click)=\"onDeleteField.emit({section, fieldId: field.id})\">\n                              Delete\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    </ng-container>\n                    <tr>\n                      <td colspan=\"4\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-success\" \n                          (click)=\"onEditField.emit({section})\">\n                          Add Field\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </td>\n          </tr>\n        </ng-container>\n        <tr>\n          <td colspan=\"3\">\n            <button type=\"button\" class=\"btn btn-sm btn-outline-success\" \n              (click)=\"onAddSection.emit(template.id)\">\n              Add Section\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}