{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/qrtemplategenerator/services/template.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"angular-custom-modal\";\nconst _c0 = [\"addSectionModal\"];\nconst _c1 = [\"addFieldModal\"];\nfunction TemplateDetailsComponent_div_13_div_5_div_1_div_18_div_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 51);\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_13_div_5_div_1_div_18_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 49)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"div\", 41);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_13_div_5_div_1_div_18_div_2_span_5_Template, 2, 0, \"span\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_13_div_5_div_1_div_18_div_2_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const field_r10 = restoredCtx.$implicit;\n      const section_r7 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.editField(section_r7, field_r10));\n    });\n    i0.ɵɵelement(8, \"i\", 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_13_div_5_div_1_div_18_div_2_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const field_r10 = restoredCtx.$implicit;\n      const section_r7 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r15.deleteField(section_r7, field_r10.id));\n    });\n    i0.ɵɵelement(10, \"i\", 45);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const field_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", field_r10.title, \" (\", field_r10.type, \") \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Field ID: \", field_r10.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r10.isRequired);\n  }\n}\nfunction TemplateDetailsComponent_div_13_div_5_div_1_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 47);\n    i0.ɵɵtemplate(2, TemplateDetailsComponent_div_13_div_5_div_1_div_18_div_2_Template, 11, 4, \"div\", 48);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const section_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", section_r7.fields);\n  }\n}\nfunction TemplateDetailsComponent_div_13_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 39)(2, \"div\", 40)(3, \"div\")(4, \"h6\", 3);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 41);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\")(9, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_13_div_5_div_1_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const section_r7 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r18.editSection(ctx_r18.template.id, section_r7));\n    });\n    i0.ɵɵelement(10, \"i\", 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_13_div_5_div_1_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const section_r7 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r20.deleteSection(ctx_r20.template.id, section_r7.id));\n    });\n    i0.ɵɵelement(12, \"i\", 45);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 33)(14, \"div\", 15)(15, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_13_div_5_div_1_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const section_r7 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r21.editField(section_r7));\n    });\n    i0.ɵɵelement(16, \"i\", 36);\n    i0.ɵɵtext(17, \"Add Field \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_13_div_5_div_1_div_18_Template, 3, 1, \"div\", 37);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r7 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", section_r7.title, \" (\", section_r7.type, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Section ID: \", section_r7.id, \"\");\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", section_r7.fields && section_r7.fields.length > 0);\n  }\n}\nfunction TemplateDetailsComponent_div_13_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_13_div_5_div_1_Template, 19, 4, \"div\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.template.sections);\n  }\n}\nfunction TemplateDetailsComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34)(2, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_13_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.editSection(ctx_r22.template.id));\n    });\n    i0.ɵɵelement(3, \"i\", 36);\n    i0.ɵɵtext(4, \"Add Section \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_13_div_5_Template, 2, 1, \"div\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.template.sections && ctx_r0.template.sections.length > 0);\n  }\n}\nfunction TemplateDetailsComponent_div_25_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_25_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Minimum 3 characters required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_25_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Maximum 100 characters allowed \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_25_small_1_Template, 2, 0, \"small\", 37);\n    i0.ɵɵtemplate(2, TemplateDetailsComponent_div_25_small_2_Template, 2, 0, \"small\", 37);\n    i0.ɵɵtemplate(3, TemplateDetailsComponent_div_25_small_3_Template, 2, 0, \"small\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.sectionParams.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.sectionParams.get(\"title\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r2.sectionParams.get(\"title\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"maxlength\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_50_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_50_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Minimum 3 characters required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_50_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Maximum 100 characters allowed \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_50_small_1_Template, 2, 0, \"small\", 37);\n    i0.ɵɵtemplate(2, TemplateDetailsComponent_div_50_small_2_Template, 2, 0, \"small\", 37);\n    i0.ɵɵtemplate(3, TemplateDetailsComponent_div_50_small_3_Template, 2, 0, \"small\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.fieldParams.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.fieldParams.get(\"title\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r4.fieldParams.get(\"title\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"maxlength\"]);\n  }\n}\nexport class TemplateDetailsComponent {\n  constructor(fb, templateService) {\n    this.fb = fb;\n    this.templateService = templateService;\n    this.selectedTemplateId = null;\n    this.selectedSectionId = null;\n    this.templateList = [];\n    this.initSectionForm();\n    this.initFieldForm();\n  }\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required]\n    });\n  }\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false]\n    });\n  }\n  // Section methods\n  editSection(templateId, section = null) {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n  }\n  saveSection() {\n    if (this.sectionParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n    const section = this.sectionParams.value;\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      const addSectionDTO = {\n        title: section.title,\n        type: this.mapSectionType(section.type)\n      };\n      if (section.id) {\n        this.templateService.updateSection(templateId.toString(), section.id.toString(), addSectionDTO).subscribe(() => {\n          const template = this.templateList.find(t => t.id === templateId);\n          if (template && template.sections) {\n            const existingSection = template.sections.find(s => s.id === section.id);\n            if (existingSection) {\n              Object.assign(existingSection, section);\n            }\n          }\n          this.showMessage('Section has been updated successfully.');\n          this.addSectionModal.close();\n        }, error => this.handleErrorResponse(error));\n      } else {\n        this.templateService.addSection(templateId.toString(), addSectionDTO).subscribe(newSection => {\n          const template = this.templateList.find(t => t.id === templateId);\n          if (template) {\n            if (!template.sections) {\n              template.sections = [];\n            }\n            template.sections.push(newSection);\n          }\n          this.showMessage('Section has been added successfully.');\n          this.addSectionModal.close();\n        }, error => this.handleErrorResponse(error));\n      }\n    }\n  }\n  mapSectionType(type) {\n    const sectionTypeMap = {\n      'Form': 0,\n      'Table': 1\n    };\n    return sectionTypeMap[type] ?? 0;\n  }\n  handleErrorResponse(error) {\n    console.error('Error response:', error);\n    console.error('Error details:', JSON.stringify(error.error));\n    this.showMessage(error.error?.message || 'An unknown error occurred!', 'error');\n  }\n  showMessage(msg, type = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: {\n        container: 'toast'\n      }\n    });\n  }\n  deleteSection(templateId, sectionId) {\n    this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe(() => {\n      const template = this.templateList.find(t => t.id === templateId);\n      if (template && template.sections) {\n        template.sections = template.sections.filter(s => s.id !== sectionId);\n      }\n      this.showMessage('Section has been deleted successfully.');\n    }, error => {\n      this.showMessage(error, 'error');\n    });\n  }\n  loadSections(templateId) {\n    this.templateService.getTemplateById(templateId.toString()).subscribe(template => {\n      const existingTemplate = this.templateList.find(t => t.id === templateId);\n      if (existingTemplate) {\n        existingTemplate.sections = template.sections;\n      }\n    });\n  }\n  getTemplateIdBySectionId(sectionId) {\n    for (const template of this.templateList) {\n      if (template.sections) {\n        for (const section of template.sections) {\n          if (section.id === sectionId) {\n            return template.id;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n  // Field methods\n  editField(section, field = null) {\n    this.selectedSectionId = section.id;\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    this.selectedTemplateId = templateId !== undefined ? templateId : null;\n    this.addFieldModal.open();\n    this.initFieldForm();\n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired\n      });\n    }\n  }\n  saveField() {\n    if (this.fieldParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n    const field = this.fieldParams.value;\n    const sectionId = this.selectedSectionId;\n    const templateId = this.selectedTemplateId;\n    if (templateId != null && sectionId != null) {\n      const addFieldDTO = {\n        title: field.title,\n        type: this.mapFieldType(field.type),\n        isRequired: field.isRequired\n      };\n      if (field.id != null && field.id !== 0) {\n        // In saveField() update case\n        this.templateService.updateField(templateId.toString(), sectionId.toString(), field.id.toString(), addFieldDTO).subscribe(updatedField => {\n          // Find and update the local field\n          const template = this.templateList.find(t => t.id === templateId);\n          const section = template?.sections?.find(s => s.id === sectionId);\n          if (section?.fields) {\n            const index = section.fields.findIndex(f => f.id === updatedField.id);\n            if (index > -1) {\n              section.fields = [...section.fields.slice(0, index), updatedField, ...section.fields.slice(index + 1)];\n            }\n          }\n          this.showMessage('Field updated successfully');\n          this.addFieldModal.close();\n        }, error => this.handleErrorResponse(error));\n      } else {\n        // In saveField() add case\n        this.templateService.addField(templateId.toString(), sectionId.toString(), addFieldDTO).subscribe(newField => {\n          // Find and update the local data\n          const template = this.templateList.find(t => t.id === templateId);\n          const section = template?.sections?.find(s => s.id === sectionId);\n          if (section) {\n            if (!section.fields) section.fields = [];\n            section.fields = [...section.fields, newField]; // Immutable update\n          }\n\n          this.showMessage('Field added successfully');\n          this.addFieldModal.close();\n        }, error => this.handleErrorResponse(error));\n      }\n    } else {\n      this.showMessage('Template ID or Section ID is missing.', 'error');\n    }\n  }\n  mapFieldType(type) {\n    const fieldTypeMap = {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3\n    };\n    return fieldTypeMap[type];\n  }\n  deleteField(section, fieldId) {\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    if (templateId !== undefined) {\n      this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        const existingSection = template?.sections?.find(s => s.id === section.id);\n        if (existingSection && existingSection.fields) {\n          existingSection.fields = existingSection.fields.filter(f => f.id !== fieldId);\n        }\n        this.showMessage('Field has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    } else {\n      this.showMessage('Failed to delete field: Template ID is missing.', 'error');\n    }\n  }\n  loadFields(section) {\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      this.templateService.getSectionFields(templateId.toString(), section.id.toString()).subscribe(fields => {\n        section.fields = fields;\n      });\n    }\n  }\n  toggleSections(template) {\n    if (!template.sections) {\n      this.loadSections(template.id);\n    }\n    template.expanded = !template.expanded;\n  }\n  toggleFields(section) {\n    if (!section.fields) {\n      this.loadFields(section);\n    }\n    section.expanded = !section.expanded;\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    viewQuery: function TemplateDetailsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSectionModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addFieldModal = _t.first);\n      }\n    },\n    inputs: {\n      template: \"template\"\n    },\n    decls: 72,\n    vars: 16,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"card\", \"shadow\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"small\", \"mt-1\"], [1, \"me-3\"], [1, \"btn\", \"btn-light\", \"btn-sm\", 3, \"click\"], [1, \"fas\"], [\"class\", \"card-body\", 4, \"ngIf\"], [3, \"closeOnOutsideClick\"], [\"addSectionModal\", \"\"], [1, \"modal-header\"], [1, \"modal-title\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"type\", 1, \"form-select\"], [\"value\", \"Form\"], [\"value\", \"Table\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"addFieldModal\", \"\"], [\"value\", \"Text\"], [\"value\", \"Number\"], [\"value\", \"Date\"], [\"value\", \"Boolean\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"isRequired\", 1, \"form-check-input\"], [1, \"form-check-label\"], [1, \"card-body\"], [1, \"mb-4\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-plus\", \"me-2\"], [4, \"ngIf\"], [\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-2\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\", \"bg-light\"], [1, \"small\", \"text-muted\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"class\", \"badge bg-warning ms-2\", 4, \"ngIf\"], [1, \"badge\", \"bg-warning\", \"ms-2\"], [1, \"text-danger\"]],\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r30 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"h5\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"span\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_11_listener() {\n          return ctx.toggleSections(ctx.template);\n        });\n        i0.ɵɵelement(12, \"i\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, TemplateDetailsComponent_div_13_Template, 6, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"modal\", 9, 10)(16, \"div\", 11)(17, \"h5\", 12);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 13)(20, \"form\", 14)(21, \"div\", 15)(22, \"label\", 16);\n        i0.ɵɵtext(23, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵtemplate(25, TemplateDetailsComponent_div_25_Template, 4, 3, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 15)(27, \"label\", 16);\n        i0.ɵɵtext(28, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"select\", 19)(30, \"option\", 20);\n        i0.ɵɵtext(31, \"Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"option\", 21);\n        i0.ɵɵtext(33, \"Table\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(34, \"div\", 22)(35, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_35_listener() {\n          i0.ɵɵrestoreView(_r30);\n          const _r1 = i0.ɵɵreference(15);\n          return i0.ɵɵresetView(_r1.close());\n        });\n        i0.ɵɵtext(36, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_37_listener() {\n          return ctx.saveSection();\n        });\n        i0.ɵɵtext(38, \"Save\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"modal\", 9, 25)(41, \"div\", 11)(42, \"h5\", 12);\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 13)(45, \"form\", 14)(46, \"div\", 15)(47, \"label\", 16);\n        i0.ɵɵtext(48, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 17);\n        i0.ɵɵtemplate(50, TemplateDetailsComponent_div_50_Template, 4, 3, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 15)(52, \"label\", 16);\n        i0.ɵɵtext(53, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"select\", 19)(55, \"option\", 26);\n        i0.ɵɵtext(56, \"Text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"option\", 27);\n        i0.ɵɵtext(58, \"Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"option\", 28);\n        i0.ɵɵtext(60, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"option\", 29);\n        i0.ɵɵtext(62, \"Boolean\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"div\", 30);\n        i0.ɵɵelement(64, \"input\", 31);\n        i0.ɵɵelementStart(65, \"label\", 32);\n        i0.ɵɵtext(66, \"Required Field\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(67, \"div\", 22)(68, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_68_listener() {\n          i0.ɵɵrestoreView(_r30);\n          const _r3 = i0.ɵɵreference(40);\n          return i0.ɵɵresetView(_r3.close());\n        });\n        i0.ɵɵtext(69, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_Template_button_click_70_listener() {\n          return ctx.saveField();\n        });\n        i0.ɵɵtext(71, \"Save\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_9_0;\n        let tmp_13_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.template.title);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Template ID: \", ctx.template.id, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Unique ID: \", ctx.template.uniqeCode, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"fa-chevron-down\", !ctx.template.expanded)(\"fa-chevron-up\", ctx.template.expanded);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.template.expanded);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"closeOnOutsideClick\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.sectionParams.value.id ? \"Edit\" : \"Add\", \" Section\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.sectionParams);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.sectionParams.get(\"title\")) == null ? null : tmp_9_0.invalid) && (((tmp_9_0 = ctx.sectionParams.get(\"title\")) == null ? null : tmp_9_0.dirty) || ((tmp_9_0 = ctx.sectionParams.get(\"title\")) == null ? null : tmp_9_0.touched)));\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"closeOnOutsideClick\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.fieldParams.value.id ? \"Edit\" : \"Add\", \" Field\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.fieldParams);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_13_0 = ctx.fieldParams.get(\"title\")) == null ? null : tmp_13_0.invalid) && (((tmp_13_0 = ctx.fieldParams.get(\"title\")) == null ? null : tmp_13_0.dirty) || ((tmp_13_0 = ctx.fieldParams.get(\"title\")) == null ? null : tmp_13_0.touched)));\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.ModalComponent, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","Swal","i0","TemplateDetailsComponent","constructor","fb","templateService","initSectionForm","initFieldForm","sectionParams","group","id","title","required","minLength","maxLength","type","fieldParams","isRequired","editSection","templateId","section","selectedTemplateId","addSectionModal","open","setValue","saveSection","invalid","showMessage","value","addSectionDTO","mapSectionType","updateSection","toString","subscribe","template","templateList","find","t","sections","existingSection","s","Object","assign","close","error","handleErrorResponse","addSection","newSection","push","sectionTypeMap","console","JSON","stringify","message","msg","fire","icon","toast","position","showConfirmButton","timer","customClass","container","deleteSection","sectionId","filter","loadSections","getTemplateById","existingTemplate","getTemplateIdBySectionId","undefined","editField","field","selectedSectionId","addFieldModal","saveField","addFieldDTO","mapFieldType","updateField","updatedField","fields","index","findIndex","f","slice","addField","newField","fieldTypeMap","deleteField","fieldId","loadFields","getSectionFields","toggleSections","expanded","toggleFields","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'angular-custom-modal';\nimport Swal from 'sweetalert2';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Template } from 'src/app/qrtemplategenerator/Models/Template';\nimport { Section } from 'src/app/qrtemplategenerator/Models/Section';\nimport { Field } from 'src/app/qrtemplategenerator/Models/Field';\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html'\n})\nexport class TemplateDetailsComponent {\n  @Input() template!: Template;\n  @ViewChild('addSectionModal') addSectionModal!: ModalComponent;\n  @ViewChild('addFieldModal') addFieldModal!: ModalComponent;\n\n  sectionParams!: FormGroup;\n  fieldParams!: FormGroup;\n  selectedSection?: Section;\n\n\n  \n  selectedTemplateId: number | null = null;\n  selectedSectionId: number | null = null;\n  templateList: Template[] = [];\n\n\n  \n\n  constructor(private fb: FormBuilder, private templateService: TemplateService) {\n    this.initSectionForm();\n    this.initFieldForm();\n  }\n\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n    });\n  }\n\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false],\n    });\n  }\n\n  // Section methods\n  editSection(templateId: number, section: Section | null = null) {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type,\n      });\n    }\n  }\n\n  saveSection() {\n    if (this.sectionParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n  \n    const section: Section = this.sectionParams.value;\n    const templateId = this.selectedTemplateId;\n  \n    \n  \n    if (templateId !== null) {\n      const addSectionDTO = {\n        title: section.title,\n        type: this.mapSectionType(section.type) \n      };\n  \n   \n  \n      if (section.id) {\n       \n        this.templateService.updateSection(templateId.toString(), section.id.toString(), addSectionDTO)\n          .subscribe(\n            () => {\n              const template = this.templateList.find(t => t.id === templateId);\n              if (template && template.sections) {\n                const existingSection = template.sections.find(s => s.id === section.id);\n                if (existingSection) {\n                  Object.assign(existingSection, section);\n                }\n              }\n              this.showMessage('Section has been updated successfully.');\n              this.addSectionModal.close();\n            },\n            (error) => this.handleErrorResponse(error)\n          );\n      } else {\n       \n        this.templateService.addSection(templateId.toString(), addSectionDTO)\n          .subscribe(\n            (newSection) => {\n              const template = this.templateList.find(t => t.id === templateId);\n              if (template) {\n                if (!template.sections) {\n                  template.sections = [];\n                }\n                template.sections.push(newSection);\n              }\n              this.showMessage('Section has been added successfully.');\n              this.addSectionModal.close();\n            },\n            (error) => this.handleErrorResponse(error)\n          );\n      }\n    }\n  }\n  \n \n  private mapSectionType(type: any): number {\n    const sectionTypeMap: { [key: string]: number } = {\n      'Form': 0,\n      'Table': 1,\n    };\n    return sectionTypeMap[type] ?? 0; \n  }\n  private handleErrorResponse(error: any) {\n    console.error('Error response:', error);\n    console.error('Error details:', JSON.stringify(error.error));\n    this.showMessage(error.error?.message || 'An unknown error occurred!', 'error');\n  }\n\n\n  showMessage(msg: string, type: 'success' | 'error' = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: { container: 'toast' },\n    });\n  }\n    deleteSection(templateId: number, sectionId: number) {\n      this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        if (template && template.sections) {\n          template.sections = template.sections.filter(s => s.id !== sectionId);\n        }\n        this.showMessage('Section has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    }\n    loadSections(templateId: number) {\n      this.templateService.getTemplateById(templateId.toString()).subscribe((template) => {\n        const existingTemplate = this.templateList.find(t => t.id === templateId);\n        if (existingTemplate) {\n          existingTemplate.sections = template.sections;\n        }\n      });\n    }\n    getTemplateIdBySectionId(sectionId: number): number | undefined {\n      for (const template of this.templateList) {\n        if (template.sections) { \n          for (const section of template.sections) {\n            if (section.id === sectionId) {\n              return template.id;\n            }\n          }\n        }\n      }\n      return undefined;\n    }\n  \n\n  // Field methods\n  editField(section: Section, field: Field | null = null) {\n    this.selectedSectionId = section.id;\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    this.selectedTemplateId = templateId !== undefined ? templateId : null; \n    this.addFieldModal.open();  \n    this.initFieldForm();  \n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired,\n      });\n    }\n  }\n\n  saveField() {\n   \n    \n    if (this.fieldParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n  \n    const field: Field = this.fieldParams.value;\n    const sectionId = this.selectedSectionId;\n    const templateId = this.selectedTemplateId;\n  \n  \n  \n    if (templateId != null && sectionId != null) {\n      const addFieldDTO = {\n        title: field.title,\n        type: this.mapFieldType(field.type), // Convert type correctly\n        isRequired: field.isRequired,\n      };\n  \n    \n  \n      if (field.id != null && field.id !== 0) {\n       \n       // In saveField() update case\nthis.templateService.updateField(templateId.toString(), sectionId.toString(), field.id.toString(), addFieldDTO)\n.subscribe(\n  (updatedField) => {\n    // Find and update the local field\n    const template = this.templateList.find(t => t.id === templateId);\n    const section = template?.sections?.find(s => s.id === sectionId);\n    \n    if (section?.fields) {\n      const index = section.fields.findIndex(f => f.id === updatedField.id);\n      if (index > -1) {\n        section.fields = [\n          ...section.fields.slice(0, index),\n          updatedField,\n          ...section.fields.slice(index + 1)\n        ];\n      }\n    }\n    \n    this.showMessage('Field updated successfully');\n    this.addFieldModal.close();\n  },\n  (error) => this.handleErrorResponse(error)\n);\n      } else {\n      \n     // In saveField() add case\nthis.templateService.addField(templateId.toString(), sectionId.toString(), addFieldDTO)\n.subscribe(\n  (newField) => {\n    // Find and update the local data\n    const template = this.templateList.find(t => t.id === templateId);\n    const section = template?.sections?.find(s => s.id === sectionId);\n    \n    if (section) {\n      if (!section.fields) section.fields = [];\n      section.fields = [...section.fields, newField]; // Immutable update\n    }\n    \n    this.showMessage('Field added successfully');\n    this.addFieldModal.close();\n  },\n  (error) => this.handleErrorResponse(error)\n);\n      }\n    } else {\n      this.showMessage('Template ID or Section ID is missing.', 'error');\n    }\n  }\n  \n \n  private mapFieldType(type: any): number {\n    const fieldTypeMap: { [key: string]: number } = {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3,\n    };\n    return fieldTypeMap[type]; \n  }\n  deleteField(section: Section, fieldId: number) {\n    const templateId = this.getTemplateIdBySectionId(section.id); \n    \n   \n  \n    if (templateId !== undefined) {  \n      this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        const existingSection = template?.sections?.find(s => s.id === section.id);\n        if (existingSection && existingSection.fields) {\n          existingSection.fields = existingSection.fields.filter(f => f.id !== fieldId);\n        }\n        this.showMessage('Field has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    } else {\n      this.showMessage('Failed to delete field: Template ID is missing.', 'error');\n    }\n  }\n\n\n  loadFields(section: Section) {\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      this.templateService.getSectionFields(templateId.toString(), section.id.toString()).subscribe((fields) => {\n        section.fields = fields;\n      });\n    }\n  }\n\n  toggleSections(template: any) {\n    if (!template.sections) {\n      this.loadSections(template.id);\n    }\n    template.expanded = !template.expanded;\n  }\n  \n  toggleFields(section: any) {\n    if (!section.fields) {\n      this.loadFields(section);\n    }\n    section.expanded = !section.expanded;\n  }\n}","<div class=\"container mt-4\">\n    <!-- Template Card -->\n    <div class=\"card shadow mb-4\">\n      <div class=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\n        <div>\n          <h5 class=\"mb-0\">{{template.title}}</h5>\n          <div class=\"small mt-1\">\n            <span class=\"me-3\">Template ID: {{template.id}}</span>\n            <span>Unique ID: {{template.uniqeCode}}</span>\n          </div>\n        </div>\n        <button class=\"btn btn-light btn-sm\" (click)=\"toggleSections(template)\">\n          <i class=\"fas\" [class.fa-chevron-down]=\"!template.expanded\" [class.fa-chevron-up]=\"template.expanded\"></i>\n        </button>\n      </div>\n      \n      <div class=\"card-body\" *ngIf=\"template.expanded\">\n        <!-- Add Section Button -->\n        <div class=\"mb-4\">\n          <button class=\"btn btn-success btn-sm\" (click)=\"editSection(template.id)\">\n            <i class=\"fas fa-plus me-2\"></i>Add Section\n          </button>\n        </div>\n  \n        <!-- Sections List -->\n        <div *ngIf=\"template.sections && template.sections.length > 0\">\n          <div class=\"mb-3\" *ngFor=\"let section of template.sections\">\n            <!-- Section Card -->\n            <div class=\"card mb-2\">\n              <div class=\"card-header d-flex justify-content-between align-items-center bg-light\">\n                <div>\n                  <h6 class=\"mb-0\">{{section.title}} ({{section.type}})</h6>\n                  <div class=\"small text-muted\">Section ID: {{section.id}}</div>\n                </div>\n                <div>\n                  <button class=\"btn btn-sm btn-primary me-2\" (click)=\"editSection(template.id, section)\">\n                    <i class=\"fas fa-edit\"></i>\n                  </button>\n                  <button class=\"btn btn-sm btn-danger\" (click)=\"deleteSection(template.id, section.id!)\">\n                    <i class=\"fas fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n  \n              <!-- Fields Content -->\n              <div class=\"card-body\">\n                <!-- Add Field Button -->\n                <div class=\"mb-3\">\n                  <button class=\"btn btn-info btn-sm\" (click)=\"editField(section)\">\n                    <i class=\"fas fa-plus me-2\"></i>Add Field\n                  </button>\n                </div>\n  \n                <!-- Fields List -->\n                <div *ngIf=\"section.fields && section.fields.length > 0\">\n                  <div class=\"list-group\">\n                    <div class=\"list-group-item d-flex justify-content-between align-items-center\" \n                         *ngFor=\"let field of section.fields\">\n                      <div>\n                        {{field.title}} ({{field.type}})\n                        <div class=\"small text-muted\">Field ID: {{field.id}}</div>\n                        <span class=\"badge bg-warning ms-2\" *ngIf=\"field.isRequired\">Required</span>\n                      </div>\n                      <div>\n                        <button class=\"btn btn-sm btn-primary me-2\" \n                                (click)=\"editField(section, field)\">\n                          <i class=\"fas fa-edit\"></i>\n                        </button>\n                        <button class=\"btn btn-sm btn-danger\" \n                                (click)=\"deleteField(section, field.id!)\">\n                          <i class=\"fas fa-trash\"></i>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Section Modal -->\n    <modal #addSectionModal [closeOnOutsideClick]=\"false\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{sectionParams.value.id ? 'Edit' : 'Add'}} Section</h5>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"sectionParams\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Title</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"title\">\n            <div *ngIf=\"sectionParams.get('title')?.invalid && \n                        (sectionParams.get('title')?.dirty || sectionParams.get('title')?.touched)\"\n                 class=\"text-danger\">\n              <small *ngIf=\"sectionParams.get('title')?.errors?.['required']\">\n                Title is required\n              </small>\n              <small *ngIf=\"sectionParams.get('title')?.errors?.['minlength']\">\n                Minimum 3 characters required\n              </small>\n              <small *ngIf=\"sectionParams.get('title')?.errors?.['maxlength']\">\n                Maximum 100 characters allowed\n              </small>\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Type</label>\n            <select class=\"form-select\" formControlName=\"type\">\n              <option value=\"Form\">Form</option>\n              <option value=\"Table\">Table</option>\n            </select>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"addSectionModal.close()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveSection()\">Save</button>\n      </div>\n    </modal>\n  \n    <!-- Field Modal -->\n    <modal #addFieldModal [closeOnOutsideClick]=\"false\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{fieldParams.value.id ? 'Edit' : 'Add'}} Field</h5>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"fieldParams\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Title</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"title\">\n            <div *ngIf=\"fieldParams.get('title')?.invalid && \n                        (fieldParams.get('title')?.dirty || fieldParams.get('title')?.touched)\"\n                 class=\"text-danger\">\n              <small *ngIf=\"fieldParams.get('title')?.errors?.['required']\">\n                Title is required\n              </small>\n              <small *ngIf=\"fieldParams.get('title')?.errors?.['minlength']\">\n                Minimum 3 characters required\n              </small>\n              <small *ngIf=\"fieldParams.get('title')?.errors?.['maxlength']\">\n                Maximum 100 characters allowed\n              </small>\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Type</label>\n            <select class=\"form-select\" formControlName=\"type\">\n              <option value=\"Text\">Text</option>\n              <option value=\"Number\">Number</option>\n              <option value=\"Date\">Date</option>\n              <option value=\"Boolean\">Boolean</option>\n            </select>\n          </div>\n          <div class=\"mb-3 form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"isRequired\">\n            <label class=\"form-check-label\">Required Field</label>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"addFieldModal.close()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveField()\">Save</button>\n      </div>\n    </modal>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}