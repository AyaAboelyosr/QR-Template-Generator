{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/qrtemplategenerator/services/template.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"angular-custom-modal\";\nimport * as i5 from \"@angular/router\";\nconst _c0 = [\"addSectionModal\"];\nconst _c1 = [\"addFieldModal\"];\nfunction TemplateDetailsComponent_div_0_div_13_div_18_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 35);\n    i0.ɵɵtext(1, \" Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_div_13_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"div\")(3, \"span\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 31);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TemplateDetailsComponent_div_0_div_13_div_18_span_7_Template, 2, 0, \"span\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 20)(9, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_div_18_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const field_r14 = restoredCtx.$implicit;\n      const section_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.editField(section_r12, field_r14));\n    });\n    i0.ɵɵtext(10, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_div_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const field_r14 = restoredCtx.$implicit;\n      const section_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.deleteField(section_r12, field_r14.id));\n    });\n    i0.ɵɵtext(12, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const field_r14 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(field_r14.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", field_r14.type, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r14.isRequired);\n  }\n}\nfunction TemplateDetailsComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"h3\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.editSection(ctx_r21.template.id, section_r12));\n    });\n    i0.ɵɵtext(8, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.deleteSection(ctx_r23.template.id, section_r12.id));\n    });\n    i0.ɵɵtext(10, \" Delete \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 23)(12, \"div\", 24)(13, \"h4\", 25);\n    i0.ɵɵtext(14, \"Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.editField(section_r12));\n    });\n    i0.ɵɵtext(16, \" Add Field \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 27);\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_0_div_13_div_18_Template, 13, 3, \"div\", 28);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r12 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", section_r12.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", section_r12.type, \")\");\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", section_r12.fields);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.sectionParams.controls[\"id\"].value ? \"Edit Section\" : \"Add Section\");\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_21_div_5_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.sectionParams.controls[\"title\"].errors == null ? null : ctx_r25.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_21_div_16_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.sectionParams.controls[\"title\"].errors == null ? null : ctx_r26.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateDetailsComponent_div_0_ng_template_21_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.saveSection());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 39);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 40);\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_0_ng_template_21_div_5_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n    i0.ɵɵelement(11, \"input\", 42);\n    i0.ɵɵtext(12, \" Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵelement(14, \"input\", 43);\n    i0.ɵɵtext(15, \" Table \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(16, TemplateDetailsComponent_div_0_ng_template_21_div_16_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 44)(18, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_ng_template_21_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r30);\n      i0.ɵɵnextContext();\n      const _r2 = i0.ɵɵreference(18);\n      return i0.ɵɵresetView(_r2.close());\n    });\n    i0.ɵɵtext(19, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 46);\n    i0.ɵɵtext(21, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r6.sectionParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.sectionParams.controls[\"title\"].invalid && ctx_r6.sectionParams.controls[\"title\"].touched);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.sectionParams.controls[\"title\"].invalid && ctx_r6.sectionParams.controls[\"title\"].touched);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.fieldParams.controls[\"id\"].value ? \"Edit Field\" : \"Add Field\");\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title cannot be more than 100 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵtemplate(2, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_2_Template, 2, 0, \"div\", 48);\n    i0.ɵɵtemplate(3, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_3_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"maxlength\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_27_div_18_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.fieldParams.controls[\"type\"].errors == null ? null : ctx_r33.fieldParams.controls[\"type\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateDetailsComponent_div_0_ng_template_27_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.saveField());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 49);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 50);\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_0_ng_template_27_div_5_Template, 4, 3, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\", 51);\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 52)(10, \"option\", 53);\n    i0.ɵɵtext(11, \"Text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 54);\n    i0.ɵɵtext(13, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 55);\n    i0.ɵɵtext(15, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 56);\n    i0.ɵɵtext(17, \"Boolean\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_0_ng_template_27_div_18_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 38)(20, \"label\", 57);\n    i0.ɵɵtext(21, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 44)(24, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_ng_template_27_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r39);\n      i0.ɵɵnextContext();\n      const _r7 = i0.ɵɵreference(24);\n      return i0.ɵɵresetView(_r7.close());\n    });\n    i0.ɵɵtext(25, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 46);\n    i0.ɵɵtext(27, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r11.fieldParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.fieldParams.controls[\"title\"].invalid && ctx_r11.fieldParams.controls[\"title\"].touched);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.fieldParams.controls[\"type\"].invalid && ctx_r11.fieldParams.controls[\"type\"].touched);\n  }\n}\nfunction TemplateDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\")(3, \"h2\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\", 5);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵtext(11, \" Back to List \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 7);\n    i0.ɵɵtemplate(13, TemplateDetailsComponent_div_0_div_13_Template, 19, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.editSection(ctx_r41.template.id));\n    });\n    i0.ɵɵtext(16, \" Add New Section \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"modal\", 11, 12);\n    i0.ɵɵtemplate(19, TemplateDetailsComponent_div_0_ng_template_19_Template, 2, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(21, TemplateDetailsComponent_div_0_ng_template_21_Template, 22, 3, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"modal\", 11, 15);\n    i0.ɵɵtemplate(25, TemplateDetailsComponent_div_0_ng_template_25_Template, 2, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(27, TemplateDetailsComponent_div_0_ng_template_27_Template, 28, 3, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.template.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID: \", ctx_r0.template.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Unique Code: \", ctx_r0.template.uniqeCode, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.template.sections);\n  }\n}\nexport class TemplateDetailsComponent {\n  constructor(fb, templateService) {\n    this.fb = fb;\n    this.templateService = templateService;\n    this.template = {\n      id: 0,\n      title: '',\n      uniqeCode: '',\n      sections: []\n    };\n    this.selectedTemplateId = null;\n    this.selectedSectionId = null;\n    this.templateList = [];\n    this.initSectionForm();\n    this.initFieldForm();\n  }\n  ngOnInit() {\n    // Any additional logic when the template details component is initialized\n    console.log(this.template); // Log to ensure template data is correctly passed\n  }\n\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required]\n    });\n  }\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false]\n    });\n  }\n  // Section methods\n  editSection(templateId, section = null) {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n  }\n  saveSection() {\n    if (this.sectionParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n    const section = this.sectionParams.value;\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      const addSectionDTO = {\n        title: section.title,\n        type: this.mapSectionType(section.type)\n      };\n      if (section.id) {\n        this.templateService.updateSection(templateId.toString(), section.id.toString(), addSectionDTO).subscribe(() => {\n          const template = this.templateList.find(t => t.id === templateId);\n          if (template && template.sections) {\n            const existingSection = template.sections.find(s => s.id === section.id);\n            if (existingSection) {\n              Object.assign(existingSection, section);\n            }\n          }\n          this.showMessage('Section has been updated successfully.');\n          this.addSectionModal.close();\n        }, error => this.handleErrorResponse(error));\n      } else {\n        this.templateService.addSection(templateId.toString(), addSectionDTO).subscribe(newSection => {\n          const template = this.templateList.find(t => t.id === templateId);\n          if (template) {\n            if (!template.sections) {\n              template.sections = [];\n            }\n            template.sections.push(newSection);\n          }\n          this.showMessage('Section has been added successfully.');\n          this.addSectionModal.close();\n        }, error => this.handleErrorResponse(error));\n      }\n    }\n  }\n  mapSectionType(type) {\n    const sectionTypeMap = {\n      'Form': 0,\n      'Table': 1\n    };\n    return sectionTypeMap[type] ?? 0;\n  }\n  handleErrorResponse(error) {\n    console.error('Error response:', error);\n    console.error('Error details:', JSON.stringify(error.error));\n    this.showMessage(error.error?.message || 'An unknown error occurred!', 'error');\n  }\n  showMessage(msg, type = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: {\n        container: 'toast'\n      }\n    });\n  }\n  deleteSection(templateId, sectionId) {\n    this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe(() => {\n      const template = this.templateList.find(t => t.id === templateId);\n      if (template && template.sections) {\n        template.sections = template.sections.filter(s => s.id !== sectionId);\n      }\n      this.showMessage('Section has been deleted successfully.');\n    }, error => {\n      this.showMessage(error, 'error');\n    });\n  }\n  loadSections(templateId) {\n    this.templateService.getTemplateById(templateId.toString()).subscribe(template => {\n      const existingTemplate = this.templateList.find(t => t.id === templateId);\n      if (existingTemplate) {\n        existingTemplate.sections = template.sections;\n      }\n    });\n  }\n  getTemplateIdBySectionId(sectionId) {\n    for (const template of this.templateList) {\n      if (template.sections) {\n        for (const section of template.sections) {\n          if (section.id === sectionId) {\n            return template.id;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n  // Field methods\n  editField(section, field = null) {\n    this.selectedSectionId = section.id;\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    this.selectedTemplateId = templateId !== undefined ? templateId : null;\n    this.addFieldModal.open();\n    this.initFieldForm();\n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired\n      });\n    }\n  }\n  saveField() {\n    if (this.fieldParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n    const field = this.fieldParams.value;\n    const sectionId = this.selectedSectionId;\n    const templateId = this.selectedTemplateId;\n    if (templateId != null && sectionId != null) {\n      const addFieldDTO = {\n        title: field.title,\n        type: this.mapFieldType(field.type),\n        isRequired: field.isRequired\n      };\n      if (field.id != null && field.id !== 0) {\n        // In saveField() update case\n        this.templateService.updateField(templateId.toString(), sectionId.toString(), field.id.toString(), addFieldDTO).subscribe(updatedField => {\n          // Find and update the local field\n          const template = this.templateList.find(t => t.id === templateId);\n          const section = template?.sections?.find(s => s.id === sectionId);\n          if (section?.fields) {\n            const index = section.fields.findIndex(f => f.id === updatedField.id);\n            if (index > -1) {\n              section.fields = [...section.fields.slice(0, index), updatedField, ...section.fields.slice(index + 1)];\n            }\n          }\n          this.showMessage('Field updated successfully');\n          this.addFieldModal.close();\n        }, error => this.handleErrorResponse(error));\n      } else {\n        // In saveField() add case\n        this.templateService.addField(templateId.toString(), sectionId.toString(), addFieldDTO).subscribe(newField => {\n          // Find and update the local data\n          const template = this.templateList.find(t => t.id === templateId);\n          const section = template?.sections?.find(s => s.id === sectionId);\n          if (section) {\n            if (!section.fields) section.fields = [];\n            section.fields = [...section.fields, newField]; // Immutable update\n          }\n\n          this.showMessage('Field added successfully');\n          this.addFieldModal.close();\n        }, error => this.handleErrorResponse(error));\n      }\n    } else {\n      this.showMessage('Template ID or Section ID is missing.', 'error');\n    }\n  }\n  mapFieldType(type) {\n    const fieldTypeMap = {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3\n    };\n    return fieldTypeMap[type];\n  }\n  deleteField(section, fieldId) {\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    if (templateId !== undefined) {\n      this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        const existingSection = template?.sections?.find(s => s.id === section.id);\n        if (existingSection && existingSection.fields) {\n          existingSection.fields = existingSection.fields.filter(f => f.id !== fieldId);\n        }\n        this.showMessage('Field has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    } else {\n      this.showMessage('Failed to delete field: Template ID is missing.', 'error');\n    }\n  }\n  loadFields(section) {\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      this.templateService.getSectionFields(templateId.toString(), section.id.toString()).subscribe(fields => {\n        section.fields = fields;\n      });\n    }\n  }\n  toggleSections(template) {\n    if (!template.sections) {\n      this.loadSections(template.id);\n    }\n    template.expanded = !template.expanded;\n  }\n  toggleFields(section) {\n    if (!section.fields) {\n      this.loadFields(section);\n    }\n    section.expanded = !section.expanded;\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    viewQuery: function TemplateDetailsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSectionModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addFieldModal = _t.first);\n      }\n    },\n    inputs: {\n      template: \"template\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container mx-auto p-6\", 4, \"ngIf\"], [1, \"container\", \"mx-auto\", \"p-6\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-6\"], [1, \"text-2xl\", \"font-bold\"], [1, \"mt-2\", \"text-gray-600\"], [1, \"mr-4\"], [\"routerLink\", \"/admin/templates\", 1, \"btn\", \"btn-outline-primary\"], [1, \"mt-8\", \"space-y-6\"], [\"class\", \"card shadow-lg\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-8\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"no-footer\"], [\"addSectionModal\", \"\"], [\"modalHeader\", \"\"], [\"modalBody\", \"\"], [\"addFieldModal\", \"\"], [1, \"card\", \"shadow-lg\"], [1, \"card-header\", \"flex\", \"justify-between\", \"items-center\", \"bg-gray-100\"], [1, \"text-xl\", \"font-semibold\"], [1, \"text-sm\", \"text-gray-500\"], [1, \"flex\", \"gap-2\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"card-body\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-4\"], [1, \"font-medium\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"space-y-4\"], [\"class\", \"field-item border rounded p-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"field-item\", \"border\", \"rounded\", \"p-4\"], [1, \"flex\", \"justify-between\", \"items-center\"], [1, \"text-sm\", \"text-gray-500\", \"ml-2\"], [\"class\", \"badge bg-orange-100 text-orange-600 ml-2\", 4, \"ngIf\"], [1, \"btn\", \"btn-xs\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-xs\", \"btn-danger\", 3, \"click\"], [1, \"badge\", \"bg-orange-100\", \"text-orange-600\", \"ml-2\"], [1, \"!font-medium\"], [\"ngNativeValidate\", \"\", 1, \"text-sm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-5\"], [\"for\", \"sectionTitle\"], [\"id\", \"sectionTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"class\", \"text-red-500\", 4, \"ngIf\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"form\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"table\"], [1, \"mt-8\", \"flex\", \"items-center\", \"justify-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"ltr:ml-4\", \"rtl:ml-4\"], [1, \"text-red-500\"], [4, \"ngIf\"], [\"for\", \"fieldTitle\"], [\"id\", \"fieldTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"for\", \"fieldType\"], [\"id\", \"fieldType\", \"formControlName\", \"type\", 1, \"form-select\"], [\"value\", \"Text\"], [\"value\", \"Number\"], [\"value\", \"Date\"], [\"value\", \"Boolean\"], [\"for\", \"isRequired\"], [\"id\", \"isRequired\", \"type\", \"checkbox\", \"formControlName\", \"isRequired\"]],\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TemplateDetailsComponent_div_0_Template, 29, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.template);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.ModalComponent, i1.FormGroupDirective, i1.FormControlName, i5.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","Swal","i0","TemplateDetailsComponent","constructor","fb","templateService","id","title","uniqeCode","sections","initSectionForm","initFieldForm","ngOnInit","console","log","template","sectionParams","group","required","minLength","maxLength","type","fieldParams","isRequired","editSection","templateId","section","selectedTemplateId","addSectionModal","open","setValue","saveSection","invalid","showMessage","value","addSectionDTO","mapSectionType","updateSection","toString","subscribe","templateList","find","t","existingSection","s","Object","assign","close","error","handleErrorResponse","addSection","newSection","push","sectionTypeMap","JSON","stringify","message","msg","fire","icon","toast","position","showConfirmButton","timer","customClass","container","deleteSection","sectionId","filter","loadSections","getTemplateById","existingTemplate","getTemplateIdBySectionId","undefined","editField","field","selectedSectionId","addFieldModal","saveField","addFieldDTO","mapFieldType","updateField","updatedField","fields","index","findIndex","f","slice","addField","newField","fieldTypeMap","deleteField","fieldId","loadFields","getSectionFields","toggleSections","expanded","toggleFields","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'angular-custom-modal';\nimport Swal from 'sweetalert2';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Template } from 'src/app/qrtemplategenerator/Models/Template';\nimport { Section } from 'src/app/qrtemplategenerator/Models/Section';\nimport { Field } from 'src/app/qrtemplategenerator/Models/Field';\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html'\n})\nexport class TemplateDetailsComponent {\n  @Input() template: Template = {\n    id: 0,\n    title: '',\n    uniqeCode: '',\n    sections: []\n  };\n  @ViewChild('addSectionModal') addSectionModal!: ModalComponent;\n  @ViewChild('addFieldModal') addFieldModal!: ModalComponent;\n\n  sectionParams!: FormGroup;\n  fieldParams!: FormGroup;\n  selectedSection?: Section;\n\n\n  \n  selectedTemplateId: number | null = null;\n  selectedSectionId: number | null = null;\n  templateList: Template[] = [];\n\n\n  \n\n  constructor(private fb: FormBuilder, private templateService: TemplateService) {\n    this.initSectionForm();\n    this.initFieldForm();\n  }\n\n  ngOnInit(): void {\n    // Any additional logic when the template details component is initialized\n    console.log(this.template);  // Log to ensure template data is correctly passed\n  }\n\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n    });\n  }\n\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false],\n    });\n  }\n\n  // Section methods\n  editSection(templateId: number, section: Section | null = null) {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.setValue({\n        id: section.id,\n        title: section.title,\n        type: section.type,\n      });\n    }\n  }\n\n  saveSection() {\n    if (this.sectionParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n  \n    const section: Section = this.sectionParams.value;\n    const templateId = this.selectedTemplateId;\n  \n    \n  \n    if (templateId !== null) {\n      const addSectionDTO = {\n        title: section.title,\n        type: this.mapSectionType(section.type) \n      };\n  \n   \n  \n      if (section.id) {\n       \n        this.templateService.updateSection(templateId.toString(), section.id.toString(), addSectionDTO)\n          .subscribe(\n            () => {\n              const template = this.templateList.find(t => t.id === templateId);\n              if (template && template.sections) {\n                const existingSection = template.sections.find(s => s.id === section.id);\n                if (existingSection) {\n                  Object.assign(existingSection, section);\n                }\n              }\n              this.showMessage('Section has been updated successfully.');\n              this.addSectionModal.close();\n            },\n            (error) => this.handleErrorResponse(error)\n          );\n      } else {\n       \n        this.templateService.addSection(templateId.toString(), addSectionDTO)\n          .subscribe(\n            (newSection) => {\n              const template = this.templateList.find(t => t.id === templateId);\n              if (template) {\n                if (!template.sections) {\n                  template.sections = [];\n                }\n                template.sections.push(newSection);\n              }\n              this.showMessage('Section has been added successfully.');\n              this.addSectionModal.close();\n            },\n            (error) => this.handleErrorResponse(error)\n          );\n      }\n    }\n  }\n  \n \n  private mapSectionType(type: any): number {\n    const sectionTypeMap: { [key: string]: number } = {\n      'Form': 0,\n      'Table': 1,\n    };\n    return sectionTypeMap[type] ?? 0; \n  }\n  private handleErrorResponse(error: any) {\n    console.error('Error response:', error);\n    console.error('Error details:', JSON.stringify(error.error));\n    this.showMessage(error.error?.message || 'An unknown error occurred!', 'error');\n  }\n\n\n  showMessage(msg: string, type: 'success' | 'error' = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: { container: 'toast' },\n    });\n  }\n    deleteSection(templateId: number, sectionId: number) {\n      this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        if (template && template.sections) {\n          template.sections = template.sections.filter(s => s.id !== sectionId);\n        }\n        this.showMessage('Section has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    }\n    loadSections(templateId: number) {\n      this.templateService.getTemplateById(templateId.toString()).subscribe((template) => {\n        const existingTemplate = this.templateList.find(t => t.id === templateId);\n        if (existingTemplate) {\n          existingTemplate.sections = template.sections;\n        }\n      });\n    }\n    getTemplateIdBySectionId(sectionId: number): number | undefined {\n      for (const template of this.templateList) {\n        if (template.sections) { \n          for (const section of template.sections) {\n            if (section.id === sectionId) {\n              return template.id;\n            }\n          }\n        }\n      }\n      return undefined;\n    }\n  \n\n  // Field methods\n  editField(section: Section, field: Field | null = null) {\n    this.selectedSectionId = section.id;\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    this.selectedTemplateId = templateId !== undefined ? templateId : null; \n    this.addFieldModal.open();  \n    this.initFieldForm();  \n    if (field) {\n      this.fieldParams.setValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired,\n      });\n    }\n  }\n\n  saveField() {\n   \n    \n    if (this.fieldParams.invalid) {\n      this.showMessage('Please fill all required fields.', 'error');\n      return;\n    }\n  \n    const field: Field = this.fieldParams.value;\n    const sectionId = this.selectedSectionId;\n    const templateId = this.selectedTemplateId;\n  \n  \n  \n    if (templateId != null && sectionId != null) {\n      const addFieldDTO = {\n        title: field.title,\n        type: this.mapFieldType(field.type), // Convert type correctly\n        isRequired: field.isRequired,\n      };\n  \n    \n  \n      if (field.id != null && field.id !== 0) {\n       \n       // In saveField() update case\nthis.templateService.updateField(templateId.toString(), sectionId.toString(), field.id.toString(), addFieldDTO)\n.subscribe(\n  (updatedField) => {\n    // Find and update the local field\n    const template = this.templateList.find(t => t.id === templateId);\n    const section = template?.sections?.find(s => s.id === sectionId);\n    \n    if (section?.fields) {\n      const index = section.fields.findIndex(f => f.id === updatedField.id);\n      if (index > -1) {\n        section.fields = [\n          ...section.fields.slice(0, index),\n          updatedField,\n          ...section.fields.slice(index + 1)\n        ];\n      }\n    }\n    \n    this.showMessage('Field updated successfully');\n    this.addFieldModal.close();\n  },\n  (error) => this.handleErrorResponse(error)\n);\n      } else {\n      \n     // In saveField() add case\nthis.templateService.addField(templateId.toString(), sectionId.toString(), addFieldDTO)\n.subscribe(\n  (newField) => {\n    // Find and update the local data\n    const template = this.templateList.find(t => t.id === templateId);\n    const section = template?.sections?.find(s => s.id === sectionId);\n    \n    if (section) {\n      if (!section.fields) section.fields = [];\n      section.fields = [...section.fields, newField]; // Immutable update\n    }\n    \n    this.showMessage('Field added successfully');\n    this.addFieldModal.close();\n  },\n  (error) => this.handleErrorResponse(error)\n);\n      }\n    } else {\n      this.showMessage('Template ID or Section ID is missing.', 'error');\n    }\n  }\n  \n \n  private mapFieldType(type: any): number {\n    const fieldTypeMap: { [key: string]: number } = {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3,\n    };\n    return fieldTypeMap[type]; \n  }\n  deleteField(section: Section, fieldId: number) {\n    const templateId = this.getTemplateIdBySectionId(section.id); \n    \n   \n  \n    if (templateId !== undefined) {  \n      this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe(() => {\n        const template = this.templateList.find(t => t.id === templateId);\n        const existingSection = template?.sections?.find(s => s.id === section.id);\n        if (existingSection && existingSection.fields) {\n          existingSection.fields = existingSection.fields.filter(f => f.id !== fieldId);\n        }\n        this.showMessage('Field has been deleted successfully.');\n      }, error => {\n        this.showMessage(error, 'error');\n      });\n    } else {\n      this.showMessage('Failed to delete field: Template ID is missing.', 'error');\n    }\n  }\n\n\n  loadFields(section: Section) {\n    const templateId = this.selectedTemplateId;\n    if (templateId !== null) {\n      this.templateService.getSectionFields(templateId.toString(), section.id.toString()).subscribe((fields) => {\n        section.fields = fields;\n      });\n    }\n  }\n\n  toggleSections(template: any) {\n    if (!template.sections) {\n      this.loadSections(template.id);\n    }\n    template.expanded = !template.expanded;\n  }\n  \n  toggleFields(section: any) {\n    if (!section.fields) {\n      this.loadFields(section);\n    }\n    section.expanded = !section.expanded;\n  }\n}","<div class=\"container mx-auto p-6\" *ngIf=\"template\">\n\n    <!-- Template Header -->\n    <div class=\"flex items-center justify-between mb-6\">\n      <div>\n        <h2 class=\"text-2xl font-bold\">{{ template.title }}</h2>\n        <div class=\"mt-2 text-gray-600\">\n          <span class=\"mr-4\">ID: {{ template.id }}</span>\n          <span>Unique Code: {{ template.uniqeCode }}</span>\n        </div>\n      </div>\n      <button routerLink=\"/admin/templates\" class=\"btn btn-outline-primary\">\n        Back to List\n      </button>\n    </div>\n  \n    <!-- Sections -->\n    <div class=\"mt-8 space-y-6\">\n      <div *ngFor=\"let section of template.sections\" class=\"card shadow-lg\">\n        <div class=\"card-header flex justify-between items-center bg-gray-100\">\n          <h3 class=\"text-xl font-semibold\">\n            {{ section.title }}\n            <span class=\"text-sm text-gray-500\">({{ section.type }})</span>\n          </h3>\n          <div class=\"flex gap-2\">\n            <button (click)=\"editSection(template.id, section)\" class=\"btn btn-sm btn-primary\">\n              Edit\n            </button>\n            <button (click)=\"deleteSection(template.id, section.id)\" class=\"btn btn-sm btn-danger\">\n              Delete\n            </button>\n          </div>\n        </div>\n  \n        <!-- Fields -->\n        <div class=\"card-body\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h4 class=\"font-medium\">Fields</h4>\n            <button (click)=\"editField(section)\" class=\"btn btn-sm btn-success\">\n              Add Field\n            </button>\n          </div>\n  \n          <div class=\"space-y-4\">\n            <div *ngFor=\"let field of section.fields\" class=\"field-item border rounded p-4\">\n              <div class=\"flex justify-between items-center\">\n                <div>\n                  <span class=\"font-medium\">{{ field.title }}</span>\n                  <span class=\"text-sm text-gray-500 ml-2\">({{ field.type }})</span>\n                  <span *ngIf=\"field.isRequired\" class=\"badge bg-orange-100 text-orange-600 ml-2\">\n                    Required\n                  </span>\n                </div>\n                <div class=\"flex gap-2\">\n                  <button (click)=\"editField(section, field)\" class=\"btn btn-xs btn-primary\">\n                    Edit\n                  </button>\n                  <button (click)=\"deleteField(section, field.id)\" class=\"btn btn-xs btn-danger\">\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Add Section Button -->\n    <div class=\"mt-8\">\n      <button (click)=\"editSection(template.id)\" class=\"btn btn-primary\">\n        Add New Section\n      </button>\n    </div>\n  \n    <!-- Include your existing modals here -->\n    <modal #addSectionModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ sectionParams.controls['id'].value ? 'Edit Section' : 'Add Section' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"sectionParams\" class=\"text-sm\" (ngSubmit)=\"saveSection()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"sectionTitle\">Title</label>\n                    <input id=\"sectionTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label>Type</label>\n                    <div>\n                        <label>\n                            <input type=\"radio\" formControlName=\"type\" value=\"form\" /> Form\n                        </label>\n                        <label>\n                            <input type=\"radio\" formControlName=\"type\" value=\"table\" /> Table\n                        </label>\n                    </div>\n                    <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                    </div>\n                </div>\n                <div class=\"mt-8 flex items-center justify-end\">\n                    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addSectionModal.close()\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n                </div>\n            </form>\n        </ng-template>\n    </modal>\n    <modal #addFieldModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ fieldParams.controls['id'].value ? 'Edit Field' : 'Add Field' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"fieldParams\" class=\"text-sm\" (ngSubmit)=\"saveField()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"fieldTitle\">Title</label>\n                    <input id=\"fieldTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"fieldParams.controls['title'].invalid && fieldParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['required']\">Title is required.</div>\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['minlength']\">Title must be at least 3 characters long.</div>\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['maxlength']\">Title cannot be more than 100 characters long.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label for=\"fieldType\">Type</label>\n                    \n          <select id=\"fieldType\" class=\"form-select\" formControlName=\"type\">\n            <option value=\"Text\">Text</option>\n            <option value=\"Number\">Number</option>\n            <option value=\"Date\">Date</option>\n            <option value=\"Boolean\">Boolean</option>\n          </select>\n          <div *ngIf=\"fieldParams.controls['type'].invalid && fieldParams.controls['type'].touched\" class=\"text-red-500\">\n            <div *ngIf=\"fieldParams.controls['type'].errors?.['required']\">Type is required.</div>\n          </div>\n        </div>\n        <div class=\"mb-5\">\n          <label for=\"isRequired\">Required</label>\n          <input id=\"isRequired\" type=\"checkbox\" formControlName=\"isRequired\" />\n        </div>\n        <div class=\"mt-8 flex items-center justify-end\">\n          <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFieldModal.close()\">Cancel</button>\n          <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n        </div>\n      </form>\n    </ng-template>\n  </modal>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}