{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/form.service\";\nimport * as i2 from \"../../services/record.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/template-service\";\nimport * as i5 from \"../../services/list-state.service\";\nimport * as i6 from \"@angular/common\";\nfunction RecordListComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 13)(1, \"td\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"div\", 15)(5, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function RecordListComponent_tr_9_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const record_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateRecord(record_r2.recordId));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(6, \"svg\", 17);\n    i0.ɵɵelement(7, \"path\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(8, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function RecordListComponent_tr_9_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const record_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.previewRecord(record_r2.recordId));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(9, \"svg\", 17);\n    i0.ɵɵelement(10, \"path\", 20)(11, \"path\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(12, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function RecordListComponent_tr_9_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const record_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteRecord(record_r2.recordId));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 17);\n    i0.ɵɵelement(14, \"path\", 23)(15, \"line\", 24);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const record_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r2.templateTitle);\n  }\n}\nfunction RecordListComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 26)(2, \"div\", 27)(3, \"h2\", 28);\n    i0.ɵɵtext(4, \"Delete Record\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 29)(6, \"p\", 30);\n    i0.ɵɵtext(7, \" Are you sure you want to delete this record? This action cannot be undone. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 31)(9, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function RecordListComponent_div_22_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.closeModal());\n    });\n    i0.ɵɵtext(10, \" Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function RecordListComponent_div_22_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.confirmDelete());\n    });\n    i0.ɵɵtext(12, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class RecordListComponent {\n  constructor(formService, recordService, router, templateService, listStateService) {\n    this.formService = formService;\n    this.recordService = recordService;\n    this.router = router;\n    this.templateService = templateService;\n    this.listStateService = listStateService;\n    this.items = [];\n    this.paginatedItems = [];\n    this.cols = [{\n      prop: 'recordId',\n      name: 'Record ID'\n    }, {\n      prop: 'templateTitle',\n      name: 'Template'\n    }, {\n      prop: 'actions',\n      name: 'Actions'\n    }];\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.totalPages = 1;\n    this.isModalOpen = false; // Controls modal visibility\n    this.recordIdToDelete = null;\n  }\n  ngOnInit() {\n    const savedState = this.listStateService.getState();\n    this.currentPage = savedState.currentPage;\n    this.itemsPerPage = savedState.itemsPerPage;\n    this.loadRecords();\n  }\n  ngOnDestroy() {\n    // Save state when leaving the component\n    this.listStateService.saveState({\n      currentPage: this.currentPage,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  loadRecords() {\n    this.recordService.getRecords().subscribe({\n      next: records => {\n        this.items = records;\n        this.totalPages = Math.ceil(this.items.length / this.itemsPerPage);\n        this.updatePaginatedItems();\n      },\n      error: error => {\n        console.error('Failed to load records', error);\n      }\n    });\n  }\n  getDisplayedRange() {\n    const start = (this.currentPage - 1) * this.itemsPerPage + 1;\n    const end = Math.min(this.currentPage * this.itemsPerPage, this.items.length);\n    return `Showing ${start} to ${end} of ${this.items.length} entries`;\n  }\n  updatePaginatedItems() {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    this.paginatedItems = this.items.slice(startIndex, endIndex);\n  }\n  goToPage(page) {\n    if (page < 1 || page > this.totalPages) return;\n    this.currentPage = page;\n    this.updatePaginatedItems();\n    // Save state when changing page\n    this.listStateService.saveState({\n      currentPage: this.currentPage,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  resetListState() {\n    this.listStateService.clearState();\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.updatePaginatedItems();\n  }\n  previewRecord(recordId) {\n    this.formService.navigateToPreview(recordId);\n  }\n  updateRecord(recordId) {\n    this.recordService.getRecordPreview(recordId).subscribe({\n      next: record => {\n        this.templateService.getTemplateById(record.templateId).subscribe({\n          next: template => {\n            // Don't clear all stored data, just set the new data\n            this.formService.setTemplate(template);\n            this.formService.setFormData({\n              sections: record.sections.map(section => ({\n                sectionTitle: section.sectionTitle,\n                isTableSection: section.isTableSection,\n                fields: section.fields,\n                values: section.values,\n                rows: section.rows\n              }))\n            });\n            // Set edit mode\n            this.formService.setEditMode(true, recordId);\n            this.router.navigate(['dynamic-form'], {\n              state: {\n                id: record.templateId,\n                recordId: record.recordId,\n                existingData: record,\n                isEditMode: true,\n                fromList: true // flag to identify source\n              }\n            });\n          },\n\n          error: error => {\n            console.error('Failed to load template', error);\n          }\n        });\n      },\n      error: error => {\n        console.error('Failed to load record', error);\n      }\n    });\n  }\n  deleteRecord(recordId) {\n    this.recordIdToDelete = recordId;\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n    this.recordIdToDelete = null; // Reset the record ID\n  }\n  // Confirm deletion\n  confirmDelete() {\n    if (this.recordIdToDelete !== null) {\n      this.recordService.deleteRecord(this.recordIdToDelete).subscribe({\n        next: () => {\n          this.items = this.items.filter(item => item.recordId !== this.recordIdToDelete);\n          this.totalPages = Math.ceil(this.items.length / this.itemsPerPage);\n          this.updatePaginatedItems();\n          this.closeModal();\n        },\n        error: error => {\n          console.error('Failed to delete record', error);\n          this.closeModal();\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RecordListComponent_Factory(t) {\n    return new (t || RecordListComponent)(i0.ɵɵdirectiveInject(i1.FormService), i0.ɵɵdirectiveInject(i2.RecordService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.TemplateService), i0.ɵɵdirectiveInject(i5.ListStateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecordListComponent,\n    selectors: [[\"app-record-list\"]],\n    decls: 23,\n    vars: 7,\n    consts: [[1, \"panel\", \"border-[#e0e6ed]\", \"px-0\", \"pb-0\", \"dark:border-[#1b2e4b]\"], [1, \"w-full\"], [1, \"text-left\"], [1, \"text-center\"], [\"class\", \"whitespace-nowrap bh-table-hover\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"justify-between\", \"px-5\", \"py-3\"], [1, \"text-sm\", \"text-gray-600\", \"dark:text-gray-400\"], [1, \"flex\", \"items-center\", \"gap-2\"], [1, \"p-2\", \"hover:bg-gray-100\", \"dark:hover:bg-[#1b2e4b]\", \"rounded\", 3, \"disabled\", \"click\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"w-4.5\", \"h-4.5\", \"rtl:rotate-180\"], [\"d\", \"M15 5L9 12L15 19\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"d\", \"M9 5L15 12L9 19\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"class\", \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\", 4, \"ngIf\"], [1, \"whitespace-nowrap\", \"bh-table-hover\"], [1, \"font-semibold\"], [1, \"flex\", \"items-center\", \"justify-center\", \"gap-4\"], [1, \"hover:text-info\", 3, \"click\"], [\"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\"], [1, \"hover:text-primary\", 3, \"click\"], [\"opacity\", \"0.5\", \"d\", \"M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\"], [\"d\", \"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\"], [\"type\", \"button\", 1, \"hover:text-danger\", 3, \"click\"], [\"d\", \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"x1\", \"3\", \"y1\", \"6\", \"x2\", \"21\", \"y2\", \"6\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.5\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [1, \"fixed\", \"inset-0\", \"bg-black\", \"bg-opacity-50\", \"flex\", \"items-center\", \"justify-center\", \"z-50\"], [1, \"bg-white\", \"dark:bg-[#1b2e4b]\", \"rounded-lg\", \"shadow-lg\", \"w-full\", \"max-w-md\", \"p-6\"], [1, \"border-b\", \"pb-4\", \"border-[#e0e6ed]\", \"dark:border-[#1b2e4b]\"], [1, \"text-lg\", \"font-semibold\", \"text-black\", \"dark:text-white\"], [1, \"my-4\"], [1, \"text-gray-600\", \"dark:text-gray-400\"], [1, \"flex\", \"justify-end\", \"gap-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function RecordListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n        i0.ɵɵtext(5, \"Template Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\", 3);\n        i0.ɵɵtext(7, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"tbody\");\n        i0.ɵɵtemplate(9, RecordListComponent_tr_9_Template, 16, 1, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RecordListComponent_Template_button_click_14_listener() {\n          return ctx.goToPage(ctx.currentPage - 1);\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(15, \"svg\", 9);\n        i0.ɵɵelement(16, \"path\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(17, \"span\", 6);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RecordListComponent_Template_button_click_19_listener() {\n          return ctx.goToPage(ctx.currentPage + 1);\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(20, \"svg\", 9);\n        i0.ɵɵelement(21, \"path\", 11);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(22, RecordListComponent_div_22_Template, 13, 0, \"div\", 12);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.paginatedItems);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.getDisplayedRange(), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage === 1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\" Page \", ctx.currentPage, \" of \", ctx.totalPages, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage === ctx.totalPages);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isModalOpen);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvcmQtbGlzdC5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJnZW5lcmF0b3IvQ29tcG9uZW50cy9yZWNvcmQtbGlzdC9yZWNvcmQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSx3S0FBd0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","RecordListComponent","constructor","formService","recordService","router","templateService","listStateService","prop","name","ngOnInit","savedState","getState","currentPage","itemsPerPage","loadRecords","ngOnDestroy","saveState","getRecords","subscribe","next","records","items","totalPages","Math","ceil","length","updatePaginatedItems","error","console","getDisplayedRange","start","end","min","startIndex","endIndex","paginatedItems","slice","goToPage","page","resetListState","clearState","previewRecord","recordId","navigateToPreview","updateRecord","getRecordPreview","record","getTemplateById","templateId","template","setTemplate","setFormData","sections","map","section","sectionTitle","isTableSection","fields","values","rows","setEditMode","navigate","state","id","existingData","isEditMode","fromList","deleteRecord","recordIdToDelete","isModalOpen","closeModal","confirmDelete","filter","item","selectors","decls","vars","consts","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrgenerator\\Components\\record-list\\record-list.component.html","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrgenerator\\Components\\record-list\\record-list.component.ts"],"sourcesContent":["<div class=\"panel border-[#e0e6ed] px-0 pb-0 dark:border-[#1b2e4b]\">\r\n    <table class=\"w-full\">\r\n        <thead>\r\n            <tr>\r\n                <!-- <th class=\"text-left\">Record ID</th> -->\r\n                <th class=\"text-left\">Template Title</th>\r\n                <th class=\"text-center\">Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let record of paginatedItems\" class=\"whitespace-nowrap bh-table-hover\">\r\n                <!-- <td class=\"font-semibold\">#{{ record.recordId }}</td> -->\r\n                <td class=\"font-semibold\">{{ record.templateTitle }}</td>\r\n                <td>\r\n                    <div class=\"flex items-center justify-center gap-4\">\r\n                        <button (click)=\"updateRecord(record.recordId)\" class=\"hover:text-info\">\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path \r\n                                    d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" \r\n                                    stroke=\"currentColor\" \r\n                                    stroke-width=\"1.5\"\r\n                                ></path>\r\n                            </svg>\r\n                        </button>\r\n                        <button (click)=\"previewRecord(record.recordId)\" class=\"hover:text-primary\">\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    opacity=\"0.5\"\r\n                                    d=\"M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z\"\r\n                                    stroke=\"currentColor\"\r\n                                    stroke-width=\"1.5\"\r\n                                ></path>\r\n                                <path\r\n                                    d=\"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\"\r\n                                    stroke=\"currentColor\"\r\n                                    stroke-width=\"1.5\"\r\n                                ></path>\r\n                            </svg>\r\n                        </button>\r\n                        <button type=\"button\" class=\"hover:text-danger\" (click)=\"deleteRecord(record.recordId)\">\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path \r\n                                    d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" \r\n                                    stroke=\"currentColor\" \r\n                                    stroke-width=\"1.5\"\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                ></path>\r\n                                <line \r\n                                    x1=\"3\" \r\n                                    y1=\"6\" \r\n                                    x2=\"21\" \r\n                                    y2=\"6\" \r\n                                    stroke=\"currentColor\" \r\n                                    stroke-width=\"1.5\"\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                ></line>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <!-- Pagination Controls -->\r\n    <div class=\"flex items-center justify-between px-5 py-3\">\r\n        <div class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {{ getDisplayedRange() }}\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n            <!-- Previous Button -->\r\n            <button \r\n                (click)=\"goToPage(currentPage - 1)\" \r\n                [disabled]=\"currentPage === 1\"\r\n                class=\"p-2 hover:bg-gray-100 dark:hover:bg-[#1b2e4b] rounded\"\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4.5 h-4.5 rtl:rotate-180\">\r\n                    <path d=\"M15 5L9 12L15 19\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n            </button>\r\n\r\n            <!-- Page Number -->\r\n            <span class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Page {{ currentPage }} of {{ totalPages }}\r\n            </span>\r\n\r\n            <!-- Next Button -->\r\n            <button \r\n                (click)=\"goToPage(currentPage + 1)\" \r\n                [disabled]=\"currentPage === totalPages\"\r\n                class=\"p-2 hover:bg-gray-100 dark:hover:bg-[#1b2e4b] rounded\"\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4.5 h-4.5 rtl:rotate-180\">\r\n                    <path d=\"M9 5L15 12L9 19\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<div *ngIf=\"isModalOpen\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n    <div class=\"bg-white dark:bg-[#1b2e4b] rounded-lg shadow-lg w-full max-w-md p-6\">\r\n        <!-- Modal Header -->\r\n        <div class=\"border-b pb-4 border-[#e0e6ed] dark:border-[#1b2e4b]\">\r\n            <h2 class=\"text-lg font-semibold text-black dark:text-white\">Delete Record</h2>\r\n        </div>\r\n\r\n        <!-- Modal Body -->\r\n        <div class=\"my-4\">\r\n            <p class=\"text-gray-600 dark:text-gray-400\">\r\n                Are you sure you want to delete this record? This action cannot be undone.\r\n            </p>\r\n        </div>\r\n\r\n        <!-- Modal Footer -->\r\n        <div class=\"flex justify-end gap-3\">\r\n            <button\r\n                type=\"button\"\r\n                (click)=\"closeModal()\"\r\n                class=\"btn btn-outline-danger\"\r\n            >\r\n                Cancel\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                (click)=\"confirmDelete()\"\r\n                class=\"btn btn-primary\"\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ViewChild } from '@angular/core';\r\nimport { FormService } from '../../services/form.service';\r\nimport { RecordService } from '../../services/record.service';\r\nimport { RecordListItem } from '../../viewmodels/record-list-item';\r\nimport { Router } from '@angular/router';\r\nimport { TemplateService } from '../../services/template-service';\r\nimport { ListStateService } from '../../services/list-state.service';\r\n\r\n@Component({\r\n  selector: 'app-record-list',\r\n  templateUrl: './record-list.component.html',\r\n  styleUrls: ['./record-list.component.css']\r\n})\r\nexport class RecordListComponent {\r\n \r\n  items: RecordListItem[] = [];\r\n  paginatedItems: RecordListItem[] = [];\r\n  cols = [\r\n    { prop: 'recordId', name: 'Record ID' },  \r\n    { prop: 'templateTitle', name: 'Template' },\r\n    { prop: 'actions', name: 'Actions' }\r\n  ];\r\n  currentPage: number = 1;\r\n  itemsPerPage: number = 10;\r\n  totalPages: number = 1;\r\n  isModalOpen: boolean = false; // Controls modal visibility\r\n  recordIdToDelete: number | null = null; \r\n\r\n  constructor(\r\n    private formService: FormService,\r\n    private recordService: RecordService,\r\n    private router: Router,\r\n    private templateService: TemplateService,\r\n    private listStateService: ListStateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const savedState = this.listStateService.getState();\r\n    this.currentPage = savedState.currentPage;\r\n    this.itemsPerPage = savedState.itemsPerPage;\r\n    this.loadRecords();\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Save state when leaving the component\r\n    this.listStateService.saveState({\r\n      currentPage: this.currentPage,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n  loadRecords() {\r\n\r\n    this.recordService.getRecords().subscribe({\r\n      next: (records) => {\r\n        this.items = records;\r\n        this.totalPages = Math.ceil(this.items.length / this.itemsPerPage);\r\n        this.updatePaginatedItems();\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load records', error);\r\n      }\r\n    });\r\n  }\r\n  getDisplayedRange(): string {\r\n    const start = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n    const end = Math.min(this.currentPage * this.itemsPerPage, this.items.length);\r\n    return `Showing ${start} to ${end} of ${this.items.length} entries`;\r\n  }\r\n  updatePaginatedItems() {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    this.paginatedItems = this.items.slice(startIndex, endIndex);\r\n  }\r\n\r\n  goToPage(page: number) {\r\n    if (page < 1 || page > this.totalPages) return;\r\n    this.currentPage = page;\r\n    this.updatePaginatedItems();\r\n    // Save state when changing page\r\n    this.listStateService.saveState({\r\n      currentPage: this.currentPage,\r\n      itemsPerPage: this.itemsPerPage\r\n    });\r\n  }\r\n\r\n  resetListState() {\r\n    this.listStateService.clearState();\r\n    this.currentPage = 1;\r\n    this.itemsPerPage = 10;\r\n    this.updatePaginatedItems();\r\n  }\r\n  previewRecord( recordId: number) {\r\n    \r\n    this.formService.navigateToPreview( recordId);\r\n  }\r\n\r\n  updateRecord(recordId: number) {\r\n    this.recordService.getRecordPreview(recordId).subscribe({\r\n      next: (record) => {\r\n        this.templateService.getTemplateById(record.templateId).subscribe({\r\n          next: (template) => {\r\n            // Don't clear all stored data, just set the new data\r\n            this.formService.setTemplate(template);\r\n            this.formService.setFormData({\r\n              sections: record.sections.map(section => ({\r\n                sectionTitle: section.sectionTitle,\r\n                isTableSection: section.isTableSection,\r\n                fields: section.fields,\r\n                values: section.values,\r\n                rows: section.rows\r\n              }))\r\n            });\r\n            \r\n            // Set edit mode\r\n            this.formService.setEditMode(true, recordId);\r\n            \r\n            this.router.navigate(['dynamic-form'], {\r\n              state: {\r\n                id: record.templateId,\r\n                recordId: record.recordId,\r\n                existingData: record,\r\n                isEditMode: true,\r\n                fromList: true  // flag to identify source\r\n              }\r\n            });\r\n          },\r\n          error: (error) => {\r\n            console.error('Failed to load template', error);\r\n          }\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load record', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteRecord(recordId: number) {\r\n    this.recordIdToDelete = recordId;\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n\r\n  closeModal() {\r\n    this.isModalOpen = false;\r\n    this.recordIdToDelete = null; // Reset the record ID\r\n  }\r\n\r\n  // Confirm deletion\r\n  confirmDelete() {\r\n    if (this.recordIdToDelete !== null) {\r\n      this.recordService.deleteRecord(this.recordIdToDelete).subscribe({\r\n        next: () => {\r\n          this.items = this.items.filter(item => item.recordId !== this.recordIdToDelete);\r\n          this.totalPages = Math.ceil(this.items.length / this.itemsPerPage);\r\n          this.updatePaginatedItems();\r\n          this.closeModal();\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to delete record', error);\r\n          this.closeModal(); \r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}