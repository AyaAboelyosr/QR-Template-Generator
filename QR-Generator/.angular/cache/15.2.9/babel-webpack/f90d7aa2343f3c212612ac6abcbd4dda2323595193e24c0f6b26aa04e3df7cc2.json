{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TemplateService } from '../../services/template.service';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-custom-modal\";\nconst _c0 = [\"addFieldModal\"];\nfunction TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Field Details...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"h4\", 18);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_Template_h4_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const field_r21 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r23.toggleField(field_r21));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const field_r21 = restoredCtx.$implicit;\n      const section_r18 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r25.editField(section_r18, field_r21));\n    });\n    i0.ɵɵtext(9, \"Edit Field\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const field_r21 = restoredCtx.$implicit;\n      const section_r18 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r27.deleteField(section_r18, field_r21.id));\n    });\n    i0.ɵɵtext(11, \"Delete Field\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_div_12_Template, 3, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r21 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(field_r21.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Type: \", field_r21.type, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Required: \", field_r21.isRequired ? \"Yes\" : \"No\", \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", field_r21.expanded);\n  }\n}\nfunction TemplateItemComponent_div_0_div_11_div_1_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TemplateItemComponent_div_0_div_11_div_1_div_10_div_1_Template, 13, 4, \"div\", 21);\n    i0.ɵɵelementStart(2, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_div_10_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const section_r18 = i0.ɵɵnextContext().$implicit;\n      const ctx_r29 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r29.addField(section_r18.id));\n    });\n    i0.ɵɵtext(3, \"Add Field\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const section_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r18.fields);\n  }\n}\nfunction TemplateItemComponent_div_0_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"h3\", 18);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_Template_h3_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const section_r18 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r33.toggleSection(section_r18));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const section_r18 = restoredCtx.$implicit;\n      const ctx_r35 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r35.editSection(ctx_r35.templateData.id, section_r18));\n    });\n    i0.ɵɵtext(7, \"Edit Section\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_div_1_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const section_r18 = restoredCtx.$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r36.deleteSection(ctx_r36.templateData.id, section_r18.id));\n    });\n    i0.ɵɵtext(9, \"Delete Section\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, TemplateItemComponent_div_0_div_11_div_1_div_10_Template, 4, 1, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r18 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(section_r18.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Type: \", section_r18.type, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", section_r18.expanded);\n  }\n}\nfunction TemplateItemComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TemplateItemComponent_div_0_div_11_div_1_Template, 11, 3, \"div\", 14);\n    i0.ɵɵelementStart(2, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_div_0_div_11_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.addSection());\n    });\n    i0.ɵɵtext(3, \"Add Section\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r16.templateData.sections);\n  }\n}\nfunction TemplateItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7);\n    i0.ɵɵelementContainerStart(2);\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelement(4, \"div\", 9);\n    i0.ɵɵelementStart(5, \"div\", 10)(6, \"div\", 11)(7, \"div\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 13);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, TemplateItemComponent_div_0_div_11_Template, 4, 1, \"div\", 0);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r0.templateData.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.templateData.uniqeCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.templateData.expanded);\n  }\n}\nfunction TemplateItemComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.params.controls[\"id\"].value ? \"Edit Template\" : \"Add Template\");\n  }\n}\nfunction TemplateItemComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 25);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateItemComponent_ng_template_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.saveTemplate());\n    });\n    i0.ɵɵelementStart(1, \"div\", 26)(2, \"label\", 27);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 26)(6, \"label\", 29);\n    i0.ɵɵtext(7, \"Unique Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 31)(10, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_template_5_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r40);\n      i0.ɵɵnextContext();\n      const _r1 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(_r1.close());\n    });\n    i0.ɵɵtext(11, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 33);\n    i0.ɵɵtext(13, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.params);\n  }\n}\nfunction TemplateItemComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.sectionParams.controls[\"id\"].value ? \"Edit Section\" : \"Add Section\");\n  }\n}\nfunction TemplateItemComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 25);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateItemComponent_ng_template_11_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.saveSection());\n    });\n    i0.ɵɵelementStart(1, \"div\", 26)(2, \"label\", 34);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 26)(6, \"label\");\n    i0.ɵɵtext(7, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n    i0.ɵɵelement(10, \"input\", 36);\n    i0.ɵɵtext(11, \" Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\");\n    i0.ɵɵelement(13, \"input\", 37);\n    i0.ɵɵtext(14, \" Table \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 31)(16, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_template_11_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r43);\n      i0.ɵɵnextContext();\n      const _r6 = i0.ɵɵreference(8);\n      return i0.ɵɵresetView(_r6.close());\n    });\n    i0.ɵɵtext(17, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 33);\n    i0.ɵɵtext(19, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r10.sectionParams);\n  }\n}\nfunction TemplateItemComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.fieldParams.controls[\"id\"].value ? \"Edit Field\" : \"Add Field\");\n  }\n}\nfunction TemplateItemComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 25);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateItemComponent_ng_template_17_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.saveField());\n    });\n    i0.ɵɵelementStart(1, \"div\", 26)(2, \"label\", 38);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 26)(6, \"label\", 40);\n    i0.ɵɵtext(7, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 41)(9, \"option\", 42);\n    i0.ɵɵtext(10, \"Text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 43);\n    i0.ɵɵtext(12, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 44);\n    i0.ɵɵtext(14, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"option\", 45);\n    i0.ɵɵtext(16, \"Boolean\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 26)(18, \"label\", 46);\n    i0.ɵɵtext(19, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 31)(22, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function TemplateItemComponent_ng_template_17_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r46);\n      i0.ɵɵnextContext();\n      const _r11 = i0.ɵɵreference(14);\n      return i0.ɵɵresetView(_r11.close());\n    });\n    i0.ɵɵtext(23, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 33);\n    i0.ɵɵtext(25, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r15.fieldParams);\n  }\n}\nexport class TemplateItemComponent {\n  constructor() {\n    this._TemplateService = inject(TemplateService);\n    this._router = inject(ActivatedRoute);\n    this._fb = inject(FormBuilder);\n    this.currentSectionId = null;\n    this.templateData = {};\n    this.displayType = 'grid';\n  }\n  ngOnInit() {\n    this.templateId = this._router.snapshot.paramMap.get('id');\n    this.getTemplatebyId();\n    this.initFieldForm();\n  }\n  initFieldForm() {\n    this.fieldParams = this._fb.group({\n      id: [null],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['Text', Validators.required],\n      isRequired: [false]\n    });\n  }\n  openAddFieldModal(sectionId) {\n    this.currentSectionId = sectionId;\n    this.fieldParams.reset({\n      type: 'Text',\n      isRequired: false\n    });\n    this.addFieldModal.open();\n  }\n  saveField() {\n    if (this.fieldParams.invalid) return;\n    const fieldData = this.fieldParams.value;\n    if (fieldData.id) {\n      // Edit existing field\n      this._TemplateService.updateField(this.templateId, this.currentSectionId.toString(), fieldData.id.toString(), fieldData).subscribe({\n        next: res => {\n          const section = this.templateData.sections.find(s => s.id === this.currentSectionId);\n          if (section) {\n            const fieldIndex = section.fields.findIndex(f => f.id === fieldData.id);\n            if (fieldIndex !== -1) {\n              section.fields[fieldIndex] = res;\n            }\n          }\n          this.addFieldModal.close();\n        },\n        error: error => {\n          console.error('Error updating field:', error);\n        }\n      });\n    } else {\n      // Add new field\n      this._TemplateService.addField(this.templateId, this.currentSectionId.toString(), fieldData).subscribe({\n        next: res => {\n          const section = this.templateData.sections.find(s => s.id === this.currentSectionId);\n          if (section) {\n            section.fields.push(res);\n          }\n          this.addFieldModal.close();\n        },\n        error: error => {\n          console.error('Error adding field:', error);\n        }\n      });\n    }\n  }\n  getTemplatebyId() {\n    this._TemplateService.getTemplateById(this.templateId).subscribe({\n      next: res => {\n        console.log('Template id', this.templateId);\n        console.log('Result =', res);\n        this.templateData = res;\n      },\n      error: error => {\n        console.error('Error:', error);\n      }\n    });\n  }\n  toggleSection(section) {\n    section.expanded = !section.expanded;\n  }\n  toggleField(field) {\n    field.expanded = !field.expanded;\n  }\n  addSection() {\n    const newSection = {\n      title: '',\n      type: this.mapSectionType('Form'),\n      fields: [],\n      expanded: false\n    };\n    this._TemplateService.addSection(this.templateId, newSection).subscribe({\n      next: res => {\n        this.templateData.sections.push(res);\n      },\n      error: error => {\n        console.error('Error adding section:', error);\n      }\n    });\n  }\n  // The mapSectionType method\n  mapSectionType(type) {\n    const sectionTypeMap = {\n      'Form': 0,\n      'Table': 1\n    };\n    return sectionTypeMap[type] ?? 0; // Default to 0 if the type is not found\n  }\n\n  editSection(section) {\n    // Logic for opening a modal to edit a section (you can implement it with a modal library)\n    // For example, if using the same modal system you had in `ListTemplateComponent`, you can call a modal for editing a section here.\n  }\n  deleteSection(sectionId) {\n    this._TemplateService.deleteSection(this.templateId, sectionId.toString()).subscribe({\n      next: () => {\n        this.templateData.sections = this.templateData.sections.filter(s => s.id !== sectionId);\n      },\n      error: error => {\n        console.error('Error deleting section:', error);\n      }\n    });\n  }\n  // field methods \n  addField(sectionId) {\n    const newField = {\n      title: '',\n      type: 'Text',\n      isRequired: false,\n      expanded: false\n    };\n    // Convert sectionId to string before passing it to the service\n    this._TemplateService.addField(this.templateId, sectionId.toString(), newField).subscribe({\n      next: res => {\n        const section = this.templateData.sections.find(s => s.id === sectionId);\n        if (section) {\n          section.fields.push(res);\n        }\n      },\n      error: error => {\n        console.error('Error adding field:', error);\n      }\n    });\n  }\n  editField(sectionId, field) {\n    this.currentSectionId = sectionId;\n    this.fieldParams.patchValue(field);\n    this.addFieldModal.open();\n  }\n  deleteField(sectionId, fieldId) {\n    // Convert both sectionId and fieldId to strings before passing to the service\n    this._TemplateService.deleteField(this.templateId, sectionId.toString(), fieldId.toString()).subscribe({\n      next: () => {\n        const section = this.templateData.sections.find(s => s.id === sectionId);\n        if (section) {\n          section.fields = section.fields.filter(f => f.id !== fieldId);\n        }\n      },\n      error: error => {\n        console.error('Error deleting field:', error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function TemplateItemComponent_Factory(t) {\n    return new (t || TemplateItemComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateItemComponent,\n    selectors: [[\"app-template-item\"]],\n    viewQuery: function TemplateItemComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addFieldModal = _t.first);\n      }\n    },\n    decls: 19,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"no-footer\"], [\"addTemplateModal\", \"\"], [\"modalHeader\", \"\"], [\"modalBody\", \"\"], [\"addSectionModal\", \"\"], [\"addFieldModal\", \"\"], [1, \"grid\", \"w-full\", \"grid-cols-1\", \"gap-6\", \"sm:grid-cols-2\", \"xl:grid-cols-3\", \"2xl:grid-cols-4\"], [1, \"relative\", \"overflow-hidden\", \"rounded-md\", \"bg-white\", \"text-center\", \"shadow\", \"dark:bg-[#1c232f]\"], [1, \"rounded-t-md\", \"bg-white/40\", \"bg-[url('/assets/images/notification-bg.png')]\", \"bg-cover\", \"bg-center\", \"p-6\", \"pb-0\"], [1, \"relative\", \"-mt-10\", \"px-6\", \"pb-24\"], [1, \"rounded-md\", \"bg-white\", \"px-2\", \"py-4\", \"shadow-md\", \"dark:bg-gray-900\"], [1, \"text-xl\"], [1, \"text-white-dark\"], [\"class\", \"section-item\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-success\", 3, \"click\"], [1, \"section-item\"], [1, \"section-header\"], [3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [\"class\", \"field-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"field-item\"], [1, \"field-header\"], [1, \"!font-medium\"], [\"ngNativeValidate\", \"\", 1, \"text-sm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-5\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"for\", \"uniqeCode\"], [\"id\", \"uniqeCode\", \"type\", \"text\", \"placeholder\", \"Enter Unique Code\", \"formControlName\", \"uniqeCode\", 1, \"form-input\"], [1, \"mt-8\", \"flex\", \"items-center\", \"justify-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"ltr:ml-4\", \"rtl:ml-4\"], [\"for\", \"sectionTitle\"], [\"id\", \"sectionTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"form\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"table\"], [\"for\", \"fieldTitle\"], [\"id\", \"fieldTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"for\", \"fieldType\"], [\"id\", \"fieldType\", \"formControlName\", \"type\", 1, \"form-select\"], [\"value\", \"Text\"], [\"value\", \"Number\"], [\"value\", \"Date\"], [\"value\", \"Boolean\"], [\"for\", \"isRequired\"], [\"id\", \"isRequired\", \"type\", \"checkbox\", \"formControlName\", \"isRequired\"]],\n    template: function TemplateItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TemplateItemComponent_div_0_Template, 12, 3, \"div\", 0);\n        i0.ɵɵelementStart(1, \"modal\", 1, 2);\n        i0.ɵɵtemplate(3, TemplateItemComponent_ng_template_3_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(5, TemplateItemComponent_ng_template_5_Template, 14, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"modal\", 1, 5);\n        i0.ɵɵtemplate(9, TemplateItemComponent_ng_template_9_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(11, TemplateItemComponent_ng_template_11_Template, 20, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"modal\", 1, 6);\n        i0.ɵɵtemplate(15, TemplateItemComponent_ng_template_15_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(17, TemplateItemComponent_ng_template_17_Template, 26, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.displayType === \"grid\");\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i3.ModalComponent, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wbGF0ZS1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJ0ZW1wbGF0ZWdlbmVyYXRvci9jb21wb25lbnRzL3RlbXBsYXRlLWl0ZW0vdGVtcGxhdGUtaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0S0FBNEsiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["inject","FormBuilder","Validators","TemplateService","ActivatedRoute","i0","TemplateItemComponent","constructor","ngOnInit","templateId","_router","snapshot","paramMap","get","getTemplatebyId","initFieldForm","fieldParams","_fb","group","id","title","required","minLength","maxLength","type","isRequired","openAddFieldModal","sectionId","currentSectionId","reset","addFieldModal","open","saveField","invalid","fieldData","value","_TemplateService","updateField","toString","subscribe","next","res","section","templateData","sections","find","s","fieldIndex","fields","findIndex","f","close","error","console","addField","push","getTemplateById","log","toggleSection","expanded","toggleField","field","addSection","newSection","mapSectionType","sectionTypeMap","editSection","deleteSection","filter","newField","editField","patchValue","deleteField","fieldId","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-item\\template-item.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-item\\template-item.component.html"],"sourcesContent":["import { Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'angular-custom-modal';\nimport { TemplateService } from '../../services/template.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-template-item',\n  templateUrl: './template-item.component.html',\n  styleUrls: ['./template-item.component.css']\n})\nexport class TemplateItemComponent implements OnInit {\n  @ViewChild('addFieldModal') addFieldModal!: ModalComponent;\n\n  _TemplateService=inject(TemplateService);\n  _router=inject(ActivatedRoute);\n  _fb = inject(FormBuilder);\n  fieldParams!: FormGroup;\n  currentSectionId: number | null = null;\n  templateData: any = {};\n  displayType: string = 'grid'; \n  templateId!: string;\n  ngOnInit(): void {\n    this.templateId = this._router.snapshot.paramMap.get('id')!; \n    this.getTemplatebyId();\n    this.initFieldForm();\n  }\n\n\n  initFieldForm(): void {\n    this.fieldParams = this._fb.group({\n      id: [null],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['Text', Validators.required],\n      isRequired: [false]\n    });\n  }\n\n  openAddFieldModal(sectionId: number): void {\n    this.currentSectionId = sectionId;\n    this.fieldParams.reset({ type: 'Text', isRequired: false });\n    this.addFieldModal.open();\n  }\n\n  saveField(): void {\n    if (this.fieldParams.invalid) return;\n\n    const fieldData = this.fieldParams.value;\n    if (fieldData.id) {\n      // Edit existing field\n      this._TemplateService.updateField(this.templateId, this.currentSectionId!.toString(), fieldData.id.toString(), fieldData)\n        .subscribe({\n          next: (res) => {\n            const section = this.templateData.sections.find((s: any) => s.id === this.currentSectionId);\n            if (section) {\n              const fieldIndex = section.fields.findIndex((f: any) => f.id === fieldData.id);\n              if (fieldIndex !== -1) {\n                section.fields[fieldIndex] = res;\n              }\n            }\n            this.addFieldModal.close();\n          },\n          error: (error) => {\n            console.error('Error updating field:', error);\n          }\n        });\n    } else {\n      // Add new field\n      this._TemplateService.addField(this.templateId, this.currentSectionId!.toString(), fieldData)\n        .subscribe({\n          next: (res) => {\n            const section = this.templateData.sections.find((s: any) => s.id === this.currentSectionId);\n            if (section) {\n              section.fields.push(res);\n            }\n            this.addFieldModal.close();\n          },\n          error: (error) => {\n            console.error('Error adding field:', error);\n          }\n        });\n    }\n  }\n\n  getTemplatebyId(){\n    this._TemplateService.getTemplateById(this.templateId).subscribe({\n      next: (res) => {\n        console.log( 'Template id',this.templateId);\n        console.log('Result =' ,res);\n        this.templateData = res;\n       \n      },\n      error: (error) => {\n        console.error('Error:', error);\n      }\n\n\n    })\n  }\n  \n  toggleSection(section: any): void {\n    section.expanded = !section.expanded;\n  }\n\n  toggleField(field: any): void {\n    field.expanded = !field.expanded;\n  }\n\n  addSection(): void {\n    const newSection = {\n      title: '',\n      type: this.mapSectionType('Form'), // Default type 'Form'\n      fields: [],\n      expanded: false\n    };\n\n    this._TemplateService.addSection(this.templateId, newSection).subscribe({\n      next: (res) => {\n        this.templateData.sections.push(res);\n      },\n      error: (error) => {\n        console.error('Error adding section:', error);\n      }\n    });\n  }\n  \n  // The mapSectionType method\n  private mapSectionType(type: any): number {\n    const sectionTypeMap: { [key: string]: number } = {\n      'Form': 0,\n      'Table': 1,\n    };\n    return sectionTypeMap[type] ?? 0; // Default to 0 if the type is not found\n  }\n\n  editSection(section: any): void {\n    // Logic for opening a modal to edit a section (you can implement it with a modal library)\n    // For example, if using the same modal system you had in `ListTemplateComponent`, you can call a modal for editing a section here.\n  }\n\n  deleteSection(sectionId: number): void {\n    this._TemplateService.deleteSection(this.templateId, sectionId.toString()).subscribe({\n      next: () => {\n        this.templateData.sections = this.templateData.sections.filter((s: any) => s.id !== sectionId);\n      },\n      error: (error) => {\n        console.error('Error deleting section:', error);\n      }\n    });\n  }\n// field methods \n\naddField(sectionId: number): void {\n  const newField = {\n    title: '',\n    type: 'Text', // Default type 'Text'\n    isRequired: false,\n    expanded: false\n  };\n\n  // Convert sectionId to string before passing it to the service\n  this._TemplateService.addField(this.templateId, sectionId.toString(), newField).subscribe({\n    next: (res) => {\n      const section = this.templateData.sections.find((s: any) => s.id === sectionId);\n      if (section) {\n        section.fields.push(res);\n      }\n    },\n    error: (error) => {\n      console.error('Error adding field:', error);\n    }\n  });\n}\n\neditField(sectionId: number, field: any): void {\n  this.currentSectionId = sectionId;\n  this.fieldParams.patchValue(field);\n  this.addFieldModal.open();\n}\n\ndeleteField(sectionId: number, fieldId: number): void {\n  // Convert both sectionId and fieldId to strings before passing to the service\n  this._TemplateService.deleteField(this.templateId, sectionId.toString(), fieldId.toString()).subscribe({\n    next: () => {\n      const section = this.templateData.sections.find((s: any) => s.id === sectionId);\n      if (section) {\n        section.fields = section.fields.filter((f: any) => f.id !== fieldId);\n      }\n    },\n    error: (error) => {\n      console.error('Error deleting field:', error);\n    }\n  });\n}\n\n\n  \n\n\n\n\n}\n","<!-- <div class=\"template-details-container\">\n    <h2>Template: {{ template.title }}</h2>\n  \n    \n    <div class=\"section-list\">\n      <h3>Sections</h3>\n      <button class=\"btn btn-primary\" (click)=\"editSection(template.id)\">Add Section</button>\n  \n      <div *ngFor=\"let section of template.sections\">\n        <div class=\"section-item\">\n          <h4>{{ section.title }}</h4>\n          <button class=\"btn btn-secondary\" (click)=\"editSection(template.id, section)\">Edit</button>\n          <button class=\"btn btn-danger\" (click)=\"deleteSection(template.id, section.id)\">Delete</button>\n          <button class=\"btn btn-info\" (click)=\"toggleFieldsVisibility(section)\">\n            {{ section.expanded ? 'Hide' : 'Show' }} Fields\n          </button>\n  \n          \n          <div *ngIf=\"section.expanded\">\n            <div *ngFor=\"let field of section.fields\">\n              <div class=\"field-item\">\n                <span>{{ field.title }} ({{ field.type }})</span>\n                <button class=\"btn btn-secondary\" (click)=\"editField(section, field)\">Edit</button>\n                <button class=\"btn btn-danger\" (click)=\"deleteField(section, field.id)\">Delete</button>\n              </div>\n            </div>\n            <button class=\"btn btn-primary\" (click)=\"editField(section)\">Add Field</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n\n    <modal #addSectionModal>\n      <ng-template let-modal>\n        <div class=\"modal-content\">\n          <h4>{{ sectionParams.value.id ? 'Edit' : 'Add' }} Section</h4>\n          <form [formGroup]=\"sectionParams\" (ngSubmit)=\"saveSection()\">\n            <div class=\"form-group\">\n              <label for=\"title\">Section Title</label>\n              <input type=\"text\" formControlName=\"title\" class=\"form-control\" id=\"title\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"type\">Section Type</label>\n              <select formControlName=\"type\" class=\"form-control\" id=\"type\">\n                <option value=\"1\">Form</option> \n                <option value=\"2\">Table</option> \n              </select>\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"sectionParams.invalid\">Save</button>\n          </form>\n        </div>\n      </ng-template>\n    </modal>\n  \n   \n    <modal #addFieldModal>\n      <ng-template let-modal>\n        <div class=\"modal-content\">\n          <h4>{{ fieldParams.value.id ? 'Edit' : 'Add' }} Field</h4>\n          <form [formGroup]=\"fieldParams\" (ngSubmit)=\"saveField()\">\n            <div class=\"form-group\">\n              <label for=\"title\">Field Title</label>\n              <input type=\"text\" formControlName=\"title\" class=\"form-control\" id=\"title\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"type\">Field Type</label>\n              <select formControlName=\"type\" class=\"form-control\" id=\"type\">\n                <option value=\"1\">Text</option> \n                <option value=\"2\">Number</option> \n                <option value=\"3\">Date</option> \n                <option value=\"4\">Boolean</option> \n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"isRequired\">Required</label>\n              <input type=\"checkbox\" formControlName=\"isRequired\" class=\"form-check-input\" id=\"isRequired\" />\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"fieldParams.invalid\">Save</button>\n          </form>\n        </div>\n      </ng-template>\n    </modal>\n  </div>\n   -->\n\n<!-- Template Grid View -->\n<div *ngIf=\"displayType === 'grid'\">\n    <div class=\"grid w-full grid-cols-1 gap-6 sm:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4\">\n        <ng-container >\n            <div class=\"relative overflow-hidden rounded-md bg-white text-center shadow dark:bg-[#1c232f]\">\n                <div class=\"rounded-t-md bg-white/40 bg-[url('/assets/images/notification-bg.png')] bg-cover bg-center p-6 pb-0\">\n                    <!-- Optional: Add an image/placeholder if needed -->\n                </div>\n                <div class=\"relative -mt-10 px-6 pb-24\">\n                    <div class=\"rounded-md bg-white px-2 py-4 shadow-md dark:bg-gray-900\">\n                        <div class=\"text-xl\">{{ templateData.title }}</div>\n                        <div class=\"text-white-dark\">{{ templateData.uniqeCode }}</div>\n                    </div>\n                  \n                    <div *ngIf=\"templateData.expanded\">\n                        <!-- Section List with Toggle -->\n                        <div *ngFor=\"let section of templateData.sections\" class=\"section-item\">\n                            <div class=\"section-header\">\n                                <h3 (click)=\"toggleSection(section)\">{{ section.title }}</h3>\n                                <p>Type: {{ section.type }}</p>\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"editSection(templateData.id, section)\">Edit Section</button>\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteSection(templateData.id, section.id)\">Delete Section</button>\n                            </div>\n                            <!-- Toggle Section Details -->\n                            <div *ngIf=\"section.expanded\">\n                                <!-- Field List inside Section with Toggle -->\n                                <div *ngFor=\"let field of section.fields\" class=\"field-item\">\n                                    <div class=\"field-header\">\n                                        <h4 (click)=\"toggleField(field)\">{{ field.title }}</h4>\n                                        <p>Type: {{ field.type }}</p>\n                                        <p>Required: {{ field.isRequired ? 'Yes' : 'No' }}</p>\n                                        <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"editField(section, field)\">Edit Field</button>\n                                        <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteField(section, field.id)\">Delete Field</button>\n                                    </div>\n                                    <!-- Field Details Toggle -->\n                                    <div *ngIf=\"field.expanded\">\n                                        <!-- Here you can add any additional information you want to show about the field -->\n                                        <p>Field Details...</p>\n                                    </div>\n                                </div>\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-success\" (click)=\"addField(section.id)\">Add Field</button>\n                            </div>\n                        </div>\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-success\" (click)=\"addSection()\">Add Section</button>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>\n\n<!-- Add/Edit Template Modal -->\n<modal #addTemplateModal class=\"no-footer\">\n    <ng-template #modalHeader>\n        <div class=\"!font-medium\">{{ params.controls['id'].value ? 'Edit Template' : 'Add Template' }}</div>\n    </ng-template>\n    <ng-template #modalBody>\n        <form [formGroup]=\"params\" class=\"text-sm\" (ngSubmit)=\"saveTemplate()\" ngNativeValidate>\n            <div class=\"mb-5\">\n                <label for=\"title\">Title</label>\n                <input id=\"title\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n            </div>\n            <div class=\"mb-5\">\n                <label for=\"uniqeCode\">Unique Code</label>\n                <input id=\"uniqeCode\" type=\"text\" placeholder=\"Enter Unique Code\" class=\"form-input\" formControlName=\"uniqeCode\" />\n            </div>\n            <div class=\"mt-8 flex items-center justify-end\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addTemplateModal.close()\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n            </div>\n        </form>\n    </ng-template>\n</modal>\n\n<!-- Add/Edit Section Modal -->\n<modal #addSectionModal class=\"no-footer\">\n    <ng-template #modalHeader>\n        <div class=\"!font-medium\">{{ sectionParams.controls['id'].value ? 'Edit Section' : 'Add Section' }}</div>\n    </ng-template>\n    <ng-template #modalBody>\n        <form [formGroup]=\"sectionParams\" class=\"text-sm\" (ngSubmit)=\"saveSection()\" ngNativeValidate>\n            <div class=\"mb-5\">\n                <label for=\"sectionTitle\">Title</label>\n                <input id=\"sectionTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n            </div>\n            <div class=\"mb-5\">\n                <label>Type</label>\n                <div>\n                    <label>\n                        <input type=\"radio\" formControlName=\"type\" value=\"form\" /> Form\n                    </label>\n                    <label>\n                        <input type=\"radio\" formControlName=\"type\" value=\"table\" /> Table\n                    </label>\n                </div>\n            </div>\n            <div class=\"mt-8 flex items-center justify-end\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addSectionModal.close()\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n            </div>\n        </form>\n    </ng-template>\n</modal>\n\n<!-- Add/Edit Field Modal -->\n<modal #addFieldModal class=\"no-footer\">\n    <ng-template #modalHeader>\n        <div class=\"!font-medium\">{{ fieldParams.controls['id'].value ? 'Edit Field' : 'Add Field' }}</div>\n    </ng-template>\n    <ng-template #modalBody>\n        <form [formGroup]=\"fieldParams\" class=\"text-sm\" (ngSubmit)=\"saveField()\" ngNativeValidate>\n            <div class=\"mb-5\">\n                <label for=\"fieldTitle\">Title</label>\n                <input id=\"fieldTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n            </div>\n            <div class=\"mb-5\">\n                <label for=\"fieldType\">Type</label>\n                <select id=\"fieldType\" class=\"form-select\" formControlName=\"type\">\n                    <option value=\"Text\">Text</option>\n                    <option value=\"Number\">Number</option>\n                    <option value=\"Date\">Date</option>\n                    <option value=\"Boolean\">Boolean</option>\n                </select>\n            </div>\n            <div class=\"mb-5\">\n                <label for=\"isRequired\">Required</label>\n                <input id=\"isRequired\" type=\"checkbox\" formControlName=\"isRequired\" />\n            </div>\n            <div class=\"mt-8 flex items-center justify-end\">\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFieldModal.close()\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n            </div>\n        </form>\n    </ng-template>\n</modal>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}