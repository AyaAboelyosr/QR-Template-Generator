{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/template-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/form.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../record-list/record-list.component\";\nfunction TemplateConsumerComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const template_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", template_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", template_r2.title, \" \");\n  }\n}\nfunction TemplateConsumerComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Please select a form template first\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TemplateConsumerComponent {\n  constructor(templateService, router, formService) {\n    this.templateService = templateService;\n    this.router = router;\n    this.formService = formService;\n    this.templates = [];\n    this.selectedTemplateId = null;\n    this.showError = false;\n  }\n  ngOnInit() {\n    this.templateService.getTemplates().subscribe({\n      next: data => {\n        if (Array.isArray(data)) {\n          this.templates = data;\n          console.log(this.templates);\n        } else {\n          console.error(data.message);\n        }\n      },\n      error: error => {\n        console.error('Failed to fetch templates:', error);\n      }\n    });\n  }\n  onTemplateSelect(event) {\n    const selectElement = event.target;\n    this.selectedTemplateId = +selectElement.value;\n    console.log('Selected Template ID:', this.selectedTemplateId);\n  }\n  onAdd() {\n    this.showError = false;\n    if (this.selectedTemplateId) {\n      const id = this.selectedTemplateId;\n      this.formService.clearStoredData();\n      this.router.navigate(['/dynamic-form'], {\n        state: {\n          id\n        }\n      });\n    } else {\n      this.showError = true;\n    }\n  }\n  static #_ = this.ɵfac = function TemplateConsumerComponent_Factory(t) {\n    return new (t || TemplateConsumerComponent)(i0.ɵɵdirectiveInject(i1.TemplateService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateConsumerComponent,\n    selectors: [[\"app-template-consumer\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"dropdown\"], [\"for\", \"template-select\", 1, \"mb-1.5\", \"block\", \"font-semibold\"], [\"id\", \"template-select\", 1, \"form-select\", \"w-full\", \"rounded-md\", \"border\", \"border-[#e0e6ed]\", \"bg-white\", \"px-4\", \"py-2\", \"text-sm\", \"font-semibold\", \"text-black\", \"!outline-none\", \"focus:border-primary\", \"focus:ring-transparent\", \"dark:border-[#17263c]\", \"dark:bg-[#121e32]\", \"dark:text-white-dark\", \"dark:focus:border-primary\", 3, \"change\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-3\"], [\"class\", \"text-red-500 text-sm block\", 4, \"ngIf\"], [1, \"mt-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"], [1, \"text-red-500\", \"text-sm\", \"block\"]],\n    template: function TemplateConsumerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Select Template\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"select\", 2);\n        i0.ɵɵlistener(\"change\", function TemplateConsumerComponent_Template_select_change_3_listener($event) {\n          return ctx.onTemplateSelect($event);\n        });\n        i0.ɵɵelementStart(4, \"option\", 3);\n        i0.ɵɵtext(5, \"Choose a template\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, TemplateConsumerComponent_option_6_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵtemplate(8, TemplateConsumerComponent_span_8_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function TemplateConsumerComponent_Template_button_click_10_listener() {\n          return ctx.onAdd();\n        });\n        i0.ɵɵtext(11, \"Add Transaction\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"br\")(13, \"app-record-list\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.templates);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i6.RecordListComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wbGF0ZS1jb25zdW1lci5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXJnZW5lcmF0b3IvQ29tcG9uZW50cy90ZW1wbGF0ZS1jb25zdW1lci90ZW1wbGF0ZS1jb25zdW1lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnTEFBZ0wiLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;IAQIA,iCAAiE;IAC/DA,YACF;IAAAA,iBAAS;;;;IAFkCA,sCAAqB;IAC9DA,eACF;IADEA,kDACF;;;;;IAKAA,gCAA2D;IAAAA,mDAAmC;IAAAA,iBAAO;;;ACJzG,OAAM,MAAOC,yBAAyB;EAIpCC,YACUC,eAAgC,EAChCC,MAAc,EACdC,WAAwB;IAFxB,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IANrB,cAAS,GAAqB,EAAE;IAChC,uBAAkB,GAAkB,IAAI;IACxC,cAAS,GAAY,KAAK;EAMvB;EAGHC,QAAQ;IACN,IAAI,CAACH,eAAe,CAACI,YAAY,EAAE,CAACC,SAAS,CAAC;MAC5CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UACvB,IAAI,CAACG,SAAS,GAAGH,IAAI;UACrBI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;SAC5B,MAAM;UACLC,OAAO,CAACE,KAAK,CAACN,IAAI,CAACO,OAAO,CAAC;;MAE/B,CAAC;MACDD,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAEAE,gBAAgB,CAACC,KAAY;IAC3B,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAA2B;IACvD,IAAI,CAACC,kBAAkB,GAAG,CAACF,aAAa,CAACG,KAAK;IAC9CT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACO,kBAAkB,CAAC;EAC/D;EACAE,KAAK;IACH,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,IAAI,CAACH,kBAAkB,EAAE;MAC3B,MAAMI,EAAE,GAAW,IAAI,CAACJ,kBAAkB;MAC1C,IAAI,CAACjB,WAAW,CAACsB,eAAe,EAAE;MAClC,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE;QAAEC,KAAK,EAAG;UAACH;QAAE;MAAC,CAAC,CAAC;KACzD,MAAM;MACL,IAAI,CAACD,SAAS,GAAG,IAAI;;EAE3B;EAAC;qBA1CYxB,yBAAyB;EAAA;EAAA;UAAzBA,yBAAyB;IAAA6B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDXtClC,8BAAsB;QAC4CA,+BAAe;QAAAA,iBAAQ;QACvFA,iCAIC;QADCA;UAAA,OAAUmC,4BAAwB;QAAA,EAAC;QAEnCnC,iCAAmC;QAAAA,iCAAiB;QAAAA,iBAAS;QAC7DA,gFAES;QACXA,iBAAS;QAGTA,8BAAkB;QAChBA,4EAAqG;QACvGA,iBAAM;QAGRA,8BAAkB;QAC4BA;UAAA,OAASmC,WAAO;QAAA,EAAC;QAACnC,gCAAe;QAAAA,iBAAS;QAExFA,sBAAI;;;QAd6BA,eAAY;QAAZA,uCAAY;QAOlCA,eAAe;QAAfA,oCAAe","names":["i0","TemplateConsumerComponent","constructor","templateService","router","formService","ngOnInit","getTemplates","subscribe","next","data","Array","isArray","templates","console","log","error","message","onTemplateSelect","event","selectElement","target","selectedTemplateId","value","onAdd","showError","id","clearStoredData","navigate","state","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrgenerator\\Components\\template-consumer\\template-consumer.component.html","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrgenerator\\Components\\template-consumer\\template-consumer.component.ts"],"sourcesContent":["<div class=\"dropdown\">\r\n  <label for=\"template-select\" class=\"mb-1.5 block font-semibold\">Select Template</label>\r\n  <select\r\n    id=\"template-select\"\r\n    class=\"form-select w-full rounded-md border border-[#e0e6ed] bg-white px-4 py-2 text-sm font-semibold text-black !outline-none focus:border-primary focus:ring-transparent dark:border-[#17263c] dark:bg-[#121e32] dark:text-white-dark dark:focus:border-primary\"\r\n    (change)=\"onTemplateSelect($event)\"\r\n  >\r\n    <option value=\"\" disabled selected>Choose a template</option>\r\n    <option *ngFor=\"let template of templates\" [value]=\"template.id\">\r\n      {{ template.title }}\r\n    </option>\r\n  </select>\r\n  \r\n  <!-- Add spacing container with margin-top -->\r\n  <div class=\"mt-3\">\r\n    <span *ngIf=\"showError\" class=\"text-red-500 text-sm block\">Please select a form template first</span>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mt-4\">  <!-- Added margin-top container -->\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"onAdd()\">Add Transaction</button>\r\n</div>\r\n<br>\r\n<app-record-list></app-record-list>","import { Component,OnInit } from '@angular/core';\r\nimport { TemplateService} from '../../services/template-service';\r\nimport { QRTemplateInfo } from '../../viewmodels/qrtemplate-info';\r\nimport { Router } from '@angular/router';\r\nimport { FormService } from '../../services/form.service';\r\n\r\n@Component({\r\n  selector: 'app-template-consumer',\r\n  templateUrl: './template-consumer.component.html',\r\n  styleUrls: ['./template-consumer.component.css']\r\n})\r\nexport class TemplateConsumerComponent implements OnInit {\r\n  templates: QRTemplateInfo[] = [];\r\n  selectedTemplateId: number | null = null;\r\n  showError: boolean = false;\r\n  constructor(\r\n    private templateService: TemplateService,\r\n    private router: Router,\r\n    private formService: FormService\r\n    \r\n  ) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.templateService.getTemplates().subscribe({\r\n      next: (data) => {\r\n        if (Array.isArray(data)) {\r\n          this.templates = data; \r\n          console.log(this.templates);\r\n        } else {\r\n          console.error(data.message); \r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to fetch templates:', error);\r\n      },\r\n    });\r\n  }\r\n  \r\n  onTemplateSelect(event: Event): void {\r\n    const selectElement = event.target as HTMLSelectElement;\r\n    this.selectedTemplateId = +selectElement.value;\r\n    console.log('Selected Template ID:', this.selectedTemplateId);\r\n  }\r\n  onAdd(): void {\r\n    this.showError = false;\r\n    if (this.selectedTemplateId) {\r\n      const id: Number = this.selectedTemplateId;\r\n      this.formService.clearStoredData();\r\n      this.router.navigate(['/dynamic-form'], { state : {id}});\r\n    } else {\r\n      this.showError = true;\r\n    }\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}