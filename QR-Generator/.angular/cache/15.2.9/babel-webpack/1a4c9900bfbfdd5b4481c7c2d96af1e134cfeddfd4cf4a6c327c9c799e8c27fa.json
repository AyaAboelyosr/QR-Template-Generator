{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./layouts/app-layout\";\nexport class AppComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.redirectUser();\n  }\n  redirectUser() {\n    const isLoggedIn = this.authService.c(); // âœ… Check if user is logged in\n    const role = this.authService.getRole();\n    if (!isLoggedIn) {\n      this.router.navigate(['/auth/login']); // ðŸ”´ Redirect to login if not logged in\n    } else {\n      if (role === 'Admin') {\n        this.router.navigate(['/admin']); // âœ… Admins go to Admin panel\n      } else {\n        this.router.navigate(['/QRCodeGenerator/qrgenerator']); // âœ… Users go to QR page\n      }\n    }\n  }\n  static #_ = this.Éµfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ÉµÉµdirectiveInject(i1.AuthService), i0.ÉµÉµdirectiveInject(i2.Router));\n  };\n  static #_2 = this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelement(0, \"app-layout\");\n        i0.ÉµÉµtext(1, \">\");\n      }\n    },\n    dependencies: [i3.AppLayout],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IACxD,IAAI,CAACC,YAAY,EAAE;EACrB;EAEQA,YAAY;IAClB,MAAMC,UAAU,GAAG,IAAI,CAACH,WAAW,CAACI,CAAC,EAAE,CAAC,CAAC;IACzC,MAAMC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,OAAO,EAAE;IAEvC,IAAI,CAACH,UAAU,EAAE;MACf,IAAI,CAACF,MAAM,CAACM,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;KACxC,MAAM;MACL,IAAIF,IAAI,KAAK,OAAO,EAAE;QACpB,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;OACnC,MAAM;QACL,IAAI,CAACN,MAAM,CAACM,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;;;EAG9D;EAAC;qBAlBMT,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAU;IAAAC;IAAAC;IAAAC;MAAA;QCRzBC,6BAAyB;QAAAA,iBAAC","names":["AppComponent","constructor","authService","router","redirectUser","isLoggedIn","c","role","getRole","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\app.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from './authentication/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n})\nexport class AppComponent {\n    constructor(private authService: AuthService, private router: Router) {\n        this.redirectUser();\n      }\n\n      private redirectUser() {\n        const isLoggedIn = this.authService.c(); // âœ… Check if user is logged in\n        const role = this.authService.getRole();\n    \n        if (!isLoggedIn) {\n          this.router.navigate(['/auth/login']); // ðŸ”´ Redirect to login if not logged in\n        } else {\n          if (role === 'Admin') {\n            this.router.navigate(['/admin']); // âœ… Admins go to Admin panel\n          } else {\n            this.router.navigate(['/QRCodeGenerator/qrgenerator']); // âœ… Users go to QR page\n          }\n        }\n      }\n    \n}\n","<app-layout></app-layout>>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}