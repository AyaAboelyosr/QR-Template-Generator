{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/qrtemplategenerator/services/template.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"angular-custom-modal\";\nimport * as i5 from \"@angular/router\";\nconst _c0 = [\"addSectionModal\"];\nconst _c1 = [\"addFieldModal\"];\nfunction TemplateDetailsComponent_div_0_div_13_div_18_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 35);\n    i0.ɵɵtext(1, \" Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_div_13_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"div\")(3, \"span\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 31);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TemplateDetailsComponent_div_0_div_13_div_18_span_7_Template, 2, 0, \"span\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 20)(9, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_div_18_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const field_r14 = restoredCtx.$implicit;\n      const section_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.editField(section_r12, field_r14));\n    });\n    i0.ɵɵtext(10, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_div_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const field_r14 = restoredCtx.$implicit;\n      const section_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.deleteField(section_r12, field_r14.id));\n    });\n    i0.ɵɵtext(12, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const field_r14 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(field_r14.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", field_r14.type, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r14.isRequired);\n  }\n}\nfunction TemplateDetailsComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"h3\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.editSection(ctx_r21.template.id, section_r12));\n    });\n    i0.ɵɵtext(8, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.deleteSection(ctx_r23.template.id, section_r12.id));\n    });\n    i0.ɵɵtext(10, \" Delete \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 23)(12, \"div\", 24)(13, \"h4\", 25);\n    i0.ɵɵtext(14, \"Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_div_13_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const section_r12 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.editField(section_r12));\n    });\n    i0.ɵɵtext(16, \" Add Field \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 27);\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_0_div_13_div_18_Template, 13, 3, \"div\", 28);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r12 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", section_r12.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", section_r12.type, \")\");\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", section_r12.fields);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.sectionParams.controls[\"id\"].value ? \"Edit Section\" : \"Add Section\");\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_21_div_5_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.sectionParams.controls[\"title\"].errors == null ? null : ctx_r25.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_21_div_16_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.sectionParams.controls[\"title\"].errors == null ? null : ctx_r26.sectionParams.controls[\"title\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateDetailsComponent_div_0_ng_template_21_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.saveSection());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 39);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 40);\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_0_ng_template_21_div_5_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\");\n    i0.ɵɵelement(11, \"input\", 42);\n    i0.ɵɵtext(12, \" Form \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵelement(14, \"input\", 43);\n    i0.ɵɵtext(15, \" Table \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(16, TemplateDetailsComponent_div_0_ng_template_21_div_16_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 44)(18, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_ng_template_21_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r30);\n      i0.ɵɵnextContext();\n      const _r2 = i0.ɵɵreference(18);\n      return i0.ɵɵresetView(_r2.close());\n    });\n    i0.ɵɵtext(19, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 46);\n    i0.ɵɵtext(21, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r6.sectionParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.sectionParams.controls[\"title\"].invalid && ctx_r6.sectionParams.controls[\"title\"].touched);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.sectionParams.controls[\"title\"].invalid && ctx_r6.sectionParams.controls[\"title\"].touched);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.fieldParams.controls[\"id\"].value ? \"Edit Field\" : \"Add Field\");\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title cannot be more than 100 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵtemplate(2, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_2_Template, 2, 0, \"div\", 48);\n    i0.ɵɵtemplate(3, TemplateDetailsComponent_div_0_ng_template_27_div_5_div_3_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r32.fieldParams.controls[\"title\"].errors == null ? null : ctx_r32.fieldParams.controls[\"title\"].errors[\"maxlength\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, TemplateDetailsComponent_div_0_ng_template_27_div_18_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r33.fieldParams.controls[\"type\"].errors == null ? null : ctx_r33.fieldParams.controls[\"type\"].errors[\"required\"]);\n  }\n}\nfunction TemplateDetailsComponent_div_0_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 37);\n    i0.ɵɵlistener(\"ngSubmit\", function TemplateDetailsComponent_div_0_ng_template_27_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.saveField());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 49);\n    i0.ɵɵtext(3, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 50);\n    i0.ɵɵtemplate(5, TemplateDetailsComponent_div_0_ng_template_27_div_5_Template, 4, 3, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38)(7, \"label\", 51);\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 52)(10, \"option\", 53);\n    i0.ɵɵtext(11, \"Text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 54);\n    i0.ɵɵtext(13, \"Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 55);\n    i0.ɵɵtext(15, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 56);\n    i0.ɵɵtext(17, \"Boolean\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, TemplateDetailsComponent_div_0_ng_template_27_div_18_Template, 2, 1, \"div\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 38)(20, \"label\", 57);\n    i0.ɵɵtext(21, \"Required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 44)(24, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_ng_template_27_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r39);\n      i0.ɵɵnextContext();\n      const _r7 = i0.ɵɵreference(24);\n      return i0.ɵɵresetView(_r7.close());\n    });\n    i0.ɵɵtext(25, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 46);\n    i0.ɵɵtext(27, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r11.fieldParams);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.fieldParams.controls[\"title\"].invalid && ctx_r11.fieldParams.controls[\"title\"].touched);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.fieldParams.controls[\"type\"].invalid && ctx_r11.fieldParams.controls[\"type\"].touched);\n  }\n}\nfunction TemplateDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\")(3, \"h2\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\", 5);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵtext(11, \" Back to List \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 7);\n    i0.ɵɵtemplate(13, TemplateDetailsComponent_div_0_div_13_Template, 19, 3, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TemplateDetailsComponent_div_0_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.editSection(ctx_r41.template.id));\n    });\n    i0.ɵɵtext(16, \" Add New Section \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"modal\", 11, 12);\n    i0.ɵɵtemplate(19, TemplateDetailsComponent_div_0_ng_template_19_Template, 2, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(21, TemplateDetailsComponent_div_0_ng_template_21_Template, 22, 3, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"modal\", 11, 15);\n    i0.ɵɵtemplate(25, TemplateDetailsComponent_div_0_ng_template_25_Template, 2, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(27, TemplateDetailsComponent_div_0_ng_template_27_Template, 28, 3, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.template.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID: \", ctx_r0.template.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Unique Code: \", ctx_r0.template.uniqeCode, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.template.sections);\n  }\n}\nexport class TemplateDetailsComponent {\n  set template(value) {\n    this._template = {\n      id: value?.id || 0,\n      title: value?.title || '',\n      uniqeCode: value?.uniqeCode || '',\n      sections: value?.sections || []\n    };\n  }\n  get template() {\n    return this._template;\n  }\n  constructor(fb, templateService) {\n    this.fb = fb;\n    this.templateService = templateService;\n    this.sectionUpdated = new EventEmitter();\n    this.selectedTemplateId = null;\n    this.selectedSectionId = null;\n    this.initSectionForm();\n    this.initFieldForm();\n  }\n  ngOnInit() {\n    console.log('Initialized template:', this.template);\n  }\n  initSectionForm() {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required]\n    });\n  }\n  initFieldForm() {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false]\n    });\n  }\n  editSection(templateId, section) {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initSectionForm();\n    if (section) {\n      this.sectionParams.patchValue({\n        id: section.id,\n        title: section.title,\n        type: section.type\n      });\n    }\n  }\n  saveSection() {\n    if (this.sectionParams.invalid || !this.selectedTemplateId) return;\n    const section = this.sectionParams.value;\n    const dto = {\n      title: section.title,\n      type: this.mapSectionType(section.type)\n    };\n    const operation = section.id ? this.templateService.updateSection(this.selectedTemplateId.toString(), section.id.toString(), dto) : this.templateService.addSection(this.selectedTemplateId.toString(), dto);\n    operation.subscribe({\n      next: result => this.handleSectionSuccess(result, !!section.id),\n      error: error => this.handleErrorResponse(error)\n    });\n  }\n  handleSectionSuccess(section, isUpdate) {\n    const index = this.template.sections.findIndex(s => s.id === section.id);\n    if (isUpdate && index > -1) {\n      this.template.sections = [...this.template.sections.slice(0, index), section, ...this.template.sections.slice(index + 1)];\n    } else if (!isUpdate) {\n      this.template.sections = [...this.template.sections, section];\n    }\n    this.showMessage(`Section ${isUpdate ? 'updated' : 'added'} successfully`);\n    this.addSectionModal.close();\n    this.sectionUpdated.emit();\n  }\n  deleteSection(templateId, sectionId) {\n    this.templateService.deleteSection(templateId.toString(), sectionId.toString()).subscribe({\n      next: () => {\n        this.template.sections = this.template.sections.filter(s => s.id !== sectionId);\n        this.showMessage('Section deleted successfully');\n        this.sectionUpdated.emit();\n      },\n      error: error => this.showMessage(error, 'error')\n    });\n  }\n  // Field Methods\n  editField(section, field) {\n    this.selectedSectionId = section.id;\n    this.selectedTemplateId = this.getTemplateIdBySectionId(section.id);\n    this.addFieldModal.open();\n    this.initFieldForm();\n    if (field) {\n      this.fieldParams.patchValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired\n      });\n    }\n  }\n  saveField() {\n    if (this.fieldParams.invalid || !this.selectedTemplateId || !this.selectedSectionId) return;\n    const field = this.fieldParams.value;\n    const dto = {\n      title: field.title,\n      type: this.mapFieldType(field.type),\n      isRequired: field.isRequired\n    };\n    const sectionIndex = this.template.sections.findIndex(s => s.id === this.selectedSectionId);\n    if (sectionIndex === -1) return;\n    const operation = field.id ? this.templateService.updateField(this.selectedTemplateId.toString(), this.selectedSectionId.toString(), field.id.toString(), dto) : this.templateService.addField(this.selectedTemplateId.toString(), this.selectedSectionId.toString(), dto);\n    operation.subscribe({\n      next: result => this.handleFieldSuccess(result, sectionIndex, !!field.id),\n      error: error => this.handleErrorResponse(error)\n    });\n  }\n  handleFieldSuccess(field, sectionIndex, isUpdate) {\n    const section = this.template.sections[sectionIndex];\n    if (!section.fields) {\n      section.fields = [];\n    }\n    const fieldIndex = section.fields.findIndex(f => f.id === field.id);\n    if (isUpdate && fieldIndex > -1) {\n      section.fields = [...section.fields.slice(0, fieldIndex), field, ...section.fields.slice(fieldIndex + 1)];\n    } else if (!isUpdate) {\n      section.fields = [...section.fields, field];\n    }\n    this.showMessage(`Field ${isUpdate ? 'updated' : 'added'} successfully`);\n    this.addFieldModal.close();\n    this.sectionUpdated.emit();\n  }\n  deleteField(section, fieldId) {\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    if (!templateId) return;\n    this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString()).subscribe({\n      next: () => {\n        const sectionIndex = this.template.sections.findIndex(s => s.id === section.id);\n        if (sectionIndex > -1) {\n          const updatedFields = this.template.sections[sectionIndex].fields?.filter(f => f.id !== fieldId) || [];\n          this.template.sections[sectionIndex].fields = updatedFields;\n          this.showMessage('Field deleted successfully');\n          this.sectionUpdated.emit();\n        }\n      },\n      error: error => this.showMessage(error, 'error')\n    });\n  }\n  // Helpers\n  getTemplateIdBySectionId(sectionId) {\n    return this.template.sections.some(s => s.id === sectionId) ? this.template.id : undefined;\n  }\n  mapSectionType(type) {\n    return {\n      'Form': 0,\n      'Table': 1\n    }[type] ?? 0;\n  }\n  mapFieldType(type) {\n    return {\n      'Text': 0,\n      'Number': 1,\n      'Date': 2,\n      'Boolean': 3\n    }[type] ?? 0;\n  }\n  showMessage(msg, type = 'success') {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: {\n        container: 'toast'\n      }\n    });\n  }\n  handleErrorResponse(error) {\n    console.error('Error:', error);\n    this.showMessage(error.error?.message || 'An unexpected error occurred', 'error');\n  }\n  static #_ = this.ɵfac = function TemplateDetailsComponent_Factory(t) {\n    return new (t || TemplateDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TemplateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplateDetailsComponent,\n    selectors: [[\"app-template-details\"]],\n    viewQuery: function TemplateDetailsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addSectionModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addFieldModal = _t.first);\n      }\n    },\n    inputs: {\n      template: \"template\"\n    },\n    outputs: {\n      sectionUpdated: \"sectionUpdated\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"container mx-auto p-6\", 4, \"ngIf\"], [1, \"container\", \"mx-auto\", \"p-6\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-6\"], [1, \"text-2xl\", \"font-bold\"], [1, \"mt-2\", \"text-gray-600\"], [1, \"mr-4\"], [\"routerLink\", \"/admin/templates\", 1, \"btn\", \"btn-outline-primary\"], [1, \"mt-8\", \"space-y-6\"], [\"class\", \"card shadow-lg\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-8\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"no-footer\"], [\"addSectionModal\", \"\"], [\"modalHeader\", \"\"], [\"modalBody\", \"\"], [\"addFieldModal\", \"\"], [1, \"card\", \"shadow-lg\"], [1, \"card-header\", \"flex\", \"justify-between\", \"items-center\", \"bg-gray-100\"], [1, \"text-xl\", \"font-semibold\"], [1, \"text-sm\", \"text-gray-500\"], [1, \"flex\", \"gap-2\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"card-body\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-4\"], [1, \"font-medium\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"space-y-4\"], [\"class\", \"field-item border rounded p-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"field-item\", \"border\", \"rounded\", \"p-4\"], [1, \"flex\", \"justify-between\", \"items-center\"], [1, \"text-sm\", \"text-gray-500\", \"ml-2\"], [\"class\", \"badge bg-orange-100 text-orange-600 ml-2\", 4, \"ngIf\"], [1, \"btn\", \"btn-xs\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-xs\", \"btn-danger\", 3, \"click\"], [1, \"badge\", \"bg-orange-100\", \"text-orange-600\", \"ml-2\"], [1, \"!font-medium\"], [\"ngNativeValidate\", \"\", 1, \"text-sm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-5\"], [\"for\", \"sectionTitle\"], [\"id\", \"sectionTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"class\", \"text-red-500\", 4, \"ngIf\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"form\"], [\"type\", \"radio\", \"formControlName\", \"type\", \"value\", \"table\"], [1, \"mt-8\", \"flex\", \"items-center\", \"justify-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"ltr:ml-4\", \"rtl:ml-4\"], [1, \"text-red-500\"], [4, \"ngIf\"], [\"for\", \"fieldTitle\"], [\"id\", \"fieldTitle\", \"type\", \"text\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-input\"], [\"for\", \"fieldType\"], [\"id\", \"fieldType\", \"formControlName\", \"type\", 1, \"form-select\"], [\"value\", \"Text\"], [\"value\", \"Number\"], [\"value\", \"Date\"], [\"value\", \"Boolean\"], [\"for\", \"isRequired\"], [\"id\", \"isRequired\", \"type\", \"checkbox\", \"formControlName\", \"isRequired\"]],\n    template: function TemplateDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TemplateDetailsComponent_div_0_Template, 29, 4, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.template);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.ModalComponent, i1.FormGroupDirective, i1.FormControlName, i5.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","Swal","i0","TemplateDetailsComponent","template","value","_template","id","title","uniqeCode","sections","constructor","fb","templateService","initSectionForm","initFieldForm","ngOnInit","console","log","sectionParams","group","required","minLength","maxLength","type","fieldParams","isRequired","editSection","templateId","section","selectedTemplateId","addSectionModal","open","patchValue","saveSection","invalid","dto","mapSectionType","operation","updateSection","toString","addSection","subscribe","next","result","handleSectionSuccess","error","handleErrorResponse","isUpdate","index","findIndex","s","slice","showMessage","close","sectionUpdated","emit","deleteSection","sectionId","filter","editField","field","selectedSectionId","getTemplateIdBySectionId","addFieldModal","saveField","mapFieldType","sectionIndex","updateField","addField","handleFieldSuccess","fields","fieldIndex","f","deleteField","fieldId","updatedFields","some","undefined","msg","fire","icon","toast","position","showConfirmButton","timer","customClass","container","message","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.ts","C:\\Users\\Electronica Care\\Downloads\\QRCodeGenerator-main\\QR-Generator\\src\\app\\qrtemplategenerator\\components\\template-details\\template-details.component.html"],"sourcesContent":["import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'angular-custom-modal';\nimport Swal from 'sweetalert2';\nimport { TemplateService } from 'src/app/qrtemplategenerator/services/template.service';\nimport { Template } from 'src/app/qrtemplategenerator/Models/Template';\nimport { Section } from 'src/app/qrtemplategenerator/Models/Section';\nimport { Field } from 'src/app/qrtemplategenerator/Models/Field';\n\n@Component({\n  selector: 'app-template-details',\n  templateUrl: './template-details.component.html'\n})\nexport class TemplateDetailsComponent {\n  private _template!: Template;\n  \n  @Input() \n  set template(value: Template) {\n    this._template = {\n      id: value?.id || 0,\n      title: value?.title || '',\n      uniqeCode: value?.uniqeCode || '',\n      sections: value?.sections || []\n    };\n  }\n  get template(): Template {\n    return this._template;\n  }\n  \n  @Output() sectionUpdated = new EventEmitter<void>();\n  @ViewChild('addSectionModal') addSectionModal!: ModalComponent;\n  @ViewChild('addFieldModal') addFieldModal!: ModalComponent;\n\n  sectionParams!: FormGroup;\n  fieldParams!: FormGroup;\n  selectedSection?: Section;\n  selectedTemplateId: number | null = null;\n  selectedSectionId: number | null = null;\n\n  constructor(private fb: FormBuilder, private templateService: TemplateService) {\n    this.initSectionForm();\n    this.initFieldForm();\n  }\n\n  ngOnInit(): void {\n    console.log('Initialized template:', this.template);\n  }\n\n  private initSectionForm(): void {\n    this.sectionParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n    });\n  }\n\n  private initFieldForm(): void {\n    this.fieldParams = this.fb.group({\n      id: [0],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      type: ['', Validators.required],\n      isRequired: [false],\n    });\n  }\n\n  editSection(templateId: number, section?: Section): void {\n    this.selectedTemplateId = templateId;\n    this.addSectionModal.open();\n    this.initSectionForm();\n    \n    if (section) {\n      this.sectionParams.patchValue({\n        id: section.id,\n        title: section.title,\n        type: section.type,\n      });\n    }\n  }\n\n  saveSection(): void {\n    if (this.sectionParams.invalid || !this.selectedTemplateId) return;\n\n    const section: Section = this.sectionParams.value;\n    const dto = {\n      title: section.title,\n      type: this.mapSectionType(section.type)\n    };\n\n    const operation = section.id \n      ? this.templateService.updateSection(this.selectedTemplateId.toString(), section.id.toString(), dto)\n      : this.templateService.addSection(this.selectedTemplateId.toString(), dto);\n\n    operation.subscribe({\n      next: (result) => this.handleSectionSuccess(result, !!section.id),\n      error: (error) => this.handleErrorResponse(error)\n    });\n  }\n\n  private handleSectionSuccess(section: Section, isUpdate: boolean): void {\n    const index = this.template.sections.findIndex(s => s.id === section.id);\n    \n    if (isUpdate && index > -1) {\n      this.template.sections = [\n        ...this.template.sections.slice(0, index),\n        section,\n        ...this.template.sections.slice(index + 1)\n      ];\n    } else if (!isUpdate) {\n      this.template.sections = [...this.template.sections, section];\n    }\n\n    this.showMessage(`Section ${isUpdate ? 'updated' : 'added'} successfully`);\n    this.addSectionModal.close();\n    this.sectionUpdated.emit();\n  }\n\n  deleteSection(templateId: number, sectionId: number): void {\n    this.templateService.deleteSection(templateId.toString(), sectionId.toString())\n      .subscribe({\n        next: () => {\n          this.template.sections = this.template.sections.filter(s => s.id !== sectionId);\n          this.showMessage('Section deleted successfully');\n          this.sectionUpdated.emit();\n        },\n        error: (error) => this.showMessage(error, 'error')\n      });\n  }\n\n  // Field Methods\n  editField(section: Section, field?: Field): void {\n    this.selectedSectionId = section.id;\n    this.selectedTemplateId = this.getTemplateIdBySectionId(section.id);\n    this.addFieldModal.open();\n    this.initFieldForm();\n    \n    if (field) {\n      this.fieldParams.patchValue({\n        id: field.id,\n        title: field.title,\n        type: field.type,\n        isRequired: field.isRequired,\n      });\n    }\n  }\n\n  saveField(): void {\n    if (this.fieldParams.invalid || !this.selectedTemplateId || !this.selectedSectionId) return;\n\n    const field: Field = this.fieldParams.value;\n    const dto = {\n      title: field.title,\n      type: this.mapFieldType(field.type),\n      isRequired: field.isRequired\n    };\n\n    const sectionIndex = this.template.sections.findIndex(s => s.id === this.selectedSectionId);\n    if (sectionIndex === -1) return;\n\n    const operation = field.id \n      ? this.templateService.updateField(\n          this.selectedTemplateId.toString(),\n          this.selectedSectionId.toString(),\n          field.id.toString(),\n          dto\n        )\n      : this.templateService.addField(\n          this.selectedTemplateId.toString(),\n          this.selectedSectionId.toString(),\n          dto\n        );\n\n    operation.subscribe({\n      next: (result) => this.handleFieldSuccess(result, sectionIndex, !!field.id),\n      error: (error) => this.handleErrorResponse(error)\n    });\n  }\n\n  private handleFieldSuccess(field: Field, sectionIndex: number, isUpdate: boolean): void {\n    const section = this.template.sections[sectionIndex];\n    \n    if (!section.fields) {\n      section.fields = [];\n    }\n\n    const fieldIndex = section.fields.findIndex(f => f.id === field.id);\n    \n    if (isUpdate && fieldIndex > -1) {\n      section.fields = [\n        ...section.fields.slice(0, fieldIndex),\n        field,\n        ...section.fields.slice(fieldIndex + 1)\n      ];\n    } else if (!isUpdate) {\n      section.fields = [...section.fields, field];\n    }\n\n    this.showMessage(`Field ${isUpdate ? 'updated' : 'added'} successfully`);\n    this.addFieldModal.close();\n    this.sectionUpdated.emit();\n  }\n\n  deleteField(section: Section, fieldId: number): void {\n    const templateId = this.getTemplateIdBySectionId(section.id);\n    if (!templateId) return;\n\n    this.templateService.deleteField(templateId.toString(), section.id.toString(), fieldId.toString())\n      .subscribe({\n        next: () => {\n          const sectionIndex = this.template.sections.findIndex(s => s.id === section.id);\n          if (sectionIndex > -1) {\n            const updatedFields = this.template.sections[sectionIndex].fields?.filter(f => f.id !== fieldId) || [];\n            this.template.sections[sectionIndex].fields = updatedFields;\n            this.showMessage('Field deleted successfully');\n            this.sectionUpdated.emit();\n          }\n        },\n        error: (error) => this.showMessage(error, 'error')\n      });\n  }\n\n  // Helpers\n  private getTemplateIdBySectionId(sectionId: number): number | undefined {\n    return this.template.sections.some(s => s.id === sectionId) \n      ? this.template.id \n      : undefined;\n  }\n\n  private mapSectionType(type: string): number {\n    return { 'Form': 0, 'Table': 1 }[type] ?? 0;\n  }\n\n  private mapFieldType(type: string): number {\n    return { 'Text': 0, 'Number': 1, 'Date': 2, 'Boolean': 3 }[type] ?? 0;\n  }\n\n  private showMessage(msg: string, type: 'success' | 'error' = 'success'): void {\n    Swal.fire({\n      icon: type,\n      title: msg,\n      toast: true,\n      position: 'top',\n      showConfirmButton: false,\n      timer: 3000,\n      customClass: { container: 'toast' },\n    });\n  }\n\n  private handleErrorResponse(error: any): void {\n    console.error('Error:', error);\n    this.showMessage(error.error?.message || 'An unexpected error occurred', 'error');\n  }\n}","<div class=\"container mx-auto p-6\" *ngIf=\"template\">\n\n    <!-- Template Header -->\n    <div class=\"flex items-center justify-between mb-6\">\n      <div>\n        <h2 class=\"text-2xl font-bold\">{{ template.title }}</h2>\n        <div class=\"mt-2 text-gray-600\">\n          <span class=\"mr-4\">ID: {{ template.id }}</span>\n          <span>Unique Code: {{ template.uniqeCode }}</span>\n        </div>\n      </div>\n      <button routerLink=\"/admin/templates\" class=\"btn btn-outline-primary\">\n        Back to List\n      </button>\n    </div>\n  \n    <!-- Sections -->\n    <div class=\"mt-8 space-y-6\">\n      <div *ngFor=\"let section of template.sections\" class=\"card shadow-lg\">\n        <div class=\"card-header flex justify-between items-center bg-gray-100\">\n          <h3 class=\"text-xl font-semibold\">\n            {{ section.title }}\n            <span class=\"text-sm text-gray-500\">({{ section.type }})</span>\n          </h3>\n          <div class=\"flex gap-2\">\n            <button (click)=\"editSection(template.id, section)\" class=\"btn btn-sm btn-primary\">\n              Edit\n            </button>\n            <button (click)=\"deleteSection(template.id, section.id)\" class=\"btn btn-sm btn-danger\">\n              Delete\n            </button>\n          </div>\n        </div>\n  \n        <!-- Fields -->\n        <div class=\"card-body\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h4 class=\"font-medium\">Fields</h4>\n            <button (click)=\"editField(section)\" class=\"btn btn-sm btn-success\">\n              Add Field\n            </button>\n          </div>\n  \n          <div class=\"space-y-4\">\n            <div *ngFor=\"let field of section.fields\" class=\"field-item border rounded p-4\">\n              <div class=\"flex justify-between items-center\">\n                <div>\n                  <span class=\"font-medium\">{{ field.title }}</span>\n                  <span class=\"text-sm text-gray-500 ml-2\">({{ field.type }})</span>\n                  <span *ngIf=\"field.isRequired\" class=\"badge bg-orange-100 text-orange-600 ml-2\">\n                    Required\n                  </span>\n                </div>\n                <div class=\"flex gap-2\">\n                  <button (click)=\"editField(section, field)\" class=\"btn btn-xs btn-primary\">\n                    Edit\n                  </button>\n                  <button (click)=\"deleteField(section, field.id)\" class=\"btn btn-xs btn-danger\">\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Add Section Button -->\n    <div class=\"mt-8\">\n      <button (click)=\"editSection(template.id)\" class=\"btn btn-primary\">\n        Add New Section\n      </button>\n    </div>\n  \n    <!-- Include your existing modals here -->\n    <modal #addSectionModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ sectionParams.controls['id'].value ? 'Edit Section' : 'Add Section' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"sectionParams\" class=\"text-sm\" (ngSubmit)=\"saveSection()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"sectionTitle\">Title</label>\n                    <input id=\"sectionTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label>Type</label>\n                    <div>\n                        <label>\n                            <input type=\"radio\" formControlName=\"type\" value=\"form\" /> Form\n                        </label>\n                        <label>\n                            <input type=\"radio\" formControlName=\"type\" value=\"table\" /> Table\n                        </label>\n                    </div>\n                    <div *ngIf=\"sectionParams.controls['title'].invalid && sectionParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"sectionParams.controls['title'].errors?.['required']\">Title is required.</div>\n                    </div>\n                </div>\n                <div class=\"mt-8 flex items-center justify-end\">\n                    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addSectionModal.close()\">Cancel</button>\n                    <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n                </div>\n            </form>\n        </ng-template>\n    </modal>\n    <modal #addFieldModal class=\"no-footer\">\n        <ng-template #modalHeader>\n            <div class=\"!font-medium\">{{ fieldParams.controls['id'].value ? 'Edit Field' : 'Add Field' }}</div>\n        </ng-template>\n        <ng-template #modalBody>\n            <form [formGroup]=\"fieldParams\" class=\"text-sm\" (ngSubmit)=\"saveField()\" ngNativeValidate>\n                <div class=\"mb-5\">\n                    <label for=\"fieldTitle\">Title</label>\n                    <input id=\"fieldTitle\" type=\"text\" placeholder=\"Enter Title\" class=\"form-input\" formControlName=\"title\" />\n                    <div *ngIf=\"fieldParams.controls['title'].invalid && fieldParams.controls['title'].touched\" class=\"text-red-500\">\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['required']\">Title is required.</div>\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['minlength']\">Title must be at least 3 characters long.</div>\n                        <div *ngIf=\"fieldParams.controls['title'].errors?.['maxlength']\">Title cannot be more than 100 characters long.</div>\n                    </div>\n                </div>\n                <div class=\"mb-5\">\n                    <label for=\"fieldType\">Type</label>\n                    \n          <select id=\"fieldType\" class=\"form-select\" formControlName=\"type\">\n            <option value=\"Text\">Text</option>\n            <option value=\"Number\">Number</option>\n            <option value=\"Date\">Date</option>\n            <option value=\"Boolean\">Boolean</option>\n          </select>\n          <div *ngIf=\"fieldParams.controls['type'].invalid && fieldParams.controls['type'].touched\" class=\"text-red-500\">\n            <div *ngIf=\"fieldParams.controls['type'].errors?.['required']\">Type is required.</div>\n          </div>\n        </div>\n        <div class=\"mb-5\">\n          <label for=\"isRequired\">Required</label>\n          <input id=\"isRequired\" type=\"checkbox\" formControlName=\"isRequired\" />\n        </div>\n        <div class=\"mt-8 flex items-center justify-end\">\n          <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"addFieldModal.close()\">Cancel</button>\n          <button type=\"submit\" class=\"btn btn-primary ltr:ml-4 rtl:ml-4\">Save</button>\n        </div>\n      </form>\n    </ng-template>\n  </modal>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}